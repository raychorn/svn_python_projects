#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('../../@lib'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../_django_0_96_2'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('.'),
                        'excludes': [u'management',
                                     u'run-cherry.cmd'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-list = [loc('../makeZip.py')]
proj.file-type = 'normal'
proj.main-file = loc('djangocerise_1_2/webserver.py')
[user attributes]
debug.breakpoints = {loc('../../@lib/vyperlogix/django/cherryPy/djangocerise/__init__.py'): {223: (0,
        None,
        0,
        0)},
                     loc('../../@lib/vyperlogix/django/forms/__init__.py'): {146: (0,
        'len(l) > 0',
        0,
        0),
        150: (0,
              None,
              0,
              0),
        190: (0,
              None,
              0,
              0),
        196: (0,
              None,
              0,
              0)},
                     loc('django/views/default.py'): {21: (0,
        None,
        1,
        0)},
                     loc('djangocerise_1_2/webserver.py'): {16: (0,
        None,
        0,
        0)},
                     loc('../makeZip.py'): {67: (0,
        "f_base.find('djangocerise') > -1",
        0,
        0),
        68: (0,
             "f_base.find('%sdjango%s' % (os.sep,os.sep)) > -1",
             0,
             0),
        87: (0,
             "root.endswith('\\logs')",
             0,
             0)}}
debug.err-values = {loc('../../@lib/vyperlogix/mail/mailServer.py'): {},
                    loc('../../Reverse Proxy/TinyHTTPProxy.py'): {},
                    loc('_django_/djangocerise_1_2/webserver.py'): {},
                    loc('django/djangocerise_1_2/webserver.py'): {},
                    loc('djangocerise_1_2/webserver.py'): {'stack[12].locals'\
        '.self': (-2,
                  None,
                  None,
                  'error',
                  None,
                  1,
                  None,
                  1,
                  '<error handling value>',
                  "Runtime failure details:\nException: <type 'exceptions.At"\
                  "tributeError'>\nValue = 'HashedOrderedList' object has no"\
                  " attribute '_HashedOrderedList__list'\nTraceback (innermo"\
                  "st last):\n  File \"C:\\src\\ide-3.1\\bin\\2.5\\src/debug"\
                  "/tserver\\dbgserver.pyc\", line 2923, in __AddNameSpaceEn"\
                  "tries\n\n  File \"C:\\src\\ide-3.1\\bin\\2.5\\src/debug/t"\
                  "server\\dbgserver.pyc\", line 3031, in __BuildValueWrappe"\
                  "r\n\n  File \"C:\\src\\ide-3.1\\bin\\2.5\\src/debug/tserv"\
                  "er\\dbgserver.pyc\", line 3622, in __IsHugeValue\n\n  Fil"\
                  "e \"C:\\src\\ide-3.1\\bin\\2.5\\src/debug/tserver\\dbgser"\
                  "ver.pyc\", line 3609, in __IsHugeDict\n\n  File \"Z:\\pyt"\
                  "hon projects\\@lib\\vyperlogix\\hash\\lists.py\", line 37"\
                  "2, in keys\n    return [n[0] for n in self.__list]\n",
                  None,
                  0)},
                    loc('manage.py'): {},
                    loc('../makeZip.py'): {}}
debug.run-args = {loc('../../Reverse Proxy/TinyHTTPProxy.py'): '8888 --hosts'\
        ' "127.0.0.1:8880,127.0.0.1:8881,127.0.0.1:8882"',
                  loc('_django_/djangocerise_1_2/webserver.py'): '--conf myp'\
        'rojectconf --host 127.0.0.1:8888',
                  loc('django/djangocerise_1_2/webserver.py'): '--conf mypro'\
        'jectconf --host 127.0.0.1:8888',
                  loc('djangocerise_1_2/webserver.py'): '--conf myprojectcon'\
        'f --host 127.0.0.1:8888',
                  loc('manage.py'): 'syncdb --settings=settings',
                  loc('../makeZip.py'): 'Z:\\python projects\\_django-projec'\
        'ts'}
debug.var-col-widths = [0.56068376068376069,
                        0.43931623931623931]
edit.dont-ask-to-fix-inconsistent-indents = {loc('../../../@myMagma/python-local-projects/LeadsImporter_GUI/LeadsImporter.py'): True,
        loc('../../@lib/vyperlogix/daemon/daemon.py'): True,
        loc('../../@lib/vyperlogix/django/django_utils.py'): True,
        loc('../../@lib/vyperlogix/django/pages.py'): True,
        loc('../../@lib/vyperlogix/html/myOOHTML.py'): True,
        loc('../../@lib/vyperlogix/lists/ListWrapper.py'): True,
        loc('../../@lib/vyperlogix/mail/message.py'): True,
        loc('../../@lib/vyperlogix/misc/_utils.py'): True,
        loc('../../@lib/vyperlogix/misc/threadpool.py'): True,
        loc('../../@lib/vyperlogix/oodb/__init__.py'): True,
        loc('../../@lib/vyperlogix/products/keys.py'): True,
        loc('../../@lib/vyperlogix/sql/sqlalchemy/SQLAgent.py'): True,
        loc('../../@lib/lib/django/pages.py'): True,
        loc('../../@lib/lib/html/myOOHTML.py'): True,
        loc('views/default.py'): True,
        loc('../magma_molten/views/default.py'): True,
        loc('../makeZip.py'): True}
edit.show-tab-force-warning = False
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'RaP6zKYveu6RwOAy44Do3yGtVx'\
        '2mM2uV',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [0,
                                   2],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               1,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': 0,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(0,),
        (1,),
        (2,),
        (3,)],
                                 'selected-nodes': [(3,
        1)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../@lib/lib/classes/SmartObject.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../@lib/lib/classes/SmartObject.py'),
                      'real_k')]},
        loc('../../@lib/lib/misc/_utils.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../@lib/lib/misc/_utils.py'),
                      'failIfEqual')]},
        loc('../../pyEggs/cython_templates.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../pyEggs/cython_templates.py'),
                      'cmd_template')]},
        loc('../../pyEggs/pyEggs.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../pyEggs/pyEggs.py'),
                      'args')]},
        loc('file:c:/Python25/Lib/optparse.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Python25/Lib/optparse.py'),
                      'AmbiguousOptionError')]},
        loc('file:c:/Python25/Lib/os.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Python25/Lib/os.py'),
                      'getenv')]},
        loc('../../@lib/lib/django/django_utils.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../@lib/lib/django/django_utils.py'),
                      'parse_url_parms')]},
        loc('../../@lib/lib/django/pages.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../@lib/lib/django/pages.py'),
                      'formatTimeStr')]},
        loc('../../@lib/lib/html/myOOHTML.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../@lib/lib/html/myOOHTML.py'),
                      'Html')]},
        loc('../../@lib/lib/sockets/proxies/TinyHTTPProxy.py'): {'column-wid'\
        'ths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../@lib/lib/sockets/proxies/TinyHTTPProxy.py'),
                      'start_VyperProxy')]},
        loc('../../Reverse Proxy/TinyHTTPProxy.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Reverse Proxy/TinyHTTPProxy.py'),
                      'allowed')]},
        loc('djangocerise_1_2/myprojectconf.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('djangocerise_1_2/myprojectconf.py'),
                      'DAEMON_RUN_DIR')]},
        loc('djangocerise_1_2/webserver.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('djangocerise_1_2/webserver.py'),
                      'change_uid_gid')]},
        loc('run-cherry.cmd'): {'column-widths': [1.0],
                                'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': None},
        loc('../../_django_0_96_2/django/conf/__init__.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../_django_0_96_2/django/conf/app_template/__init__.py'),
                      '')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('templates',
                               'tall',
                               0,
                               {'tree-states': {u'c': [],
        u'html': [],
        u'py': [['properties_idiom',
                 'all',
                 '']]}})],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.39436619718309862,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {u'file:C:/Apache228/htdocs/pyeggs/manage.py': [''\
        'import sys\n',
        'sys.path\n'],
                                   u'file:Z:/python projects/_django-projects/magmaSync/djangocerise_1_2/webserver.py': [''\
        'from magmaSync imort settings\n',
        'import magmaSync.settings\n',
        'fOut.name\n',
        '_utils.today_localtime()\n'],
                                   u'file:Z:/python projects/_django-projects/magma_sync/_django_/djangocerise_1_2/webserver.py': [''\
        'from magma_sync._django_ import settings\n',
        'from _django_ import settings\n',
        'import magma_sync._django_.settings\n',
        'import _django_.settings\n'],
                                   u'file:Z:/python projects/_django-projects/magma_sync/django/djangocerise_1_2/webserver.py': [''\
        'from vyperlogix.lists.ListWrapper import ListWrapper\n',
        's = ListWrapper(sys.path)\n',
        's.findFirstContaining(fpath)\n',
        's.findAllContaining(fpath)\n',
        'l = list(set(s.findAllContaining(fp)))\n',
        's.sort()\n',
        'from vyperlogix import misc\n',
        'misc.sort(l)\n',
        's.copy()\n',
        's.findFirstContaining(item)\n',
        'import settings\n',
        'import sys\n',
        'sys.path\n',
        'from django import settings\n',
        'from magma_sync import settings\n'],
                                   u'file:Z:/python projects/_django-projects/vyperlogix/djangocerise_1_2/webserver.py': [''\
        'options\n'],
                                   u'file:Z:/python projects/_django-projects/vyperlogix/manage.py': [""\
        "toks = [urllib.unquote_plus(t) for t in request.path.split('/') if "\
        "(len(t) > 0)]\n",
        'from settings import _navigation_tabs\n',
        'item[0]\n',
        'urlpatterns[0][0]\n',
        'urlpatterns[0].url_patterns\n',
        'urlpatterns[0].url_patterns[0]\n'],
                                   u'file:Z:/python projects/pyEggs/benchmark1.py': [''\
        'z[0:100]\n',
        'regexer2(s)\n'],
                                   u'file:Z:/python projects/pyEggs/pyEggs.py': [''\
        'import sys\n',
        'sys.path\n',
        "'\\n'.join(sys.path)\n",
        "','.join(sys.path)\n",
        "', '.join(sys.path)\n",
        'os.listdir(root)\n',
        'rejecting_re.search(n).group()\n',
        'rejecting_re.search(n)\n',
        'os.sep.join(root.split(os.sep)[0:-1])\n',
        'type(zip)\n',
        'from lib.misc.ObjectTypeName import typeName\n',
        'typeName(zip)\n',
        'zip.__class__\n',
        'str(zip.__class__).split()[-1][1:-2]\n',
        'str(zip.__class__).split()[-1]\n',
        'src_analysis.asDict()\n',
        '_src_analysis.has_key(_f)\n',
        "_f.find('\\\\')\n",
        'foo = src_analysis.asDict()\n',
        'foo.has_key(_f)\n',
        "_f = os.sep.join(f.split('/').insert(0,''))\n",
        "foo = f.split('/')\n",
        "foo.insert(0,'')\n",
        'foo\n',
        '_f\n',
        '_src_analysis[_f]\n',
        'k\n',
        'v\n',
        'sys.argv[-1]\n',
        'args.keys()[0]\n',
        'sys.argv\n',
        'os.path.exists(_lib_dest)\n',
        "[f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os.path.sp"\
        "litext(f)[-1] == '.egg')]\n",
        "_eggs = [f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os"\
        ".path.splitext(f)[-1] == '.egg')]\n",
        "e_egg = [f for f in _eggs if (f.startswith('e'))][0]\n",
        "n_egg = [f for f in _eggs if (not f.startswith('e'))][0]\n",
        "keys = [k for k in d_analysis.keys() if (k.startswith('ext/')) or ("\
        "k.startswith('EGG-INFO/'))]\n",
        'keys\n',
        "contents = zip.read('EGG-INFO/SOURCES.txt')\n",
        "foo = contents.split('\\n')\n",
        "l_contents = contents.split('\\n')\n",
        'del foo\n',
        'keys = d_analysis.keys()\n',
        's1 = set(l_contents)\n',
        's1 = set()\n',
        '[s1.add(l) for l in l_contents]\n',
        's1 - set(keepers)\n',
        'new_list = list(set(l_contents) - (set(l_contents) - set(keepers)))'\
        '\n',
        "new_contents = '\\n'.join(new_list)\n"],
                                   u'file:c:/Apache228/htdocs/pyeggs/manage.py': [''\
        'settings.DATABASE_HOST\n'],
                                   u'file:z:/python projects/@lib/vyperlogix/mail/mailServer.py': [''\
        'e\n',
        'msg0.html_body\n'],
                                   u'file:z:/python projects/_django-projects/makeZip.py': [''\
        'from vyperlogix.hash import lists\n'],
                                   u'file:z:/python projects/_django-projects/vyperlogix/djangocerise_1_2/webserver.py': [""\
        "request.POST['firstname']\n",
        'a = {1:1}\n',
        'b = {2:2}\n',
        'a = lists.HashedLists2(a)\n',
        'b = lists.HashedLists2(b)\n',
        'a\n',
        'a+b\n',
        'c=a+b\n',
        'c.keys()\n',
        'c.values()\n',
        'c.asDict()\n',
        'request.POST\n',
        'type(self.fields)\n',
        'self.fields.keyOrder()\n',
        'v.widget.render()\n',
        'str(v.widget)\n',
        'k.upper()\n',
        'v.required\n',
        "f.fields['firstname']\n",
        'ObjectTypeName.typeClassName(v)\n',
        'v.queryset[0]\n',
        'v.queryset[0].keys()\n',
        'v.queryset[0].objects()\n',
        'v.queryset[0].objects\n',
        'v.queryset[0].__dict__\n',
        'h.toHtml()\n',
        'from vyperlogix.misc import ObjectTypeName\n',
        'ObjectTypeName.typeClassName(aList)\n',
        'aList.count\n',
        'aList.count()\n',
        'aList[0]\n',
        '[aList[i] for i in xrange(0,aList.count())]\n',
        'item\n',
        'item._meta\n',
        'item._meta.db_table\n',
        'item._meta.fields\n',
        'item.__dict__\n',
        'from vyperlogix.classes.SmartObject import SmartObject\n',
        'SmartObject.fromDict(item.__dict__)\n',
        'SmartObject().fromDict(item.__dict__)\n',
        's = SmartObject().fromDict(item.__dict__)\n',
        's = SmartObject(item.__dict__)\n',
        's\n',
        'form_html\n',
        'User.objects.get(email_address=email_address)\n',
        'request.POST.keys()\n',
        "request.environ['HTTP_HOST']\n",
        "c = Context({'current_year': _yyyy})\n",
        'html_footer\n',
        'details.message\n',
        'field.label\n',
        "country_field = form_registration.get_model_choice_field_by_name('c"\
        "ountry')\n",
        'country_field.queryset\n',
        'type(country_field.queryset)\n',
        'country_field.queryset.filter(iso3=country)\n',
        'aCountry = country_field.queryset.filter(iso3=country)\n',
        'aCountry.id\n',
        'aCountry.__dict__\n',
        "aCountry['id']\n",
        'aCountry.count\n',
        'aCountry.count()\n',
        'aCountry.model\n',
        'aCountry.values\n',
        'aCountry.values()\n',
        "aCountry.values()['id']\n",
        "aCountry.values()[0]['id']\n",
        "keys._decode('7065656B61623030')\n",
        "msg.toAddList = ['raychorn@hotmail.com']\n",
        'msg.message\n',
        'f.form_name\n',
        'self.fields.has_key(field_name)\n',
        "aField.value = ''\n",
        'field_name.upper()\n',
        'self.model.__dict__\n',
        'self.model.__dict__.keys()\n',
        "self.model.__dict__['email_address']\n",
        'self.model.pk\n',
        "f = self.fields['email_address']\n",
        'f.__dict__\n',
        'self.model.mro\n',
        'self.model.mro()\n',
        'self.model._meta\n',
        'self.model._meta.pk\n',
        'pk = self.model._meta.pk\n',
        'kw = {pk.label:1}\n',
        'kw = {pk.formfield:1}\n',
        'pk.formfield\n',
        'pk.formfield().label\n',
        'pk.formfield().value\n',
        'pk.formfield()\n',
        'self.model()\n',
        'anObj = self.model()\n',
        "anObj['firstname'] = -1\n",
        "anObj.__setattr__('firstname',1)\n",
        'self.fields\n',
        'form.email_fields\n',
        'self.fields.keyOrder\n',
        'n % 2\n',
        'users = User.objects.get(email_address=activation_key)\n',
        "activation_email, product_name = activation_key.split(',')\n"]},
                       'sel-line': 4,
                       'sel-line-start': 156,
                       'selection_end': 160,
                       'selection_start': 160}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['from lib.misc import ObjectTypeNa'\
        'me\n',
        'ObjectTypeName.typeName(_re)\n',
        'isinstance(_re,_sre.SRE_Pattern)\n',
        'import types\n',
        "os.listdir('C:/@1b')\n",
        "os.listdir('C:/@1b') == []\n",
        'import cython_templates\n',
        'cython_templates.template1\n',
        'os.getcwd()\n',
        'foo = [1,2,3,4,5]\n',
        'bar = [2,3]\n',
        'foo=set(foo)\n',
        'bar=set(bar)\n',
        'bar\n',
        'bar=set(1,2,4,5,6,7,8])\n',
        'bar=set([1,2,4,5,6,7,8])\n',
        'foo-bar\n',
        '[1,2,3] + [4,5,6]\n',
        'set([1,2,3]) + set([4,5,6])\n',
        'set([1,2,3]) and set([4,5,6])\n',
        'list(set([1,2,3] + [4,5,6]))\n',
        'list(set([1,2,3,4] + [3,4,5,6]))\n',
        "os.path.splitext('a.123')\n",
        'import tempfile\n',
        "foo = tempfile.mkstemp('zip','new','xxxxx')\n",
        "foo = tempfile.mkstemp('zip','new')\n",
        'foo\n',
        'foo[0].close()\n',
        'os.close(foo[0])\n',
        'os.remove(foo[-1])\n',
        'from lib.misc import _utils\n',
        'import os\n',
        'from lib.hash import lists\n',
        'import socket\n',
        'socket.gethostname\n',
        'socket.gethostname()\n',
        'socket.gethostbyname(socket.gethostname())\n',
        'socket.gethostbyname_ex(socket.gethostname())\n',
        "r'C:\\Inetpub\\vhosts\\vyperlogix.com\\httpdocs\\site'\n",
        "tuple('/','Home','')\n",
        "tuple(['/','Home',''])\n",
        'from lib.html import myOOHTML as oohtml\n',
        'i = 80\n',
        'str(i)\n',
        'GenPasswd.GenPasswd(length=len(_SECRET_KEY),chars=GenPasswd.string.'\
        'printable)\n',
        'GenPasswd.GenPasswd(length=64,chars=GenPasswd.string.printable)\n',
        'import string\n',
        'string.letters + string.digits + string.punctuation\n',
        'reload(GenPasswd)\n',
        'GenPasswd.GenPasswd(length=128,chars=GenPasswd.string.printable)\n',
        'from vyperlogix.wsgi.wsgiserver import CherryPyWSGIServer as Server'\
        '\n',
        'from vyperlogix.sockets.wsgi.wsgiserver import CherryPyWSGIServer a'\
        's Server\n',
        'from django.newforms import form_for_model, form_for_instance, save'\
        '_instance, BaseForm, Form, CharField\n',
        'from models import User\n',
        'from vyperlogix.views.models import User\n',
        'h.tagSTYLE(rel="stylesheet", href="http://media.vyperlogix.com/jque'\
        'ry/validator/styles.css", type="text/css")\n',
        "h.tagSTYLE('', rel=\"stylesheet\", href=\"http://media.vyperlogix.c"\
        "om/jquery/validator/styles.css\", type=\"text/css\")\n",
        "h.tagLINK('',rel=\"stylesheet\", href=\"http://media.vyperlogix.com"\
        "/jquery/validator/styles.css\", type=\"text/css\")\n",
        'reload(oohtml)\n',
        'h.tagLINK(rel="stylesheet", href="http://media.vyperlogix.com/jquer'\
        'y/validator/styles.css", type="text/css")\n',
        'h.toHtml()\n',
        'from vyperlogix.misc import _utils\n',
        '_utils.timeStampLocalTimeForFileName()\n',
        'from vyperlogix.django.middleware import LoggingMiddleware\n',
        '_utils.utcDelta()\n',
        '_utils.utcDelta().hours()\n',
        'd = _utils.utcDelta()\n',
        'd.seconds()\n',
        'd.seconds\n',
        'd.hours\n',
        'str(d)\n',
        'd.seconds / 3600\n',
        "' %04d' % (d.seconds / 3600)\n",
        "' %04d' % (d.seconds / 3600) * 100\n",
        "' %04d' % ((d.seconds / 3600) * 100)\n",
        'from vyperlogix.misc import threadpool\n',
        'from vyperlogix.hash import lists\n',
        'd = lists.HashedOrderedList()\n',
        'from vyperlogix.mail.validateEmail import validateEmail\n',
        'from django.newforms.forms import SortedDictFromList\n',
        'from vyperlogix.django.forms.fields import fields_from_model\n',
        'from vyperlogix.django import forms\n',
        'from vyperlogix.django.forms import fields\n',
        'from vyperlogix.html import myOOHTML as oohtml\n',
        'h = oohtml.Html()\n',
        'from vyperlogix.classes.SmartObject import SmartObject\n',
        'from vyperlogix.misc import ObjectTypeName\n',
        'from vyperlogix.mail.message import Message\n',
        'from vyperlogix.daemon.daemon import Log\n',
        "keys._encode('peekab00')\n",
        "keys._encode('peekaboo')\n",
        'from django.db import models\n',
        'from vyperlogix.mail.server import GMailServer\n',
        'from vyperlogix.mail.mailServer import GMailServer\n',
        "keys._encode('raychorn@hotmail.com')\n",
        'from vyperlogix.products import keys\n',
        "keys._decode('7065656B61623030')\n",
        "keys._decode('7065656B61626F6F')\n",
        'from vyperlogix.misc import GenPasswd\n',
        'GenPasswd.GenPasswd(length=128,chars=GenPasswd.chars_printable)\n']},
                       'sel-line': 2,
                       'sel-line-start': 148,
                       'selection_end': 152,
                       'selection_start': 152}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'views',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': '..\\..',
                                  'fRecursive': True,
                                  'fType': 'location'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'media.vyperlogix.com',
                                       'fReverse': False,
                                       'fSearchText': u'import_hook',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': '',
                       'recent-filters': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'column-widths': [0.56155143338954472,
        0.43844856661045534],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('djangocerise_1_2/myprojectconf.py'),
        {'attrib-starts': [],
         'first-line': 0,
         'folded-linenos': [],
         'sel-line': 11,
         'sel-line-start': 240,
         'selection_end': 259,
         'selection_start': 259},
        1233354596.007),
        (loc('../../_django_0_96_2/django/conf/__init__.py'),
         {'attrib-starts': [('Settings',
                             69),
                            ('Settings.__init__',
                             70)],
          'first-line': 48,
          'folded-linenos': [],
          'sel-line': 82,
          'sel-line-start': 3167,
          'selection_end': 3167,
          'selection_start': 3167},
         1233354657.7249999),
        (loc('../../_django_0_96_2/django/conf/__init__.py'),
         {'attrib-starts': [('Settings',
                             69),
                            ('Settings.__init__',
                             70)],
          'first-line': 48,
          'folded-linenos': [],
          'sel-line': 82,
          'sel-line-start': 3167,
          'selection_end': 3167,
          'selection_start': 3167},
         1233354701.1300001),
        (loc('djangocerise_1_2/myprojectconf.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 11,
          'sel-line-start': 240,
          'selection_end': 268,
          'selection_start': 268},
         1233354783.691),
        (loc('../../_django_0_96_2/django/conf/__init__.py'),
         {'attrib-starts': [('Settings',
                             69),
                            ('Settings.__init__',
                             70)],
          'first-line': 48,
          'folded-linenos': [],
          'sel-line': 82,
          'sel-line-start': 3167,
          'selection_end': 3167,
          'selection_start': 3167},
         1233354801.9100001),
        (loc('../../_django_0_96_2/django/conf/__init__.py'),
         {'attrib-starts': [('Settings',
                             69),
                            ('Settings.__init__',
                             70)],
          'first-line': 48,
          'folded-linenos': [],
          'sel-line': 80,
          'sel-line-start': 3071,
          'selection_end': 3099,
          'selection_start': 3089},
         1233354808.2690001),
        (loc('settings.py'),
         {'attrib-starts': [],
          'first-line': 55,
          'folded-linenos': [],
          'sel-line': 78,
          'sel-line-start': 3778,
          'selection_end': 3792,
          'selection_start': 3791},
         1233354961.5940001),
        (loc('settings.py'),
         {'attrib-starts': [],
          'first-line': 58,
          'folded-linenos': [],
          'sel-line': 78,
          'sel-line-start': 3778,
          'selection_end': 3922,
          'selection_start': 3922},
         1233354984.7650001),
        (loc('../../_django_0_96_2/django/conf/__init__.py'),
         {'attrib-starts': [('Settings',
                             69),
                            ('Settings.__init__',
                             70)],
          'first-line': 48,
          'folded-linenos': [],
          'sel-line': 80,
          'sel-line-start': 3071,
          'selection_end': 3102,
          'selection_start': 3102},
         1233355072.2950001),
        (loc('djangocerise_1_2/myprojectconf.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 429,
          'selection_end': 429,
          'selection_start': 429},
         1233355605.8169999),
        (loc('views/default.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1233355706.6630001),
        (loc('settings.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1233355813.151),
        (loc('settings.py'),
         {'attrib-starts': [],
          'first-line': 78,
          'folded-linenos': [],
          'sel-line': 116,
          'sel-line-start': 5171,
          'selection_end': 5195,
          'selection_start': 5195},
         1233355819.323),
        (loc('views/default.py'),
         {'attrib-starts': [('handle_404',
                             28)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 29,
          'sel-line-start': 790,
          'selection_end': 830,
          'selection_start': 830},
         1233355844.6670001),
        (loc('djangocerise_1_2/myprojectconf.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 24,
          'sel-line-start': 698,
          'selection_end': 719,
          'selection_start': 719},
         1233355927.6040001),
        (loc('views/default.py'),
         {'attrib-starts': [('default',
                             17)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 549,
          'selection_end': 549,
          'selection_start': 549},
         1233356163.4159999),
        (loc('views/default.py'),
         {'attrib-starts': [('default',
                             17)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 549,
          'selection_end': 549,
          'selection_start': 549},
         1233356163.635),
        (loc('views/default.py'),
         {'attrib-starts': [('default',
                             17)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 474,
          'selection_end': 544,
          'selection_start': 544},
         1233356172.3529999),
        (loc('views/default.py'),
         {'attrib-starts': [('default',
                             17)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 674,
          'selection_end': 674,
          'selection_start': 674},
         1233356269.961),
        [loc('views/default.py'),
         {'attrib-starts': [('default',
                             17)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 674,
          'selection_end': 674,
          'selection_start': 674},
         1233356270.2739999]],
        19),
        'current-loc': loc('views/default.py'),
        'editor-states': {loc('../../@lib/vyperlogix/django/django_utils.py'): {''\
        'attrib-starts': [('__init__',
                           108)],
        'first-line': 109,
        'folded-linenos': [],
        'sel-line': 137,
        'sel-line-start': 5331,
        'selection_end': 5331,
        'selection_start': 5331},
                          loc('../../@lib/vyperlogix/lists/ListWrapper.py'): {''\
        'attrib-starts': [('ListWrapper',
                           2),
                          ('ListWrapper.findAllMatching',
                           54)],
        'first-line': 24,
        'folded-linenos': [],
        'sel-line': 56,
        'sel-line-start': 1525,
        'selection_end': 1553,
        'selection_start': 1553},
                          loc('../../@lib/vyperlogix/misc/__init__.py'): {'a'\
        'ttrib-starts': [('findFirstMatching',
                          68)],
        'first-line': 38,
        'folded-linenos': [],
        'sel-line': 69,
        'sel-line-start': 2217,
        'selection_end': 2240,
        'selection_start': 2240},
                          loc('djangocerise_1_2/myprojectconf.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 698,
        'selection_end': 719,
        'selection_start': 719},
                          loc('djangocerise_1_2/webserver.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 369,
        'selection_end': 417,
        'selection_start': 375},
                          loc('settings.py'): {'attrib-starts': [],
        'first-line': 78,
        'folded-linenos': [],
        'sel-line': 116,
        'sel-line-start': 5171,
        'selection_end': 5195,
        'selection_start': 5195},
                          loc('views/default.py'): {'attrib-starts': [('defa'\
        'ult',
        19)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 658,
        'selection_end': 694,
        'selection_start': 694},
                          loc('../../_django_0_96_2/django/conf/__init__.py'): {''\
        'attrib-starts': [('Settings',
                           69),
                          ('Settings.__init__',
                           70)],
        'first-line': 48,
        'folded-linenos': [],
        'sel-line': 80,
        'sel-line-start': 3071,
        'selection_end': 3102,
        'selection_start': 3102}},
        'has-focus': False},
                               'open_files': [u'../../@lib/vyperlogix/django/django_utils.py',
        u'../../@lib/vyperlogix/lists/ListWrapper.py',
        u'../../@lib/vyperlogix/misc/__init__.py',
        u'djangocerise_1_2/myprojectconf.py',
        u'djangocerise_1_2/webserver.py',
        u'settings.py',
        u'../../_django_0_96_2/django/conf/__init__.py',
        u'views/default.py']},
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1494,
                         124,
                         1420,
                         850)}]}
guimgr.recent-documents = [loc('views/default.py')]
guimgr.visual-state = {loc('file:C:/Python25/Lib/site-packages/cherrypy/wsgiserver/__init__.py'): {''\
        'attrib-starts': [('ThreadPool',
                           1267),
                          ('ThreadPool.__init__',
                           1274)],
        'first-line': 1269,
        'folded-linenos': [],
        'sel-line': 1275,
        'sel-line-start': 50268,
        'selection_end': 50287,
        'selection_start': 50281},
                       loc('file:C:/Python25/Lib/site-packages/django/contrib/sitemaps/__init__.py'): {''\
        'attrib-starts': [('FlatPageSitemap',
                           66)],
        'first-line': 50,
        'folded-linenos': [],
        'sel-line': 66,
        'sel-line-start': 2332,
        'selection_end': 2353,
        'selection_start': 2338},
                       loc('../../../@myMagma/python-local-projects/LeadsImporter_GUI/LeadsImporter.py'): {''\
        'attrib-starts': [('notifyLeadOwner',
                           472)],
        'first-line': 496,
        'folded-linenos': [],
        'sel-line': 506,
        'sel-line-start': 17090,
        'selection_end': 17121,
        'selection_start': 17110},
                       loc('../../@lib/lib/mail/mailServer.py'): {'attrib-st'\
        'arts': [('GMailServer',
                  244),
                 ('GMailServer.__init__',
                  245)],
        'first-line': 236,
        'folded-linenos': [],
        'sel-line': 245,
        'sel-line-start': 9504,
        'selection_end': 9566,
        'selection_start': 9552},
                       loc('../../@lib/lib/misc/_utils.py'): {'attrib-starts': [(''\
        'tempFile',
        1069)],
        'first-line': 1056,
        'folded-linenos': [],
        'sel-line': 1069,
        'sel-line-start': 37416,
        'selection_end': 37453,
        'selection_start': 37436},
                       loc('../../@lib/vyperlogix/django/cherryPy/djangocerise/__init__.py'): {''\
        'attrib-starts': [('parse_options',
                           98)],
        'first-line': 92,
        'folded-linenos': [],
        'sel-line': 116,
        'sel-line-start': 4955,
        'selection_end': 5021,
        'selection_start': 5006},
                       loc('../../@lib/vyperlogix/django/middleware/LoggingMiddleware.py'): {''\
        'attrib-starts': [('LoggingMiddleware',
                           24),
                          ('LoggingMiddleware.process_request',
                           43)],
        'first-line': 24,
        'folded-linenos': [],
        'sel-line': 46,
        'sel-line-start': 1071,
        'selection_end': 1116,
        'selection_start': 1108},
                       loc('../../@lib/vyperlogix/django/pages.py'): {'attri'\
        'b-starts': [('render_the_page',
                      61)],
        'first-line': 53,
        'folded-linenos': [],
        'sel-line': 79,
        'sel-line-start': 2805,
        'selection_end': 2865,
        'selection_start': 2853},
                       loc('../../@lib/vyperlogix/html/oohtml.py'): {'attrib'\
        '-starts': [],
        'first-line': 51,
        'folded-linenos': [],
        'sel-line': 106,
        'sel-line-start': 2167,
        'selection_end': 2180,
        'selection_start': 2180},
                       loc('../../@lib/vyperlogix/misc/threadpool.py'): {'at'\
        'trib-starts': [('ThreadQueue',
                         36),
                        ('ThreadQueue.__init__',
                         37)],
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 37,
        'sel-line-start': 1148,
        'selection_end': 1181,
        'selection_start': 1181},
                       loc('../../@lib/vyperlogix/products/keys.py'): {'attr'\
        'ib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 865,
        'selection_end': 865,
        'selection_start': 865},
                       loc('../../@lib/vyperlogix/sockets/wsgi/wsgiserver.py'): {''\
        'attrib-starts': [('HTTPRequest',
                           86),
                          ('HTTPRequest.__init__',
                           105)],
        'first-line': 750,
        'folded-linenos': [],
        'sel-line': 116,
        'sel-line-start': 3940,
        'selection_end': 3977,
        'selection_start': 3977},
                       loc('../../@lib/vyperlogix/sql/sqlalchemy/SQLAgent.py'): {''\
        'attrib-starts': [('SQLAgent',
                           37),
                          ('SQLAgent.asSmartObjects',
                           59)],
        'first-line': 221,
        'folded-linenos': [],
        'sel-line': 59,
        'sel-line-start': 2447,
        'selection_end': 2469,
        'selection_start': 2455},
                       loc('../../_django_1_02/django/core/management/__init__.py'): {''\
        'attrib-starts': [('LaxOptionParser',
                           159),
                          ('LaxOptionParser._process_args',
                           184)],
        'first-line': 175,
        'folded-linenos': [],
        'sel-line': 209,
        'sel-line-start': 7769,
        'selection_end': 7769,
        'selection_start': 7769},
                       loc('file:c:/Python25/Lib/UserList.py'): {'attrib-sta'\
        'rts': [('UserList',
                 2),
                ('UserList.remove',
                 75)],
        'first-line': 41,
        'folded-linenos': [],
        'sel-line': 75,
        'sel-line-start': 3169,
        'selection_end': 3169,
        'selection_start': 3169},
                       loc('file:c:/Python25/Lib/optparse.py'): {'attrib-sta'\
        'rts': [('Option',
                 438),
                ('Option._set_opt_strings',
                 581)],
        'first-line': 575,
        'folded-linenos': [],
        'sel-line': 599,
        'sel-line-start': 21596,
        'selection_end': 21596,
        'selection_start': 21596},
                       loc('file:c:/Python25/Lib/site-packages/django/conf/__init__.py'): {''\
        'attrib-starts': [('LazySettings',
                           14),
                          ('LazySettings.__getattr__',
                           25)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1080,
        'selection_end': 1080,
        'selection_start': 1080},
                       loc('file:c:/Python25/Lib/site-packages/django/conf/urls/defaults.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 71,
        'selection_start': 0},
                       loc('file:c:/Python25/Lib/smtplib.py'): {'attrib-star'\
        'ts': [('SMTP',
                195),
               ('SMTP.sendmail',
                617)],
        'first-line': 672,
        'folded-linenos': [],
        'sel-line': 706,
        'sel-line-start': 26716,
        'selection_end': 26716,
        'selection_start': 26716},
                       loc('../../@lib/lib/html/myOOHTML.py'): {'attrib-star'\
        'ts': [('renderAnchor',
                220)],
        'first-line': 200,
        'folded-linenos': [],
        'sel-line': 220,
        'sel-line-start': 7632,
        'selection_end': 7673,
        'selection_start': 7658},
                       loc('../../@lib/vyperlogix/django/middleware/nfLogger.py'): {''\
        'attrib-starts': [('LoggingMiddleware',
                           5),
                          ('LoggingMiddleware.__init__',
                           11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 235,
        'selection_end': 258,
        'selection_start': 258},
                       loc('djangocerise_1_2/daemon.sh'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 411,
        'selection_end': 476,
        'selection_start': 476},
                       loc('home/models.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('templates/ruby_python_bridge.html'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../makeZip.py'): {'attrib-starts': [('handle_fol'\
        'der',
        71)],
        'first-line': 74,
        'folded-linenos': [],
        'sel-line': 98,
        'sel-line-start': 2919,
        'selection_end': 2953,
        'selection_start': 2953},
                       loc('../../_django_0_96_2/django/conf/__init__.py'): {''\
        'attrib-starts': [('Settings',
                           69),
                          ('Settings.__init__',
                           70)],
        'first-line': 48,
        'folded-linenos': [],
        'sel-line': 82,
        'sel-line-start': 3167,
        'selection_end': 3167,
        'selection_start': 3167},
                       loc('../../_django_0_96_2/django/core/handlers/base.py'): {''\
        'attrib-starts': [('BaseHandler',
                           5),
                          ('BaseHandler.load_middleware',
                           9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 1075,
        'selection_end': 1075,
        'selection_start': 1075},
                       loc('../../_django_0_96_2/django/core/management.py'): {''\
        'attrib-starts': [('execute_from_command_line',
                           1515)],
        'first-line': 1516,
        'folded-linenos': [],
        'sel-line': 1522,
        'sel-line-start': 71295,
        'selection_end': 71328,
        'selection_start': 71318},
                       loc('../../_django_0_96_2/django/core/servers/basehttp.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 462,
        'selection_end': 462,
        'selection_start': 462},
                       loc('../../_django_0_96_2/django/db/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 475,
        'selection_end': 534,
        'selection_start': 534},
                       loc('../../_django_0_96_2/django/db/models/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 828,
        'selection_end': 855,
        'selection_start': 855},
                       loc('../../_django_0_96_2/django/db/models/fields/__init__.py'): {''\
        'attrib-starts': [('Field',
                           58),
                          ('Field.__init__',
                           67)],
        'first-line': 63,
        'folded-linenos': [],
        'sel-line': 68,
        'sel-line-start': 2653,
        'selection_end': 2670,
        'selection_start': 2664},
                       loc('../../_django_0_96_2/django/db/models/fields/related.py'): {''\
        'attrib-starts': [('ManyToOneRel',
                           748)],
        'first-line': 740,
        'folded-linenos': [],
        'sel-line': 748,
        'sel-line-start': 33850,
        'selection_end': 33868,
        'selection_start': 33856},
                       loc('../../_django_0_96_2/django/db/models/manager.py'): {''\
        'attrib-starts': [('ManagerDescriptor',
                           107),
                          ('ManagerDescriptor.__get__',
                           113)],
        'first-line': 78,
        'folded-linenos': [],
        'sel-line': 115,
        'sel-line-start': 4023,
        'selection_end': 4023,
        'selection_start': 4023},
                       loc('../../_django_0_96_2/django/db/models/query.py'): {''\
        'attrib-starts': [('QuerySet',
                           79),
                          ('QuerySet.__getitem__',
                           109)],
        'first-line': 107,
        'folded-linenos': [],
        'sel-line': 112,
        'sel-line-start': 4130,
        'selection_end': 4130,
        'selection_start': 4130},
                       loc('../../_django_0_96_2/django/http/__init__.py'): {''\
        'attrib-starts': [('HttpResponseNotAllowed',
                           282)],
        'first-line': 262,
        'folded-linenos': [],
        'sel-line': 282,
        'sel-line-start': 9721,
        'selection_end': 9749,
        'selection_start': 9727},
                       loc('../../_django_0_96_2/django/middleware/common.py'): {''\
        'attrib-starts': [('CommonMiddleware',
                           6)],
        'first-line': 57,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 546,
        'selection_end': 623,
        'selection_start': 623},
                       loc('../../_django_0_96_2/django/middleware/gzip.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../_django_0_96_2/django/newforms/forms.py'): {''\
        'attrib-starts': [('SortedDictFromList',
                           20)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 519,
        'selection_end': 543,
        'selection_start': 525},
                       loc('../../_django_0_96_2/django/newforms/models.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 177,
        'selection_end': 252,
        'selection_start': 177},
                       loc('../../_django_0_96_2/django/oldforms/__init__.py'): {''\
        'attrib-starts': [('PhoneNumberField',
                           936)],
        'first-line': 888,
        'folded-linenos': [],
        'sel-line': 936,
        'sel-line-start': 39447,
        'selection_end': 39469,
        'selection_start': 39453},
                       loc('../../_django_0_96_2/django/views/static.py'): {''\
        'attrib-starts': [('serve',
                           11)],
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 291,
        'selection_end': 300,
        'selection_start': 295},
                       loc('unknown:<untitled> #149'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #150'): {'attrib-starts': [],
        'first-line': 6,
        'folded-linenos': [],
        'history': {u'file:Z:/python projects/Reverse Proxy/TinyHTTPProxy.py': [''\
        'self.path\n',
        'soc\n',
        'x.next()\n'],
                    u'file:Z:/python projects/Reverse Proxy/proxy.py': ['Obj'\
        'ectTypeName.__typeName(self\n',
        'ObjectTypeName.__typeName(self)\n']},
        'sel-line': 20,
        'sel-line-start': 323,
        'selection_end': 327,
        'selection_start': 327},
                       loc('unknown:<untitled> #148'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'history': {None: ['raychorn@vyperlogix.com\n',
                           'n\n',
                           'support@vyperlogix.com\n',
                           'yes\n',
                           'raychorn\n',
                           'raychorn@hotmail.com\n',
                           'peekab00\n']},
        'sel-line': 29,
        'sel-line-start': 4932,
        'selection_end': 4932,
        'selection_start': 4932},
                       loc('unknown:<untitled> #147'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #122'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 1,
        'sel-line-start': 115,
        'selection_end': 115,
        'selection_start': 115},
                       loc('unknown:<untitled> #121'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {u'file:C:/Apache228/htdocs/pyeggs/manage.py': ['import s'\
        'ys\n',
        'sys.path\n'],
                    u'file:Z:/python projects/_django-projects/resources/manage.py': [''\
        'settings.TEMPLATE_LOADERS\n',
        'settings.TEMPLATE_DIRS\n',
        'request.path\n',
        'html\n'],
                    u'file:Z:/python projects/_django-projects/www_pypi_info/manage.py': [''\
        'items[0].\n',
        'items[0].keys()\n',
        'items[0][items[0].keys()[0]]\n',
        'items[0][0]\n',
        'items[0].__dict__\n',
        'items[0].__getattribute__(items[0].keys()[0])\n',
        'for x in obj:\n',
        '    print x\n',
        'obj.__hash__()\n',
        'obj.__dict__\n',
        'ObjectTypeName.typeName(v)\n',
        'type(v)\n',
        '_date = item.Jos_Content.created\n',
        '_date\n',
        '_utils.getAsDateTimeStr(_date)\n',
        '_utils.getAsDateTimeStr(_date,_fmt=_utils.formatDate_MMDDYYYY_slash'\
        'es()+_utils.formatSimpleTimeStr())\n',
        '_utils.getAsDateTimeStr(_date,fmt=_utils.formatDate_MMDDYYYY_slashe'\
        's()+_utils.formatSimpleTimeStr())\n',
        'item.Jos_Content.hits\n',
        'len(items)\n',
        'items[0]\n',
        '_item = items[0]\n',
        'users[item.Jos_Content.created_by].name\n',
        'users[item.Jos_Content.created_by][0].name\n',
        'item.asDict().keys()\n',
        'item.asDict()\n',
        'item\n',
        'str(item)\n',
        'self.__dict__\n',
        'real_k(k)\n',
        "'%s=\"%s\"' % (_k,v)\n",
        '_k\n',
        'v\n',
        "'%s=\"%s\"' % (_k,str(v))\n",
        "toks = item[-1].split('?')[-1].split('=')\n",
        "toks = [t.split('=') for t in item[-1].split('?')[-1].split('&')]\n",
        "d_parms = lists.HashedLists2(dict([tuple(t.split('=')) for t in ite"\
        "m[-1].split('?')[-1].split('&')]))\n",
        'recs[0]\n',
        'recs[0].Jos_Content\n',
        "template_filename('_styles.html')\n",
        'item.introtext\n',
        "result = re.findall(r'(?si)\\w+\\s*=\\s*\"[^\"]*\"', match.group())"\
        "\n",
        "toks2 = _url.split('\"')\n",
        "toks3 = toks2[1].split('?')\n",
        "toks4 = toks3[-1].split('=')\n",
        "toks4 = toks3[-1].split('&')\n",
        "toks4 = [t.split('=') for t in toks3[-1].split('&')]\n",
        "toks4 = [tuple(t.split('=')) for t in toks3[-1].split('&')]\n",
        "d_toks4 = dict([tuple(t.split('=')) for t in toks3[-1].split('&')])"\
        "\n",
        'match.start()\n',
        'match.end()\n',
        'subject[match.start():match.end()]\n',
        'm.start()\n',
        'm.stop()\n',
        'm.end()\n',
        'm.group()[m.start():m.end()]\n',
        'match.group()[m.start():m.end()]\n',
        'subject\n',
        'match.group()\n',
        'm.group()\n',
        'subject.replace(m.group(),href)\n'],
                    u'file:Z:/python projects/pyEggs/benchmark1.py': ['z[0:1'\
        '00]\n',
        'regexer2(s)\n'],
                    u'file:Z:/python projects/pyEggs/pyEggs.py': ['import sy'\
        's\n',
        'sys.path\n',
        "'\\n'.join(sys.path)\n",
        "','.join(sys.path)\n",
        "', '.join(sys.path)\n",
        'os.listdir(root)\n',
        'rejecting_re.search(n).group()\n',
        'rejecting_re.search(n)\n',
        'os.sep.join(root.split(os.sep)[0:-1])\n',
        'type(zip)\n',
        'from lib.misc.ObjectTypeName import typeName\n',
        'typeName(zip)\n',
        'zip.__class__\n',
        'str(zip.__class__).split()[-1][1:-2]\n',
        'str(zip.__class__).split()[-1]\n',
        'src_analysis.asDict()\n',
        '_src_analysis.has_key(_f)\n',
        "_f.find('\\\\')\n",
        'foo = src_analysis.asDict()\n',
        'foo.has_key(_f)\n',
        "_f = os.sep.join(f.split('/').insert(0,''))\n",
        "foo = f.split('/')\n",
        "foo.insert(0,'')\n",
        'foo\n',
        '_f\n',
        '_src_analysis[_f]\n',
        'k\n',
        'v\n',
        'sys.argv[-1]\n',
        'args.keys()[0]\n',
        'sys.argv\n',
        'os.path.exists(_lib_dest)\n',
        "[f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os.path.sp"\
        "litext(f)[-1] == '.egg')]\n",
        "_eggs = [f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os"\
        ".path.splitext(f)[-1] == '.egg')]\n",
        "e_egg = [f for f in _eggs if (f.startswith('e'))][0]\n",
        "n_egg = [f for f in _eggs if (not f.startswith('e'))][0]\n",
        "keys = [k for k in d_analysis.keys() if (k.startswith('ext/')) or ("\
        "k.startswith('EGG-INFO/'))]\n",
        'keys\n',
        "contents = zip.read('EGG-INFO/SOURCES.txt')\n",
        "foo = contents.split('\\n')\n",
        "l_contents = contents.split('\\n')\n",
        'del foo\n',
        'keys = d_analysis.keys()\n',
        's1 = set(l_contents)\n',
        's1 = set()\n',
        '[s1.add(l) for l in l_contents]\n',
        's1 - set(keepers)\n',
        'new_list = list(set(l_contents) - (set(l_contents) - set(keepers)))'\
        '\n',
        "new_contents = '\\n'.join(new_list)\n"],
                    u'file:Z:/python projects/resources-utils/Resources_GUI/Resources_GUI.py': [''\
        'useLocalTime\n',
        'isUsingLocalTimeConversions\n',
        "hms = ['00','00','00']\n",
        '":".join(hms[(len(hms)-3):]\n',
        '":".join(hms[(len(hms)-3):])\n'],
                    u'file:Z:/python projects/resources-utils/create.py': [''\
        's_name.split(os.sep)\n',
        'nodes[-2]\n',
        'nodes\n',
        "os.path.abspath('.')\n",
        "_root_ = os.path.abspath('.')\n",
        '_root_\n',
        'dbx_name = lambda name:oodb.dbx_name(name,_data_path)\n',
        'from lib import misc\n',
        'from lib.misc import ObjectTypeName\n',
        'from lib import oodb\n',
        "fname = os.sep.join([_root_,dbx_name('The_Catalog')])\n",
        'dbx_name = lambda fpath,name:oodb.dbx_name(name,fpath)\n',
        "fname = dbx_name(_root_,'The_Catalog')\n",
        "fname = oodb.dbx_name('The_Catalog',_root_)\n",
        'save_dict(fname,_d_)\n',
        'fname\n',
        'oodb.getMungedFilenameFor(fname)\n',
        'foo = os.sep.join([top,p])\n',
        'foo\n',
        'os.path.exists(foo)\n',
        '_name\n',
        '_rr_\n',
        'agent.lastError\n',
        'rec.parent\n',
        's\n',
        'rec.count\n',
        'rec.count()\n',
        'rec.first()\n'],
                    u'file:c:/Apache228/htdocs/pyeggs/manage.py': ['settings'\
        '.DATABASE_HOST\n'],
                    u'file:z:/python projects/_django-projects/www_pypi_info/manage.py': [''\
        'content\n',
        'a.toHtml()\n',
        'h_Content.toHtml()\n',
        "h_Content.toHtml().replace('<br>','').replace('<BR>','').replace('<"\
        "Br>','').replace('<bR>','').replace('\\n','').replace('\\t','')\n",
        'table.toHtml()\n',
        'oohtml.Html().tagH1(item).toHtml() for item in items\n',
        '[oohtml.Html().tagH1(item).toHtml() for item in items]\n',
        "item[0].replace(chr(0x99),'&trade;')\n",
        'p_nodes[aNode.id]\n',
        'cat = cats[0]\n',
        'cat.id\n',
        'cat.section\n',
        'h.toHtml()\n'],
                    u'file:z:/python projects/resources-utils/create.py': [''\
        'sqlalchemy.__version__\n',
        'ENVIRONMENT_VARIABLE\n',
        'model_module.__name__\n',
        "model_module.__name__.split('.')[-2]\n",
        'Registration.objects\n',
        'Node.objects\n',
        'Node.objects.latest()\n',
        'Node.objects.latest(id)\n',
        "Node.objects.latest('id')\n",
        'self.model._meta.object_name\n',
        'Anode\n',
        'aNode\n',
        'type(foo)\n',
        'foo[0].id\n',
        'l = [r for r in l_records if (r.id == 1)]\n',
        'foo = session.query(Node).filter(Node.id == 1).all()\n',
        'self.query(lamda_clause)\n',
        'agent.session.query(Node)\n',
        'agent.session.query(Node).filter("id>1")\n',
        'agent.session.query(Node).filter("id>1").order_by("id").all()\n',
        'l = agent.session.query(Node).filter("id>=1").order_by("id").all()\n']},
        'sel-line': 6,
        'sel-line-start': 314,
        'selection_end': 318,
        'selection_start': 318},
                       loc('unknown:<untitled> #119'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 7,
        'sel-line-start': 236,
        'selection_end': 236,
        'selection_start': 236},
                       loc('unknown:<untitled> #120'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 1,
        'sel-line-start': 39,
        'selection_end': 39,
        'selection_start': 39},
                       loc('unknown:<untitled> #143'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #142'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #140'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {u'file:C:/Program Files/Google/google_appengine/dev_appserver.py': [''\
        'users.is_current_user_admin()\n',
        'users.get_current_user()\n'],
                    u'file:Z:/python projects/PDFexporter/PDFexporter.py': [''\
        'type(self.bitmapFile)\n',
        'from lib.misc import ObjectTypeName\n',
        'ObjectTypeName.typeName(self.bitmapFile)\n',
        'self.frame\n',
        'type(self.frame)\n',
        's.width\n',
        'n = self.tree_panel.notebook\n',
        'n.GetPageCount()\n',
        'n.GetPage(0)\n',
        'v = n.GetPage(0)\n',
        'self.pdf.content\n',
        'self.pdf.content.keys()\n',
        "self.pdf.content['1']\n",
        'self.pdf.content[1]\n',
        'len(self.pdf.content[1])\n',
        'self.save_as_menu_item\n'],
                    u'file:Z:/python projects/PDFexporter/_google_app_engine-projects/pdfxporter/manage.py': [''\
        '_root\n',
        'os.path.abspath(_root)\n'],
                    u'file:Z:/python projects/bank-pdf-parser/mainPDF.py': [''\
        'pg.keys()\n',
        'pg.artBox\n',
        'pg[pg.keys()[1]]\n',
        'pg.pdf\n',
        'pg.pdf.documentInfo\n',
        'pg.pdf.pages\n',
        'pg.pdf.numPages\n',
        'pg.pdf.flattenedPages\n',
        'pg.pdf.getOutlines\n',
        'pg.pdf.getOutlines()\n',
        'pg.pdf.getPage\n',
        'pg.pdf.getPage(1)\n',
        'pg.pdf.readNextEndLine\n',
        'pg.pdf.readNextEndLine()\n',
        'pg.extractText()\n',
        "pg.extractText().split('\\n')\n",
        "pg.extractText().split('\\r')\n",
        'foo = pg.extractText()\n',
        "bar = ','.join([ord(ch) for ch in foo[0:100]])\n",
        "bar = ','.join(['%d'%ord(ch) for ch in foo[0:100]])\n",
        "bar2 = ','.join(['%s'%ch for ch in foo[0:100]])\n",
        'bar2\n',
        "bar = ','.join(['(%s)%d'%(ch,ord(ch)) for ch in foo[0:100]])\n",
        'bar\n',
        "lines = foo.split('   ')\n",
        "'\\n'.join(lines)\n",
        'for l in lines: print l\n',
        "lines = foo.replace(\"\\xa0\", \"\\n\").split('\\n')\n",
        "lines = decodeUnicode.decodeUnicode(foo).replace(\"\\xa0\", \"\\n\""\
        ").split('\\n')\n",
        'len(lines)\n',
        'file[0]\n',
        'files[0]\n',
        'files[0:0]\n',
        '[files[0]]\n',
        'files[0:1]\n',
        'files[0:2]\n',
        'files[0:]\n',
        'dbx.keys()\n',
        'dbx.fileName\n',
        'dbx.values()\n',
        'len(dbx)\n',
        'file_flag(self.fileName)\n'],
                    u'file:Z:/python projects/bank-pdf-parser2/server.py': [''\
        'type(WSGILoggingRequestHandler)\n',
        'daemon_utils._metadata\n',
        'daemon_utils._metadata.keys()\n',
        'daemon_utils._metadata[daemon_utils._metadata.keys()[0]]\n',
        'daemon_utils._metadata[daemon_utils._metadata.keys()[0]].keys()\n',
        'funcs[0].__name__\n',
        'globals().items()\n',
        "v = '%s.__globals__' % (f)\n",
        "v = '%s.locals()' % (f)\n",
        'eval(v)\n',
        'f\n',
        'tag_filename(fileName)\n',
        'self.tag_filename(fileName)\n',
        'self.tag_classname()\n',
        'self\n',
        'x\n',
        'x.__doc__\n',
        "_metadata['_functions'] = _metadata['_functions'][1:]\n",
        "_metadata['_functions']\n",
        "[f.__name__ for f in _metadata['_functions']]\n",
        'sys._getframe(2)\n',
        'foo = sys._getframe(2)\n',
        'foo.f_code\n',
        'foo.f_code.dir()\n',
        'self.dir()\n',
        'self.__class__\n',
        'self.__class__.dir()\n',
        'self.__mro__\n',
        'from lib.misc import ObjectTypeName\n',
        'sig = ObjectTypeName.objectSignature(self)\n',
        'sig\n',
        'ctx.co_cellvars\n',
        'ctx.co_filename\n',
        'ctx.co_nlocals\n',
        'ctx.__class__.co_name\n',
        'ctx.__class__.co_name()\n',
        'str(ctx.__class__)\n',
        'ctx.__hash__\n',
        'ctx.__hash__()\n',
        'dir(self)\n',
        'ctx = sys._getframe(1).f_code\n',
        'ctx = sys._getframe(2).f_code\n',
        'ctx = sys._getframe(2)\n',
        'ctx.__class__\n',
        'ctx.f_exc_traceback\n',
        'ctx.f_back\n',
        'ctx.f_code\n',
        'ctx.f_code.co_name\n',
        'self.f\n',
        'dir(self.f)\n',
        'ctx = sys._getframe(3).f_code\n',
        'ctx = sys._getframe(4).f_code\n',
        'ctx = sys._getframe(5).f_code\n',
        'ctx = sys._getframe(6).f_code\n',
        'ctx = sys._getframe(8).f_code\n',
        'dir(ctx.co_name)\n',
        'ctx.co_name.__name__\n',
        'ctx = sys._getframe(7).f_code\n',
        'ctx.co_name.__class__\n',
        'sys._current_frames\n',
        'sys._current_frames()\n',
        'self.f.func_name()\n',
        'ctx.co_names\n',
        'ctx.co_name\n',
        "str(ctx.co_name).contains('module')\n",
        "str(ctx.co_name).find('module')\n",
        'str(ctx.co_name)\n',
        'str(ctx.co_names)\n',
        'self.f.func_name\n',
        'ctx.\n',
        'ctx.co_firstlineno\n',
        'ctx.co_varnames\n',
        'f = sys._getframe(2)\n',
        'f.f_globals\n',
        'f.f_exc_traceback\n',
        'import traceback\n',
        "'\\n'.join(traceback.format_exception(f.f_exc_traceback))\n",
        "'\\n'.join(traceback.format_exception(*f.f_exc_traceback))\n",
        'f.f_exc_type\n',
        'str(f)\n',
        'inspect.getframeinfo(f)\n',
        'inspect.getmembers(f)\n',
        'import protocols\n',
        'protocols.advice.getFrameInfo(f)\n',
        'ctx\n',
        'import sys\n',
        'sys._getframe(1)\n',
        'f = sys._getframe(1)\n',
        'import inspect\n',
        'inspect.getouterframes(f)\n',
        'inspect.getinnerframes(f)\n'],
                    u'file:z:/python projects/PDFexporter/wxGlade Samples/SplashApp.py': [""\
        "kwds['delay']\n"],
                    u'file:z:/python projects/bank-pdf-parser/main.py': ['d_'\
        'withdrawls[1][1]\n',
        'd_withdrawls[1]\n',
        'val_chks\n',
        'value_withdrawls\n',
        'len(content)\n'],
                    u'file:z:/python projects/bank-pdf-parser/report.py': [''\
        'x\n']},
        'sel-line': 12,
        'sel-line-start': 412,
        'selection_end': 416,
        'selection_start': 416},
                       loc('unknown:<untitled> #141'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import re\n',
                           '_re = re.compile("[.]pyo", re.IGNORECASE)\n',
                           '_re\n',
                           'type(_re)\n',
                           '_re.__class__\n',
                           'from lib.misc import ObjectTypeName\n',
                           'ObjectTypeName.typeName(_re)\n',
                           'isinstance(_re,_sre.SRE_Pattern)\n',
                           'import types\n',
                           "os.listdir('C:/@1b')\n",
                           "os.listdir('C:/@1b') == []\n",
                           'import cython_templates\n',
                           'cython_templates.template1\n',
                           'os.getcwd()\n',
                           'foo = [1,2,3,4,5]\n',
                           'bar = [2,3]\n',
                           'foo=set(foo)\n',
                           'bar=set(bar)\n',
                           'bar\n',
                           'bar=set(1,2,4,5,6,7,8])\n',
                           'bar=set([1,2,4,5,6,7,8])\n',
                           'foo-bar\n',
                           '[1,2,3] + [4,5,6]\n',
                           'set([1,2,3]) + set([4,5,6])\n',
                           'set([1,2,3]) and set([4,5,6])\n',
                           'list(set([1,2,3] + [4,5,6]))\n',
                           'list(set([1,2,3,4] + [3,4,5,6]))\n',
                           "os.path.splitext('a.123')\n",
                           'import tempfile\n',
                           "foo = tempfile.mkstemp('zip','new','xxxxx')\n",
                           "foo = tempfile.mkstemp('zip','new')\n",
                           'foo\n',
                           'foo[0].close()\n',
                           'os.close(foo[0])\n',
                           'os.remove(foo[-1])\n',
                           'from lib.misc import _utils\n',
                           'import os\n',
                           'from lib.hash import lists\n',
                           'import socket\n',
                           'socket.gethostname\n',
                           'socket.gethostname()\n',
                           'socket.gethostbyname(socket.gethostname())\n',
                           'socket.gethostbyname_ex(socket.gethostname())\n',
                           "r'C:\\Inetpub\\vhosts\\vyperlogix.com\\httpdocs\\"\
                           "site'\n",
                           "tuple('/','Home','')\n",
                           "tuple(['/','Home',''])\n",
                           'from lib.html import myOOHTML as oohtml\n',
                           'i = 80\n',
                           'str(i)\n',
                           'from vyperlogix.misc import GenPasswd\n',
                           'GenPasswd.GenPasswd(length=len(_SECRET_KEY),char'\
                           's=GenPasswd.string.printable)\n',
                           'GenPasswd.GenPasswd(length=64,chars=GenPasswd.st'\
                           'ring.printable)\n',
                           'import string\n',
                           'string.letters + string.digits + string.punctuat'\
                           'ion\n',
                           'reload(GenPasswd)\n',
                           'GenPasswd.GenPasswd(length=128,chars=GenPasswd.s'\
                           'tring.printable)\n',
                           'from vyperlogix.wsgi.wsgiserver import CherryPyW'\
                           'SGIServer as Server\n',
                           'from vyperlogix.sockets.wsgi.wsgiserver import C'\
                           'herryPyWSGIServer as Server\n',
                           'from vyperlogix.hash import lists\n',
                           'from django.newforms import form_for_model, form'\
                           '_for_instance, save_instance, BaseForm, Form, Ch'\
                           'arField\n',
                           'from models import User\n',
                           'from vyperlogix.views.models import User\n']},
        'sel-line': 12,
        'sel-line-start': 593,
        'selection_end': 597,
        'selection_start': 597},
                       loc('unknown:<untitled> #124'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {u'file:C:/Apache228/htdocs/pyeggs/manage.py': ['import s'\
        'ys\n',
        'sys.path\n'],
                    u'file:Z:/python projects/_django-projects/makeZip.py': [""\
        "_source.replace(source,'')\n",
        "os.sep.join(_source.replace(source,'').split(os.sep)[1:])\n",
        '_dest\n'],
                    u'file:Z:/python projects/_django-projects/resources/manage.py': [''\
        'settings.TEMPLATE_LOADERS\n',
        'settings.TEMPLATE_DIRS\n',
        'request.path\n',
        'html\n'],
                    u'file:Z:/python projects/_django-projects/www_pypi_info/manage.py': [''\
        'items[0].\n',
        'items[0].keys()\n',
        'items[0][items[0].keys()[0]]\n',
        'items[0][0]\n',
        'items[0].__dict__\n',
        'items[0].__getattribute__(items[0].keys()[0])\n',
        'for x in obj:\n',
        '    print x\n',
        'obj.__hash__()\n',
        'obj.__dict__\n',
        'ObjectTypeName.typeName(v)\n',
        'type(v)\n',
        '_date = item.Jos_Content.created\n',
        '_date\n',
        '_utils.getAsDateTimeStr(_date)\n',
        '_utils.getAsDateTimeStr(_date,_fmt=_utils.formatDate_MMDDYYYY_slash'\
        'es()+_utils.formatSimpleTimeStr())\n',
        '_utils.getAsDateTimeStr(_date,fmt=_utils.formatDate_MMDDYYYY_slashe'\
        's()+_utils.formatSimpleTimeStr())\n',
        'item.Jos_Content.hits\n',
        'len(items)\n',
        'items[0]\n',
        '_item = items[0]\n',
        'users[item.Jos_Content.created_by].name\n',
        'users[item.Jos_Content.created_by][0].name\n',
        'item.asDict().keys()\n',
        'item.asDict()\n',
        'item\n',
        'str(item)\n',
        'self.__dict__\n',
        'real_k(k)\n',
        "'%s=\"%s\"' % (_k,v)\n",
        '_k\n',
        'v\n',
        "'%s=\"%s\"' % (_k,str(v))\n",
        "toks = item[-1].split('?')[-1].split('=')\n",
        "toks = [t.split('=') for t in item[-1].split('?')[-1].split('&')]\n",
        "d_parms = lists.HashedLists2(dict([tuple(t.split('=')) for t in ite"\
        "m[-1].split('?')[-1].split('&')]))\n",
        'recs[0]\n',
        'recs[0].Jos_Content\n',
        "template_filename('_styles.html')\n",
        'item.introtext\n',
        "result = re.findall(r'(?si)\\w+\\s*=\\s*\"[^\"]*\"', match.group())"\
        "\n",
        "toks2 = _url.split('\"')\n",
        "toks3 = toks2[1].split('?')\n",
        "toks4 = toks3[-1].split('=')\n",
        "toks4 = toks3[-1].split('&')\n",
        "toks4 = [t.split('=') for t in toks3[-1].split('&')]\n",
        "toks4 = [tuple(t.split('=')) for t in toks3[-1].split('&')]\n",
        "d_toks4 = dict([tuple(t.split('=')) for t in toks3[-1].split('&')])"\
        "\n",
        'match.start()\n',
        'match.end()\n',
        'subject[match.start():match.end()]\n',
        'm.start()\n',
        'm.stop()\n',
        'm.end()\n',
        'm.group()[m.start():m.end()]\n',
        'match.group()[m.start():m.end()]\n',
        'subject\n',
        'match.group()\n',
        'subject.replace(m.group(),href)\n',
        'self.outstream.getvalue()\n',
        'url_toks[1:]\n',
        'from lib.iterators import iterutils\n',
        '[t for t in iterutils.iterstep(url_toks,2)]\n',
        '[t for t in iterutils.iterstep(url_toks[1:],2)]\n',
        '[t for t in iterutils.iterstep(url_toks[2:],2)]\n',
        'reload(lists)\n',
        'd = lists.HashedLists2(url_toks[1:])\n',
        'h.toHtml()\n',
        'head\n',
        'reload(script)\n',
        "head_list = script.head_list('http://media.vyperlogix.com/flexigrid"\
        "')\n",
        'url\n',
        'article.Jos_Content.urls\n',
        'article.Jos_Content.id\n',
        'article.Jos_Content.catid\n',
        'article.Jos_Content.sectionid\n',
        'm.group()\n',
        "dict([tuple(t.split('=')) for t in toks3[-1].replace('&&','&').spli"\
        "t('&') if (len(t) == 2)])\n",
        "dict([tuple(t.split('=')) for t in toks3[-1].replace('&&','&').spli"\
        "t('&')])\n",
        "[tuple(t.split('=')) for t in toks3[-1].replace('&&','&').split('&'"\
        ")]\n",
        "toks4 = [tuple(t.split('=')) for t in toks3[-1].replace('&&','&').s"\
        "plit('&')]\n",
        'd_toks4 = dict([t for t in toks4 if (len(t) == 2)])\n',
        's_url = anchors.rewrite_anchor(item[-1],callback=rewrite_anchor,isD'\
        'ebug=False)\n',
        'func\n',
        'item.link\n',
        'item.params\n',
        'd.keys()\n',
        "d['params']\n",
        "d['params'].split('\\n')\n",
        'render_anchor_appropriately(item.link,item.name,item.params)\n',
        'd = _utils.parse_key_value_pairs_as_dict(toks[n-i:])\n',
        'n/2\n',
        'n\n',
        'i = int(n / 2) * 2\n',
        '[t for t in itergroup(toks[n-i:],2)]\n',
        'd = lists.HashedLists2(dict([t for t in itergroup(toks[n-i:],2)]))\n',
        'section.title\n',
        'article.Jos_Content.modified\n',
        'article.Jos_Users.name\n'],
                    u'file:Z:/python projects/pyEggs/benchmark1.py': ['z[0:1'\
        '00]\n',
        'regexer2(s)\n'],
                    u'file:Z:/python projects/pyEggs/pyEggs.py': ['import sy'\
        's\n',
        'sys.path\n',
        "'\\n'.join(sys.path)\n",
        "','.join(sys.path)\n",
        "', '.join(sys.path)\n",
        'os.listdir(root)\n',
        'rejecting_re.search(n).group()\n',
        'rejecting_re.search(n)\n',
        'os.sep.join(root.split(os.sep)[0:-1])\n',
        'type(zip)\n',
        'from lib.misc.ObjectTypeName import typeName\n',
        'typeName(zip)\n',
        'zip.__class__\n',
        'str(zip.__class__).split()[-1][1:-2]\n',
        'str(zip.__class__).split()[-1]\n',
        'src_analysis.asDict()\n',
        '_src_analysis.has_key(_f)\n',
        "_f.find('\\\\')\n",
        'foo = src_analysis.asDict()\n',
        'foo.has_key(_f)\n',
        "_f = os.sep.join(f.split('/').insert(0,''))\n",
        "foo = f.split('/')\n",
        "foo.insert(0,'')\n",
        'foo\n',
        '_f\n',
        '_src_analysis[_f]\n',
        'k\n',
        'v\n',
        'sys.argv[-1]\n',
        'args.keys()[0]\n',
        'sys.argv\n',
        'os.path.exists(_lib_dest)\n',
        "[f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os.path.sp"\
        "litext(f)[-1] == '.egg')]\n",
        "_eggs = [f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os"\
        ".path.splitext(f)[-1] == '.egg')]\n",
        "e_egg = [f for f in _eggs if (f.startswith('e'))][0]\n",
        "n_egg = [f for f in _eggs if (not f.startswith('e'))][0]\n",
        "keys = [k for k in d_analysis.keys() if (k.startswith('ext/')) or ("\
        "k.startswith('EGG-INFO/'))]\n",
        'keys\n',
        "contents = zip.read('EGG-INFO/SOURCES.txt')\n",
        "foo = contents.split('\\n')\n",
        "l_contents = contents.split('\\n')\n",
        'del foo\n',
        'keys = d_analysis.keys()\n',
        's1 = set(l_contents)\n',
        's1 = set()\n',
        '[s1.add(l) for l in l_contents]\n',
        's1 - set(keepers)\n',
        'new_list = list(set(l_contents) - (set(l_contents) - set(keepers)))'\
        '\n',
        "new_contents = '\\n'.join(new_list)\n"],
                    u'file:Z:/python projects/resources-utils/Resources_GUI/Resources_GUI.py': [''\
        'useLocalTime\n',
        'isUsingLocalTimeConversions\n',
        "hms = ['00','00','00']\n",
        '":".join(hms[(len(hms)-3):]\n',
        '":".join(hms[(len(hms)-3):])\n'],
                    u'file:Z:/python projects/resources-utils/create.py': [''\
        's_name.split(os.sep)\n',
        'nodes[-2]\n',
        'nodes\n',
        "os.path.abspath('.')\n",
        "_root_ = os.path.abspath('.')\n",
        '_root_\n',
        'dbx_name = lambda name:oodb.dbx_name(name,_data_path)\n',
        'from lib import misc\n',
        'from lib.misc import ObjectTypeName\n',
        'from lib import oodb\n',
        "fname = os.sep.join([_root_,dbx_name('The_Catalog')])\n",
        'dbx_name = lambda fpath,name:oodb.dbx_name(name,fpath)\n',
        "fname = dbx_name(_root_,'The_Catalog')\n",
        "fname = oodb.dbx_name('The_Catalog',_root_)\n",
        'save_dict(fname,_d_)\n',
        'fname\n',
        'oodb.getMungedFilenameFor(fname)\n',
        'foo = os.sep.join([top,p])\n',
        'foo\n',
        'os.path.exists(foo)\n',
        '_name\n',
        '_rr_\n',
        'agent.lastError\n',
        'rec.parent\n',
        's\n',
        'rec.count\n',
        'rec.count()\n',
        'rec.first()\n'],
                    u'file:c:/Apache228/htdocs/pyeggs/manage.py': ['settings'\
        '.DATABASE_HOST\n'],
                    u'file:z:/python projects/_django-projects/www_pypi_info/manage.py': [''\
        'content\n',
        'a.toHtml()\n',
        'h_Content.toHtml()\n',
        "h_Content.toHtml().replace('<br>','').replace('<BR>','').replace('<"\
        "Br>','').replace('<bR>','').replace('\\n','').replace('\\t','')\n",
        'table.toHtml()\n',
        'oohtml.Html().tagH1(item).toHtml() for item in items\n',
        '[oohtml.Html().tagH1(item).toHtml() for item in items]\n',
        "item[0].replace(chr(0x99),'&trade;')\n",
        'p_nodes[aNode.id]\n',
        'cat = cats[0]\n',
        'cat.id\n',
        'cat.section\n',
        'h.toHtml()\n'],
                    u'file:z:/python projects/resources-utils/create.py': [''\
        'sqlalchemy.__version__\n',
        'ENVIRONMENT_VARIABLE\n',
        'model_module.__name__\n',
        "model_module.__name__.split('.')[-2]\n",
        'Registration.objects\n',
        'Node.objects\n',
        'Node.objects.latest()\n',
        'Node.objects.latest(id)\n',
        "Node.objects.latest('id')\n",
        'self.model._meta.object_name\n',
        'Anode\n',
        'aNode\n',
        'type(foo)\n',
        'foo[0].id\n',
        'l = [r for r in l_records if (r.id == 1)]\n',
        'foo = session.query(Node).filter(Node.id == 1).all()\n',
        'self.query(lamda_clause)\n',
        'agent.session.query(Node)\n',
        'agent.session.query(Node).filter("id>1")\n',
        'agent.session.query(Node).filter("id>1").order_by("id").all()\n',
        'l = agent.session.query(Node).filter("id>=1").order_by("id").all()\n']},
        'sel-line': 6,
        'sel-line-start': 154,
        'selection_end': 158,
        'selection_start': 158},
                       loc('unknown:<untitled> #123'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'history': {},
        'sel-line': 22,
        'sel-line-start': 509,
        'selection_end': 509,
        'selection_start': 509},
                       loc('unknown:<untitled> #153'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['x\n',
                           'typeof foo\n',
                           'typeof( foo)\n',
                           'foo.__class__\n',
                           'foo.__classname__\n',
                           'typeof foo.__class__\n',
                           'typeof( foo.__class__)\n',
                           'str(foo.__class__)\n',
                           'type(foo.__class__)\n',
                           'type(foo).__name__\n',
                           'import os\n',
                           'os.tmpfile()\n',
                           'os.tmpfile().name\n',
                           'foo.name()\n',
                           "foo.write('+++')\n",
                           'foo.close()\n',
                           'foo = os.tmpfile()\n',
                           'foo2 = os.tmpfile()\n',
                           'foo2.name\n',
                           'os.path.abspath(foo.name)\n',
                           'os.path.abspath(foo2.name)\n',
                           "foo = os.tempnam('magma')\n",
                           "foo = os.tmpnam('magma')\n",
                           'foo = os.tmpnam()\n',
                           'import tempfile\n',
                           'tempfile.\n',
                           'foo = tempfile.TemporaryFile()\n',
                           'foo.name\n',
                           'foo.name.split(os.sep)[0:-1]\n',
                           'os.sep.join(foo.name.split(os.sep)[0:-1])\n',
                           'type 1\n',
                           'type(1)\n',
                           'import pyax.sobject.batch.Batch\n',
                           'import pyax.sobject.batch\n',
                           'foo = pyax.sobject.batch.Batch()\n',
                           'foo = pyax.sobject.batch.Batch(1)\n',
                           'foo.get()\n',
                           'foo.add(101)\n',
                           "foo.add('101')\n",
                           'foo.add(foo)\n',
                           'foo.get(1)\n',
                           'foo.get(0)\n',
                           "foo.get('None')\n",
                           'foo.get(None)\n',
                           'foo.keys()\n',
                           'foo.keys()[0]\n',
                           '(foo.keys())[0]\n',
                           'str(foo.keys()[0])\n',
                           'foo[(foo.keys())[0]]\n',
                           'foo.get((foo.keys())[0])\n',
                           'foo.get((foo.keys())[0])[None]\n',
                           'foo.get(str((foo.keys())[0]))\n',
                           'print foo.get(str((foo.keys())[0]))\n',
                           '1?2\n',
                           '1 mod 2\n',
                           '1 and 2\n',
                           'divmod(1,2)\n',
                           'divmod(4,8)\n',
                           '[f for f in foo if f > 2]\n',
                           "foo = ['1.1','2.2','3.3','4.4','5.1']\n",
                           'foo = 10/3\n',
                           'foo = 10/3.3\n',
                           "print '%-10.2f' % foo\n",
                           '2**15\n',
                           '2**16\n',
                           '(2**16)-1\n',
                           'foo = {}\n',
                           "foo['a']=1\n",
                           "foo['b']=2\n",
                           "del foo['a']\n",
                           'foo = xrange(55555..56554)\n',
                           'foo = xrange(55555,56554)\n',
                           'foo\n',
                           '55555 in foo\n',
                           '_worker_ports = xrange(55555+len(_controller_por'\
                           'ts)+1,55555+len(_controller_ports)+1001)\n',
                           'len(_controller_ports)\n',
                           'len(_worker_ports)\n',
                           '_worker_ports\n',
                           '_controller_ports[-1]\n',
                           '_controller_ports\n',
                           '_controller_ports[0]\n',
                           '_worker_ports[0]\n',
                           '_worker_ports[-1]\n',
                           'foo = [1,2,3,4,5]\n',
                           'foo[1:]\n',
                           '_controller_ports = xrange(55555,56554)\n',
                           '_controller_ports[1:]\n',
                           'import uuid\n',
                           'uuid.uuid4()\n',
                           'list(1)\n',
                           'list(str(1))\n',
                           "d = {'1':1,'2':2}\n",
                           'd\n',
                           'list(d)\n',
                           'foo = xrange(55555,55555+10)\n',
                           'type(foo)\n',
                           '55556 in foo\n',
                           '55556 not in foo\n',
                           'foo = xrange(60000,60000+10-1)\n',
                           'len(foo)\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #154'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 4,
        'sel-line-start': 325,
        'selection_end': 325,
        'selection_start': 325},
                       loc('unknown:<untitled> #144'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 7,
        'sel-line-start': 140,
        'selection_end': 140,
        'selection_start': 140},
                       loc('unknown:<untitled> #151'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #152'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #128'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #129'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #146'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 10,
        'sel-line-start': 617,
        'selection_end': 617,
        'selection_start': 617},
                       loc('unknown:<untitled> #145'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 23,
        'sel-line-start': 1195,
        'selection_end': 1195,
        'selection_start': 1195},
                       loc('unknown:<untitled> #138'): {'attrib-starts': [],
        'first-line': 204,
        'folded-linenos': [],
        'history': {None: ['raychorn@vyperlogix.com\n',
                           'n\n',
                           'yes\n',
                           'raychorn\n',
                           'support@vyperlogix.com\n',
                           'peekab00\n']},
        'sel-line': 215,
        'sel-line-start': 23384,
        'selection_end': 23384,
        'selection_start': 23384},
                       loc('unknown:<untitled> #139'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #136'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {u'file:C:/Apache228/htdocs/pyeggs/manage.py': ['import s'\
        'ys\n',
        'sys.path\n'],
                    u'file:Z:/python projects/_django-projects/resources/manage.py': [''\
        'settings.TEMPLATE_LOADERS\n',
        'settings.TEMPLATE_DIRS\n',
        'request.path\n',
        'html\n'],
                    u'file:Z:/python projects/_django-projects/www_pypi_info/manage.py': [''\
        'items[0].\n',
        'items[0].keys()\n',
        'items[0][items[0].keys()[0]]\n',
        'items[0][0]\n',
        'items[0].__dict__\n',
        'items[0].__getattribute__(items[0].keys()[0])\n',
        'for x in obj:\n',
        '    print x\n',
        'obj.__hash__()\n',
        'obj.__dict__\n',
        'ObjectTypeName.typeName(v)\n',
        'type(v)\n',
        '_date = item.Jos_Content.created\n',
        '_date\n',
        '_utils.getAsDateTimeStr(_date)\n',
        '_utils.getAsDateTimeStr(_date,_fmt=_utils.formatDate_MMDDYYYY_slash'\
        'es()+_utils.formatSimpleTimeStr())\n',
        '_utils.getAsDateTimeStr(_date,fmt=_utils.formatDate_MMDDYYYY_slashe'\
        's()+_utils.formatSimpleTimeStr())\n',
        'item.Jos_Content.hits\n',
        'len(items)\n',
        'items[0]\n',
        '_item = items[0]\n',
        'users[item.Jos_Content.created_by].name\n',
        'users[item.Jos_Content.created_by][0].name\n',
        'item.asDict().keys()\n',
        'item.asDict()\n',
        'item\n',
        'str(item)\n',
        'self.__dict__\n',
        'real_k(k)\n',
        "'%s=\"%s\"' % (_k,v)\n",
        '_k\n',
        'v\n',
        "'%s=\"%s\"' % (_k,str(v))\n",
        "toks = item[-1].split('?')[-1].split('=')\n",
        "toks = [t.split('=') for t in item[-1].split('?')[-1].split('&')]\n",
        "d_parms = lists.HashedLists2(dict([tuple(t.split('=')) for t in ite"\
        "m[-1].split('?')[-1].split('&')]))\n",
        'recs[0]\n',
        'recs[0].Jos_Content\n',
        "template_filename('_styles.html')\n"],
                    u'file:Z:/python projects/pyEggs/benchmark1.py': ['z[0:1'\
        '00]\n',
        'regexer2(s)\n'],
                    u'file:Z:/python projects/pyEggs/pyEggs.py': ['import sy'\
        's\n',
        'sys.path\n',
        "'\\n'.join(sys.path)\n",
        "','.join(sys.path)\n",
        "', '.join(sys.path)\n",
        'os.listdir(root)\n',
        'rejecting_re.search(n).group()\n',
        'rejecting_re.search(n)\n',
        'os.sep.join(root.split(os.sep)[0:-1])\n',
        'type(zip)\n',
        'from lib.misc.ObjectTypeName import typeName\n',
        'typeName(zip)\n',
        'zip.__class__\n',
        'str(zip.__class__).split()[-1][1:-2]\n',
        'str(zip.__class__).split()[-1]\n',
        'src_analysis.asDict()\n',
        '_src_analysis.has_key(_f)\n',
        "_f.find('\\\\')\n",
        'foo = src_analysis.asDict()\n',
        'foo.has_key(_f)\n',
        "_f = os.sep.join(f.split('/').insert(0,''))\n",
        "foo = f.split('/')\n",
        "foo.insert(0,'')\n",
        'foo\n',
        '_f\n',
        '_src_analysis[_f]\n',
        'k\n',
        'v\n',
        'sys.argv[-1]\n',
        'args.keys()[0]\n',
        'sys.argv\n',
        'os.path.exists(_lib_dest)\n',
        "[f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os.path.sp"\
        "litext(f)[-1] == '.egg')]\n",
        "_eggs = [f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os"\
        ".path.splitext(f)[-1] == '.egg')]\n",
        "e_egg = [f for f in _eggs if (f.startswith('e'))][0]\n",
        "n_egg = [f for f in _eggs if (not f.startswith('e'))][0]\n",
        "keys = [k for k in d_analysis.keys() if (k.startswith('ext/')) or ("\
        "k.startswith('EGG-INFO/'))]\n",
        'keys\n',
        "contents = zip.read('EGG-INFO/SOURCES.txt')\n",
        "foo = contents.split('\\n')\n",
        "l_contents = contents.split('\\n')\n",
        'del foo\n',
        'keys = d_analysis.keys()\n',
        's1 = set(l_contents)\n',
        's1 = set()\n',
        '[s1.add(l) for l in l_contents]\n',
        's1 - set(keepers)\n',
        'new_list = list(set(l_contents) - (set(l_contents) - set(keepers)))'\
        '\n',
        "new_contents = '\\n'.join(new_list)\n"],
                    u'file:Z:/python projects/resources-utils/Resources_GUI/Resources_GUI.py': [''\
        'useLocalTime\n',
        'isUsingLocalTimeConversions\n',
        "hms = ['00','00','00']\n",
        '":".join(hms[(len(hms)-3):]\n',
        '":".join(hms[(len(hms)-3):])\n'],
                    u'file:Z:/python projects/resources-utils/create.py': [''\
        's_name.split(os.sep)\n',
        'nodes[-2]\n',
        'nodes\n',
        "os.path.abspath('.')\n",
        "_root_ = os.path.abspath('.')\n",
        '_root_\n',
        'dbx_name = lambda name:oodb.dbx_name(name,_data_path)\n',
        'from lib import misc\n',
        'from lib.misc import ObjectTypeName\n',
        'from lib import oodb\n',
        "fname = os.sep.join([_root_,dbx_name('The_Catalog')])\n",
        'dbx_name = lambda fpath,name:oodb.dbx_name(name,fpath)\n',
        "fname = dbx_name(_root_,'The_Catalog')\n",
        "fname = oodb.dbx_name('The_Catalog',_root_)\n",
        'save_dict(fname,_d_)\n',
        'fname\n',
        'oodb.getMungedFilenameFor(fname)\n',
        'foo = os.sep.join([top,p])\n',
        'foo\n',
        'os.path.exists(foo)\n',
        '_name\n',
        '_rr_\n',
        'agent.lastError\n',
        'rec.parent\n',
        's\n',
        'rec.count\n',
        'rec.count()\n',
        'rec.first()\n'],
                    u'file:c:/Apache228/htdocs/pyeggs/manage.py': ['settings'\
        '.DATABASE_HOST\n'],
                    u'file:z:/python projects/_django-projects/www_pypi_info/manage.py': [''\
        'content\n',
        'a.toHtml()\n',
        'h_Content.toHtml()\n',
        "h_Content.toHtml().replace('<br>','').replace('<BR>','').replace('<"\
        "Br>','').replace('<bR>','').replace('\\n','').replace('\\t','')\n",
        'table.toHtml()\n',
        'oohtml.Html().tagH1(item).toHtml() for item in items\n',
        '[oohtml.Html().tagH1(item).toHtml() for item in items]\n',
        "item[0].replace(chr(0x99),'&trade;')\n",
        'p_nodes[aNode.id]\n',
        'cat = cats[0]\n',
        'cat.id\n',
        'cat.section\n',
        'h.toHtml()\n'],
                    u'file:z:/python projects/resources-utils/create.py': [''\
        'sqlalchemy.__version__\n',
        'ENVIRONMENT_VARIABLE\n',
        'model_module.__name__\n',
        "model_module.__name__.split('.')[-2]\n",
        'Registration.objects\n',
        'Node.objects\n',
        'Node.objects.latest()\n',
        'Node.objects.latest(id)\n',
        "Node.objects.latest('id')\n",
        'self.model._meta.object_name\n',
        'Anode\n',
        'aNode\n',
        'type(foo)\n',
        'foo[0].id\n',
        'l = [r for r in l_records if (r.id == 1)]\n',
        'foo = session.query(Node).filter(Node.id == 1).all()\n',
        'self.query(lamda_clause)\n',
        'agent.session.query(Node)\n',
        'agent.session.query(Node).filter("id>1")\n',
        'agent.session.query(Node).filter("id>1").order_by("id").all()\n',
        'l = agent.session.query(Node).filter("id>=1").order_by("id").all()\n']},
        'sel-line': 2,
        'sel-line-start': 68,
        'selection_end': 72,
        'selection_start': 72},
                       loc('unknown:<untitled> #137'): {'attrib-starts': [],
        'first-line': 9980,
        'folded-linenos': [],
        'history': {},
        'sel-line': 9999,
        'sel-line-start': 413272,
        'selection_end': 413272,
        'selection_start': 413272},
                       loc('unknown:<untitled> #133'): {'attrib-starts': [],
        'first-line': 13,
        'folded-linenos': [],
        'history': {},
        'sel-line': 36,
        'sel-line-start': 1896,
        'selection_end': 1896,
        'selection_start': 1896},
                       loc('unknown:<untitled> #132'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 22,
        'sel-line-start': 1136,
        'selection_end': 1136,
        'selection_start': 1136},
                       loc('unknown:<untitled> #130'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import re\n',
                           '_re = re.compile("[.]pyo", re.IGNORECASE)\n',
                           '_re\n',
                           'type(_re)\n',
                           '_re.__class__\n',
                           'from lib.misc import ObjectTypeName\n',
                           'ObjectTypeName.typeName(_re)\n',
                           'isinstance(_re,_sre.SRE_Pattern)\n',
                           'import types\n',
                           "os.listdir('C:/@1b')\n",
                           "os.listdir('C:/@1b') == []\n",
                           'import cython_templates\n',
                           'cython_templates.template1\n',
                           'os.getcwd()\n',
                           'foo = [1,2,3,4,5]\n',
                           'bar = [2,3]\n',
                           'foo=set(foo)\n',
                           'bar=set(bar)\n',
                           'bar\n',
                           'bar=set(1,2,4,5,6,7,8])\n',
                           'bar=set([1,2,4,5,6,7,8])\n',
                           'foo-bar\n',
                           '[1,2,3] + [4,5,6]\n',
                           'set([1,2,3]) + set([4,5,6])\n',
                           'set([1,2,3]) and set([4,5,6])\n',
                           'list(set([1,2,3] + [4,5,6]))\n',
                           'list(set([1,2,3,4] + [3,4,5,6]))\n',
                           "os.path.splitext('a.123')\n",
                           'import tempfile\n',
                           "foo = tempfile.mkstemp('zip','new','xxxxx')\n",
                           "foo = tempfile.mkstemp('zip','new')\n",
                           'foo[0].close()\n',
                           'os.close(foo[0])\n',
                           'os.remove(foo[-1])\n',
                           'import socket\n',
                           'socket.gethostname\n',
                           'socket.gethostname()\n',
                           'socket.gethostbyname(socket.gethostname())\n',
                           'socket.gethostbyname_ex(socket.gethostname())\n',
                           "r'C:\\Inetpub\\vhosts\\vyperlogix.com\\httpdocs\\"\
                           "site'\n",
                           'from lib.misc import GenPasswd\n',
                           'GenPasswd.GenPasswd(length=32)\n',
                           "GenPasswd.GenPasswd(length=32,chars=''.join([ch "\
                           "for ch in xrange(0,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(0,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(ord(32),128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(32,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(33,128)]))\n",
                           'string.printable()\n',
                           'import string\n',
                           'string.printable\n',
                           'import cairo\n',
                           'from lib.hash import lists\n',
                           'import math\n',
                           'foo = [0,1,2,3]\n',
                           'foo.pop()\n',
                           'foo.append(2)\n',
                           'foo\n',
                           'foo[0:3]\n',
                           'from lib.misc import _utils\n',
                           '_utils.time_to_secs(01:01:01)\n',
                           "_utils.time_to_secs('01:01:01')\n",
                           '_utils.secs_to_time(3662)\n',
                           '_utils.secs_to_time(3661)\n',
                           'import os\n',
                           "'..%s' % (os.sep)\n",
                           'GenPasswd.GenPasswd(length=128,chars=GenPasswd.c'\
                           'hars_printable)\n',
                           'from models import Node\n',
                           'import uuid\n',
                           'len(str(uuid.uuid4))\n',
                           'str(uuid.uuid4)\n',
                           'u = str(uuid.uuid4())\n',
                           'u\n',
                           'len(u)\n',
                           'from vyperlogix.misc import _utils\n',
                           "s = '242abcdef'\n",
                           's[0:3]\n',
                           's[4:]\n',
                           's[3:]\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #131'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #134'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #135'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #160'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {u'file:C:/Apache228/htdocs/pyeggs/manage.py': ['import s'\
        'ys\n',
        'sys.path\n'],
                    u'file:Z:/python projects/_django-projects/vyperlogix/djangocerise_1_2/webserver.py': [''\
        'options\n'],
                    u'file:Z:/python projects/_django-projects/vyperlogix/manage.py': [""\
        "toks = [urllib.unquote_plus(t) for t in request.path.split('/') if "\
        "(len(t) > 0)]\n",
        'from settings import _navigation_tabs\n',
        'item[0]\n',
        'urlpatterns[0][0]\n',
        'urlpatterns[0].url_patterns\n',
        'urlpatterns[0].url_patterns[0]\n'],
                    u'file:Z:/python projects/_django-projects/vyperlogix_site/djangocerise_1_2/webserver.py': [''\
        'from vyperlogix_site import settings\n'],
                    u'file:Z:/python projects/pyEggs/benchmark1.py': ['z[0:1'\
        '00]\n',
        'regexer2(s)\n'],
                    u'file:Z:/python projects/pyEggs/pyEggs.py': ['import sy'\
        's\n',
        'sys.path\n',
        "'\\n'.join(sys.path)\n",
        "','.join(sys.path)\n",
        "', '.join(sys.path)\n",
        'os.listdir(root)\n',
        'rejecting_re.search(n).group()\n',
        'rejecting_re.search(n)\n',
        'os.sep.join(root.split(os.sep)[0:-1])\n',
        'type(zip)\n',
        'from lib.misc.ObjectTypeName import typeName\n',
        'typeName(zip)\n',
        'zip.__class__\n',
        'str(zip.__class__).split()[-1][1:-2]\n',
        'str(zip.__class__).split()[-1]\n',
        'src_analysis.asDict()\n',
        '_src_analysis.has_key(_f)\n',
        "_f.find('\\\\')\n",
        'foo = src_analysis.asDict()\n',
        'foo.has_key(_f)\n',
        "_f = os.sep.join(f.split('/').insert(0,''))\n",
        "foo = f.split('/')\n",
        "foo.insert(0,'')\n",
        'foo\n',
        '_f\n',
        '_src_analysis[_f]\n',
        'k\n',
        'v\n',
        'sys.argv[-1]\n',
        'args.keys()[0]\n',
        'sys.argv\n',
        'os.path.exists(_lib_dest)\n',
        "[f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os.path.sp"\
        "litext(f)[-1] == '.egg')]\n",
        "_eggs = [f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os"\
        ".path.splitext(f)[-1] == '.egg')]\n",
        "e_egg = [f for f in _eggs if (f.startswith('e'))][0]\n",
        "n_egg = [f for f in _eggs if (not f.startswith('e'))][0]\n",
        "keys = [k for k in d_analysis.keys() if (k.startswith('ext/')) or ("\
        "k.startswith('EGG-INFO/'))]\n",
        'keys\n',
        "contents = zip.read('EGG-INFO/SOURCES.txt')\n",
        "foo = contents.split('\\n')\n",
        "l_contents = contents.split('\\n')\n",
        'del foo\n',
        'keys = d_analysis.keys()\n',
        's1 = set(l_contents)\n',
        's1 = set()\n',
        '[s1.add(l) for l in l_contents]\n',
        's1 - set(keepers)\n',
        'new_list = list(set(l_contents) - (set(l_contents) - set(keepers)))'\
        '\n',
        "new_contents = '\\n'.join(new_list)\n"],
                    u'file:c:/Apache228/htdocs/pyeggs/manage.py': ['settings'\
        '.DATABASE_HOST\n'],
                    u'file:z:/python projects/@lib/vyperlogix/mail/mailServer.py': [''\
        'e\n',
        'msg0.html_body\n'],
                    u'file:z:/python projects/_django-projects/makeZip.py': [''\
        'from vyperlogix.hash import lists\n'],
                    u'file:z:/python projects/_django-projects/vyperlogix/djangocerise_1_2/webserver.py': [""\
        "request.POST['firstname']\n",
        'a = {1:1}\n',
        'b = {2:2}\n',
        'a = lists.HashedLists2(a)\n',
        'b = lists.HashedLists2(b)\n',
        'a\n',
        'a+b\n',
        'c=a+b\n',
        'c.keys()\n',
        'c.values()\n',
        'c.asDict()\n',
        'request.POST\n',
        'type(self.fields)\n',
        'self.fields.keyOrder()\n',
        'v.widget.render()\n',
        'str(v.widget)\n',
        'k.upper()\n',
        'v.required\n',
        "f.fields['firstname']\n",
        'ObjectTypeName.typeClassName(v)\n',
        'v.queryset[0]\n',
        'v.queryset[0].keys()\n',
        'v.queryset[0].objects()\n',
        'v.queryset[0].objects\n',
        'v.queryset[0].__dict__\n',
        'h.toHtml()\n',
        'from vyperlogix.misc import ObjectTypeName\n',
        'ObjectTypeName.typeClassName(aList)\n',
        'aList.count\n',
        'aList.count()\n',
        'aList[0]\n',
        '[aList[i] for i in xrange(0,aList.count())]\n',
        'item\n',
        'item._meta\n',
        'item._meta.db_table\n',
        'item._meta.fields\n',
        'item.__dict__\n',
        'from vyperlogix.classes.SmartObject import SmartObject\n',
        'SmartObject.fromDict(item.__dict__)\n',
        'SmartObject().fromDict(item.__dict__)\n',
        's = SmartObject().fromDict(item.__dict__)\n',
        's = SmartObject(item.__dict__)\n',
        's\n',
        'form_html\n',
        'User.objects.get(email_address=email_address)\n',
        'request.POST.keys()\n',
        "request.environ['HTTP_HOST']\n",
        "c = Context({'current_year': _yyyy})\n",
        'html_footer\n',
        'details.message\n',
        'field.label\n',
        "country_field = form_registration.get_model_choice_field_by_name('c"\
        "ountry')\n",
        'country_field.queryset\n',
        'type(country_field.queryset)\n',
        'country_field.queryset.filter(iso3=country)\n',
        'aCountry = country_field.queryset.filter(iso3=country)\n',
        'aCountry.id\n',
        'aCountry.__dict__\n',
        "aCountry['id']\n",
        'aCountry.count\n',
        'aCountry.count()\n',
        'aCountry.model\n',
        'aCountry.values\n',
        'aCountry.values()\n',
        "aCountry.values()['id']\n",
        "aCountry.values()[0]['id']\n",
        "keys._decode('7065656B61623030')\n",
        "msg.toAddList = ['raychorn@hotmail.com']\n",
        'msg.message\n',
        'f.form_name\n',
        'self.fields.has_key(field_name)\n',
        "aField.value = ''\n",
        'field_name.upper()\n',
        'self.model.__dict__\n',
        'self.model.__dict__.keys()\n',
        "self.model.__dict__['email_address']\n",
        'self.model.pk\n',
        "f = self.fields['email_address']\n",
        'f.__dict__\n',
        'self.model.mro\n',
        'self.model.mro()\n',
        'self.model._meta\n',
        'self.model._meta.pk\n',
        'pk = self.model._meta.pk\n',
        'kw = {pk.label:1}\n',
        'kw = {pk.formfield:1}\n',
        'pk.formfield\n',
        'pk.formfield().label\n',
        'pk.formfield().value\n',
        'pk.formfield()\n',
        'self.model()\n',
        'anObj = self.model()\n',
        "anObj['firstname'] = -1\n",
        "anObj.__setattr__('firstname',1)\n",
        'self.fields\n',
        'form.email_fields\n',
        'self.fields.keyOrder\n',
        'n % 2\n',
        'users = User.objects.get(email_address=activation_key)\n',
        "activation_email, product_name = activation_key.split(',')\n"]},
        'sel-line': 9,
        'sel-line-start': 583,
        'selection_end': 587,
        'selection_start': 587},
                       loc('unknown:<untitled> #159'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #158'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #156'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #155'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #157'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {u'file:C:/Apache228/htdocs/pyeggs/manage.py': ['import s'\
        'ys\n',
        'sys.path\n'],
                    u'file:Z:/python projects/_django-projects/vyperlogix/djangocerise_1_2/webserver.py': [''\
        'options\n'],
                    u'file:Z:/python projects/_django-projects/vyperlogix/manage.py': [""\
        "toks = [urllib.unquote_plus(t) for t in request.path.split('/') if "\
        "(len(t) > 0)]\n",
        'from settings import _navigation_tabs\n',
        'item[0]\n',
        'urlpatterns[0][0]\n',
        'urlpatterns[0].url_patterns\n',
        'urlpatterns[0].url_patterns[0]\n'],
                    u'file:Z:/python projects/pyEggs/benchmark1.py': ['z[0:1'\
        '00]\n',
        'regexer2(s)\n'],
                    u'file:Z:/python projects/pyEggs/pyEggs.py': ['import sy'\
        's\n',
        'sys.path\n',
        "'\\n'.join(sys.path)\n",
        "','.join(sys.path)\n",
        "', '.join(sys.path)\n",
        'os.listdir(root)\n',
        'rejecting_re.search(n).group()\n',
        'rejecting_re.search(n)\n',
        'os.sep.join(root.split(os.sep)[0:-1])\n',
        'type(zip)\n',
        'from lib.misc.ObjectTypeName import typeName\n',
        'typeName(zip)\n',
        'zip.__class__\n',
        'str(zip.__class__).split()[-1][1:-2]\n',
        'str(zip.__class__).split()[-1]\n',
        'src_analysis.asDict()\n',
        '_src_analysis.has_key(_f)\n',
        "_f.find('\\\\')\n",
        'foo = src_analysis.asDict()\n',
        'foo.has_key(_f)\n',
        "_f = os.sep.join(f.split('/').insert(0,''))\n",
        "foo = f.split('/')\n",
        "foo.insert(0,'')\n",
        'foo\n',
        '_f\n',
        '_src_analysis[_f]\n',
        'k\n',
        'v\n',
        'sys.argv[-1]\n',
        'args.keys()[0]\n',
        'sys.argv\n',
        'os.path.exists(_lib_dest)\n',
        "[f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os.path.sp"\
        "litext(f)[-1] == '.egg')]\n",
        "_eggs = [f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os"\
        ".path.splitext(f)[-1] == '.egg')]\n",
        "e_egg = [f for f in _eggs if (f.startswith('e'))][0]\n",
        "n_egg = [f for f in _eggs if (not f.startswith('e'))][0]\n",
        "keys = [k for k in d_analysis.keys() if (k.startswith('ext/')) or ("\
        "k.startswith('EGG-INFO/'))]\n",
        'keys\n',
        "contents = zip.read('EGG-INFO/SOURCES.txt')\n",
        "foo = contents.split('\\n')\n",
        "l_contents = contents.split('\\n')\n",
        'del foo\n',
        'keys = d_analysis.keys()\n',
        's1 = set(l_contents)\n',
        's1 = set()\n',
        '[s1.add(l) for l in l_contents]\n',
        's1 - set(keepers)\n',
        'new_list = list(set(l_contents) - (set(l_contents) - set(keepers)))'\
        '\n',
        "new_contents = '\\n'.join(new_list)\n"],
                    u'file:c:/Apache228/htdocs/pyeggs/manage.py': ['settings'\
        '.DATABASE_HOST\n'],
                    u'file:z:/python projects/_django-projects/vyperlogix/djangocerise_1_2/webserver.py': [''\
        'sys.path\n',
        'import sys\n',
        'for p in sys.path:\n',
        '\tprint p\n',
        'request.path\n',
        'from setting import MEDIA_ROOT\n',
        'from settings import MEDIA_ROOT\n',
        "request.path.split('/')\n",
        'import os\n',
        "_utils.eat_leading_token_if_empty(request.path,delim='/')\n",
        'reload(_utils)\n',
        "fpath = os.sep.join([MEDIA_ROOT,_utils.eat_leading_token_if_empty(r"\
        "equest.path,delim='/')])\n",
        "fpath = '/'.join([MEDIA_ROOT,_utils.eat_leading_token_if_empty(requ"\
        "est.path,delim='/')])\n",
        'h.toHtml()\n',
        "params['vyper-proxy']\n",
        'd_items = lists.HashedLists(d)\n',
        "_item = d_items[params['vyper-proxy']]\n",
        'f.as_table()\n'],
                    u'file:z:/python projects/grab_images_from_css/edit_css_for_images.py': [''\
        'css_content = _utils.readFileFrom(css_fname,noCRs=False)\n',
        "toks = css_content.split('url(')\n"],
                    u'file:z:/python projects/grab_images_from_css/grab_images_from_css.py': [''\
        'sheet.media.length()\n',
        'sheet.media.length\n',
        'sheet.cssRules\n',
        'selector.element\n',
        'selector.selectorText\n',
        'str(selector)\n',
        'rule.type\n',
        'rule.cssText\n',
        'rule.selectorList\n',
        's = rule.style\n',
        's.cssText\n',
        'rule.style\n',
        'type(rule.style)\n',
        'str(rule.style)\n',
        'rule.style.backgroundImage\n',
        'rule.style.cssText\n',
        'sheet.href\n']},
        'sel-line': 4,
        'sel-line-start': 140,
        'selection_end': 144,
        'selection_start': 144},
                       loc('unknown:<untitled> #118'): {'attrib-starts': [],
        'first-line': 5,
        'folded-linenos': [],
        'history': {None: ['import re\n',
                           '_re = re.compile("[.]pyo", re.IGNORECASE)\n',
                           '_re\n',
                           'type(_re)\n',
                           '_re.__class__\n',
                           'from lib.misc import ObjectTypeName\n',
                           'ObjectTypeName.typeName(_re)\n',
                           'isinstance(_re,_sre.SRE_Pattern)\n',
                           'import types\n',
                           "os.listdir('C:/@1b')\n",
                           "os.listdir('C:/@1b') == []\n",
                           'import cython_templates\n',
                           'cython_templates.template1\n',
                           'os.getcwd()\n',
                           'foo = [1,2,3,4,5]\n',
                           'bar = [2,3]\n',
                           'foo=set(foo)\n',
                           'bar=set(bar)\n',
                           'bar\n',
                           'bar=set(1,2,4,5,6,7,8])\n',
                           'bar=set([1,2,4,5,6,7,8])\n',
                           'foo-bar\n',
                           '[1,2,3] + [4,5,6]\n',
                           'set([1,2,3]) + set([4,5,6])\n',
                           'set([1,2,3]) and set([4,5,6])\n',
                           'list(set([1,2,3] + [4,5,6]))\n',
                           'list(set([1,2,3,4] + [3,4,5,6]))\n',
                           "os.path.splitext('a.123')\n",
                           'import tempfile\n',
                           "foo = tempfile.mkstemp('zip','new','xxxxx')\n",
                           "foo = tempfile.mkstemp('zip','new')\n",
                           'foo[0].close()\n',
                           'os.close(foo[0])\n',
                           'os.remove(foo[-1])\n',
                           'import socket\n',
                           'socket.gethostname\n',
                           'socket.gethostname()\n',
                           'socket.gethostbyname(socket.gethostname())\n',
                           'socket.gethostbyname_ex(socket.gethostname())\n',
                           "r'C:\\Inetpub\\vhosts\\vyperlogix.com\\httpdocs\\"\
                           "site'\n",
                           'from lib.misc import GenPasswd\n',
                           'GenPasswd.GenPasswd(length=32)\n',
                           "GenPasswd.GenPasswd(length=32,chars=''.join([ch "\
                           "for ch in xrange(0,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(0,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(ord(32),128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(32,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(33,128)]))\n",
                           'string.printable()\n',
                           'import string\n',
                           'string.printable\n',
                           'import cairo\n',
                           'from lib.hash import lists\n',
                           'import math\n',
                           'foo = [0,1,2,3]\n',
                           'foo.pop()\n',
                           'foo.append(2)\n',
                           'foo\n',
                           'foo[0:3]\n',
                           'from lib.misc import _utils\n',
                           '_utils.time_to_secs(01:01:01)\n',
                           "_utils.time_to_secs('01:01:01')\n",
                           '_utils.secs_to_time(3662)\n',
                           '_utils.secs_to_time(3661)\n',
                           'import os\n',
                           "'..%s' % (os.sep)\n",
                           'GenPasswd.GenPasswd(length=128,chars=GenPasswd.c'\
                           'hars_printable)\n',
                           'from models import Node\n',
                           'import uuid\n',
                           'len(str(uuid.uuid4))\n',
                           'str(uuid.uuid4)\n',
                           'u = str(uuid.uuid4())\n',
                           'u\n',
                           'len(u)\n',
                           'import pysvn\n',
                           'client = pysvn.Client()\n',
                           "e = client.info2('svn+ssh://nearbyin@near-by.inf"\
                           "o/home/nearbyin/repos/Python')\n",
                           'from vyperlogix.crypto.Encryptors import keys\n',
                           'from vyperlogix.crypto.Encryptors import keys as'\
                           '\n',
                           'from vyperlogix.crypto.Encryptors import keys as'\
                           ' \n',
                           'from vyperlogix.crypto.Encryptors.keys import _e'\
                           'ncode\n',
                           'from vyperlogix.crypto import Encryptors\n',
                           "Encryptors._encode('now is the time for you to s"\
                           "tay off my site')\n",
                           "Encryptors.encode('now is the time for you to st"\
                           "ay off my site')\n"]},
        'sel-line': 23,
        'sel-line-start': 1076,
        'selection_end': 1076,
        'selection_start': 1076},
                       loc('unknown:<untitled> #125'): {'attrib-starts': [],
        'first-line': 19,
        'folded-linenos': [],
        'history': {},
        'sel-line': 42,
        'sel-line-start': 1984,
        'selection_end': 1984,
        'selection_start': 1984},
                       loc('unknown:<untitled> #117'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #127'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 22,
        'sel-line-start': 1136,
        'selection_end': 1136,
        'selection_start': 1136},
                       loc('unknown:<untitled> #126'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {u'file:C:/Apache228/htdocs/pyeggs/manage.py': ['import s'\
        'ys\n',
        'sys.path\n'],
                    u'file:Z:/python projects/_django-projects/makeZip.py': [""\
        "_source.replace(source,'')\n",
        "os.sep.join(_source.replace(source,'').split(os.sep)[1:])\n",
        '_dest\n'],
                    u'file:Z:/python projects/_django-projects/resources/manage.py': [''\
        'settings.TEMPLATE_LOADERS\n',
        'settings.TEMPLATE_DIRS\n',
        'request.path\n',
        'html\n'],
                    u'file:Z:/python projects/_django-projects/www_pypi_info/manage.py': [''\
        'items[0].\n',
        'items[0].keys()\n',
        'items[0][items[0].keys()[0]]\n',
        'items[0][0]\n',
        'items[0].__dict__\n',
        'items[0].__getattribute__(items[0].keys()[0])\n',
        'for x in obj:\n',
        '    print x\n',
        'obj.__hash__()\n',
        'obj.__dict__\n',
        'ObjectTypeName.typeName(v)\n',
        'type(v)\n',
        '_date = item.Jos_Content.created\n',
        '_date\n',
        '_utils.getAsDateTimeStr(_date)\n',
        '_utils.getAsDateTimeStr(_date,_fmt=_utils.formatDate_MMDDYYYY_slash'\
        'es()+_utils.formatSimpleTimeStr())\n',
        '_utils.getAsDateTimeStr(_date,fmt=_utils.formatDate_MMDDYYYY_slashe'\
        's()+_utils.formatSimpleTimeStr())\n',
        'item.Jos_Content.hits\n',
        'len(items)\n',
        'items[0]\n',
        '_item = items[0]\n',
        'users[item.Jos_Content.created_by].name\n',
        'users[item.Jos_Content.created_by][0].name\n',
        'item.asDict().keys()\n',
        'item.asDict()\n',
        'item\n',
        'str(item)\n',
        'self.__dict__\n',
        'real_k(k)\n',
        "'%s=\"%s\"' % (_k,v)\n",
        '_k\n',
        'v\n',
        "'%s=\"%s\"' % (_k,str(v))\n",
        "toks = item[-1].split('?')[-1].split('=')\n",
        "toks = [t.split('=') for t in item[-1].split('?')[-1].split('&')]\n",
        "d_parms = lists.HashedLists2(dict([tuple(t.split('=')) for t in ite"\
        "m[-1].split('?')[-1].split('&')]))\n",
        'recs[0]\n',
        'recs[0].Jos_Content\n',
        "template_filename('_styles.html')\n",
        'item.introtext\n',
        "result = re.findall(r'(?si)\\w+\\s*=\\s*\"[^\"]*\"', match.group())"\
        "\n",
        "toks2 = _url.split('\"')\n",
        "toks3 = toks2[1].split('?')\n",
        "toks4 = toks3[-1].split('=')\n",
        "toks4 = toks3[-1].split('&')\n",
        "toks4 = [t.split('=') for t in toks3[-1].split('&')]\n",
        "toks4 = [tuple(t.split('=')) for t in toks3[-1].split('&')]\n",
        "d_toks4 = dict([tuple(t.split('=')) for t in toks3[-1].split('&')])"\
        "\n",
        'match.start()\n',
        'match.end()\n',
        'subject[match.start():match.end()]\n',
        'm.start()\n',
        'm.stop()\n',
        'm.end()\n',
        'm.group()[m.start():m.end()]\n',
        'match.group()[m.start():m.end()]\n',
        'subject\n',
        'match.group()\n',
        'm.group()\n',
        'subject.replace(m.group(),href)\n',
        'self.outstream.getvalue()\n'],
                    u'file:Z:/python projects/pyEggs/benchmark1.py': ['z[0:1'\
        '00]\n',
        'regexer2(s)\n'],
                    u'file:Z:/python projects/pyEggs/pyEggs.py': ['import sy'\
        's\n',
        'sys.path\n',
        "'\\n'.join(sys.path)\n",
        "','.join(sys.path)\n",
        "', '.join(sys.path)\n",
        'os.listdir(root)\n',
        'rejecting_re.search(n).group()\n',
        'rejecting_re.search(n)\n',
        'os.sep.join(root.split(os.sep)[0:-1])\n',
        'type(zip)\n',
        'from lib.misc.ObjectTypeName import typeName\n',
        'typeName(zip)\n',
        'zip.__class__\n',
        'str(zip.__class__).split()[-1][1:-2]\n',
        'str(zip.__class__).split()[-1]\n',
        'src_analysis.asDict()\n',
        '_src_analysis.has_key(_f)\n',
        "_f.find('\\\\')\n",
        'foo = src_analysis.asDict()\n',
        'foo.has_key(_f)\n',
        "_f = os.sep.join(f.split('/').insert(0,''))\n",
        "foo = f.split('/')\n",
        "foo.insert(0,'')\n",
        'foo\n',
        '_f\n',
        '_src_analysis[_f]\n',
        'k\n',
        'v\n',
        'sys.argv[-1]\n',
        'args.keys()[0]\n',
        'sys.argv\n',
        'os.path.exists(_lib_dest)\n',
        "[f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os.path.sp"\
        "litext(f)[-1] == '.egg')]\n",
        "_eggs = [f for f in os.listdir(_cwd) if (os.path.isfile(f)) and (os"\
        ".path.splitext(f)[-1] == '.egg')]\n",
        "e_egg = [f for f in _eggs if (f.startswith('e'))][0]\n",
        "n_egg = [f for f in _eggs if (not f.startswith('e'))][0]\n",
        "keys = [k for k in d_analysis.keys() if (k.startswith('ext/')) or ("\
        "k.startswith('EGG-INFO/'))]\n",
        'keys\n',
        "contents = zip.read('EGG-INFO/SOURCES.txt')\n",
        "foo = contents.split('\\n')\n",
        "l_contents = contents.split('\\n')\n",
        'del foo\n',
        'keys = d_analysis.keys()\n',
        's1 = set(l_contents)\n',
        's1 = set()\n',
        '[s1.add(l) for l in l_contents]\n',
        's1 - set(keepers)\n',
        'new_list = list(set(l_contents) - (set(l_contents) - set(keepers)))'\
        '\n',
        "new_contents = '\\n'.join(new_list)\n"],
                    u'file:Z:/python projects/resources-utils/Resources_GUI/Resources_GUI.py': [''\
        'useLocalTime\n',
        'isUsingLocalTimeConversions\n',
        "hms = ['00','00','00']\n",
        '":".join(hms[(len(hms)-3):]\n',
        '":".join(hms[(len(hms)-3):])\n'],
                    u'file:Z:/python projects/resources-utils/create.py': [''\
        's_name.split(os.sep)\n',
        'nodes[-2]\n',
        'nodes\n',
        "os.path.abspath('.')\n",
        "_root_ = os.path.abspath('.')\n",
        '_root_\n',
        'dbx_name = lambda name:oodb.dbx_name(name,_data_path)\n',
        'from lib import misc\n',
        'from lib.misc import ObjectTypeName\n',
        'from lib import oodb\n',
        "fname = os.sep.join([_root_,dbx_name('The_Catalog')])\n",
        'dbx_name = lambda fpath,name:oodb.dbx_name(name,fpath)\n',
        "fname = dbx_name(_root_,'The_Catalog')\n",
        "fname = oodb.dbx_name('The_Catalog',_root_)\n",
        'save_dict(fname,_d_)\n',
        'fname\n',
        'oodb.getMungedFilenameFor(fname)\n',
        'foo = os.sep.join([top,p])\n',
        'foo\n',
        'os.path.exists(foo)\n',
        '_name\n',
        '_rr_\n',
        'agent.lastError\n',
        'rec.parent\n',
        's\n',
        'rec.count\n',
        'rec.count()\n',
        'rec.first()\n'],
                    u'file:c:/Apache228/htdocs/pyeggs/manage.py': ['settings'\
        '.DATABASE_HOST\n'],
                    u'file:z:/python projects/_django-projects/www_pypi_info/manage.py': [''\
        'content\n',
        'a.toHtml()\n',
        'h_Content.toHtml()\n',
        "h_Content.toHtml().replace('<br>','').replace('<BR>','').replace('<"\
        "Br>','').replace('<bR>','').replace('\\n','').replace('\\t','')\n",
        'table.toHtml()\n',
        'oohtml.Html().tagH1(item).toHtml() for item in items\n',
        '[oohtml.Html().tagH1(item).toHtml() for item in items]\n',
        "item[0].replace(chr(0x99),'&trade;')\n",
        'p_nodes[aNode.id]\n',
        'cat = cats[0]\n',
        'cat.id\n',
        'cat.section\n',
        'h.toHtml()\n'],
                    u'file:z:/python projects/resources-utils/create.py': [''\
        'sqlalchemy.__version__\n',
        'ENVIRONMENT_VARIABLE\n',
        'model_module.__name__\n',
        "model_module.__name__.split('.')[-2]\n",
        'Registration.objects\n',
        'Node.objects\n',
        'Node.objects.latest()\n',
        'Node.objects.latest(id)\n',
        "Node.objects.latest('id')\n",
        'self.model._meta.object_name\n',
        'Anode\n',
        'aNode\n',
        'type(foo)\n',
        'foo[0].id\n',
        'l = [r for r in l_records if (r.id == 1)]\n',
        'foo = session.query(Node).filter(Node.id == 1).all()\n',
        'self.query(lamda_clause)\n',
        'agent.session.query(Node)\n',
        'agent.session.query(Node).filter("id>1")\n',
        'agent.session.query(Node).filter("id>1").order_by("id").all()\n',
        'l = agent.session.query(Node).filter("id>=1").order_by("id").all()\n']},
        'sel-line': 8,
        'sel-line-start': 408,
        'selection_end': 412,
        'selection_start': 412},
                       loc('unknown:<untitled> #166'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import re\n',
                           '_re = re.compile("[.]pyo", re.IGNORECASE)\n',
                           '_re\n',
                           'type(_re)\n',
                           '_re.__class__\n',
                           'from lib.misc import ObjectTypeName\n',
                           'ObjectTypeName.typeName(_re)\n',
                           'isinstance(_re,_sre.SRE_Pattern)\n',
                           'import types\n',
                           "os.listdir('C:/@1b')\n",
                           "os.listdir('C:/@1b') == []\n",
                           'import cython_templates\n',
                           'cython_templates.template1\n',
                           'os.getcwd()\n',
                           'foo = [1,2,3,4,5]\n',
                           'bar = [2,3]\n',
                           'foo=set(foo)\n',
                           'bar=set(bar)\n',
                           'bar\n',
                           'bar=set(1,2,4,5,6,7,8])\n',
                           'bar=set([1,2,4,5,6,7,8])\n',
                           'foo-bar\n',
                           '[1,2,3] + [4,5,6]\n',
                           'set([1,2,3]) + set([4,5,6])\n',
                           'set([1,2,3]) and set([4,5,6])\n',
                           'list(set([1,2,3] + [4,5,6]))\n',
                           'list(set([1,2,3,4] + [3,4,5,6]))\n',
                           "os.path.splitext('a.123')\n",
                           'import tempfile\n',
                           "foo = tempfile.mkstemp('zip','new','xxxxx')\n",
                           "foo = tempfile.mkstemp('zip','new')\n",
                           'foo\n',
                           'foo[0].close()\n',
                           'os.close(foo[0])\n',
                           'os.remove(foo[-1])\n',
                           'from lib.misc import _utils\n',
                           'import os\n',
                           'from lib.hash import lists\n',
                           'socket.gethostname\n',
                           'socket.gethostname()\n',
                           'socket.gethostbyname(socket.gethostname())\n',
                           'socket.gethostbyname_ex(socket.gethostname())\n',
                           'import socket\n',
                           'socket.gethostbyname_ex(socket.gethostname())[0]'\
                           '\n',
                           'from datetime import datetime\n',
                           'datetime.now\n',
                           'datetime.now()\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #162'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import re\n',
                           '_re = re.compile("[.]pyo", re.IGNORECASE)\n',
                           '_re\n',
                           'type(_re)\n',
                           '_re.__class__\n',
                           'from lib.misc import ObjectTypeName\n',
                           'ObjectTypeName.typeName(_re)\n',
                           'isinstance(_re,_sre.SRE_Pattern)\n',
                           'import types\n',
                           "os.listdir('C:/@1b')\n",
                           "os.listdir('C:/@1b') == []\n",
                           'import cython_templates\n',
                           'cython_templates.template1\n',
                           'os.getcwd()\n',
                           'foo = [1,2,3,4,5]\n',
                           'bar = [2,3]\n',
                           'foo=set(foo)\n',
                           'bar=set(bar)\n',
                           'bar\n',
                           'bar=set(1,2,4,5,6,7,8])\n',
                           'bar=set([1,2,4,5,6,7,8])\n',
                           'foo-bar\n',
                           '[1,2,3] + [4,5,6]\n',
                           'set([1,2,3]) + set([4,5,6])\n',
                           'set([1,2,3]) and set([4,5,6])\n',
                           'list(set([1,2,3] + [4,5,6]))\n',
                           'list(set([1,2,3,4] + [3,4,5,6]))\n',
                           "os.path.splitext('a.123')\n",
                           'import tempfile\n',
                           "foo = tempfile.mkstemp('zip','new','xxxxx')\n",
                           "foo = tempfile.mkstemp('zip','new')\n",
                           'foo[0].close()\n',
                           'os.close(foo[0])\n',
                           'os.remove(foo[-1])\n',
                           'import socket\n',
                           'socket.gethostname\n',
                           'socket.gethostname()\n',
                           'socket.gethostbyname(socket.gethostname())\n',
                           'socket.gethostbyname_ex(socket.gethostname())\n',
                           "r'C:\\Inetpub\\vhosts\\vyperlogix.com\\httpdocs\\"\
                           "site'\n",
                           'from lib.misc import GenPasswd\n',
                           'GenPasswd.GenPasswd(length=32)\n',
                           "GenPasswd.GenPasswd(length=32,chars=''.join([ch "\
                           "for ch in xrange(0,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(0,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(ord(32),128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(32,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(33,128)]))\n",
                           'string.printable()\n',
                           'import string\n',
                           'string.printable\n',
                           'import cairo\n',
                           'from lib.hash import lists\n',
                           'import math\n',
                           'foo = [0,1,2,3]\n',
                           'foo.pop()\n',
                           'foo.append(2)\n',
                           'foo\n',
                           'foo[0:3]\n',
                           '_utils.time_to_secs(01:01:01)\n',
                           "_utils.time_to_secs('01:01:01')\n",
                           '_utils.secs_to_time(3662)\n',
                           '_utils.secs_to_time(3661)\n',
                           'import os\n',
                           "'..%s' % (os.sep)\n",
                           '1 % 3\n',
                           '2 % 3\n',
                           '5 % 3\n',
                           'from lib.misc import _utils\n',
                           'reload(_utils)\n',
                           '_utils.timeStampLocalTime(format=_utils.format_m'\
                           'ySQL_DateTimeStr())\n',
                           "int('aa')\n",
                           'n = 11\n',
                           'n -= 1\n',
                           '(n % 2) == 0\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #164'): {'attrib-starts': [],
        'first-line': 77,
        'folded-linenos': [],
        'history': {},
        'sel-line': 100,
        'sel-line-start': 5288,
        'selection_end': 5288,
        'selection_start': 5288},
                       loc('unknown:<untitled> #165'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import re\n',
                           '_re = re.compile("[.]pyo", re.IGNORECASE)\n',
                           '_re\n',
                           'type(_re)\n',
                           '_re.__class__\n',
                           'from lib.misc import ObjectTypeName\n',
                           'ObjectTypeName.typeName(_re)\n',
                           'isinstance(_re,_sre.SRE_Pattern)\n',
                           'import types\n',
                           "os.listdir('C:/@1b')\n",
                           "os.listdir('C:/@1b') == []\n",
                           'import cython_templates\n',
                           'cython_templates.template1\n',
                           'os.getcwd()\n',
                           'foo = [1,2,3,4,5]\n',
                           'bar = [2,3]\n',
                           'foo=set(foo)\n',
                           'bar=set(bar)\n',
                           'bar\n',
                           'bar=set(1,2,4,5,6,7,8])\n',
                           'bar=set([1,2,4,5,6,7,8])\n',
                           'foo-bar\n',
                           '[1,2,3] + [4,5,6]\n',
                           'set([1,2,3]) + set([4,5,6])\n',
                           'set([1,2,3]) and set([4,5,6])\n',
                           'list(set([1,2,3] + [4,5,6]))\n',
                           'list(set([1,2,3,4] + [3,4,5,6]))\n',
                           "os.path.splitext('a.123')\n",
                           'import tempfile\n',
                           "foo = tempfile.mkstemp('zip','new','xxxxx')\n",
                           "foo = tempfile.mkstemp('zip','new')\n",
                           'foo\n',
                           'foo[0].close()\n',
                           'os.close(foo[0])\n',
                           'os.remove(foo[-1])\n',
                           'from lib.misc import _utils\n',
                           'import os\n',
                           'from lib.hash import lists\n',
                           'socket.gethostname\n',
                           'socket.gethostname()\n',
                           'socket.gethostbyname(socket.gethostname())\n',
                           'socket.gethostbyname_ex(socket.gethostname())\n',
                           'import socket\n',
                           'socket.gethostbyname_ex(socket.gethostname())[0]'\
                           '\n']},
        'sel-line': 5,
        'sel-line-start': 232,
        'selection_end': 236,
        'selection_start': 236},
                       loc('unknown:<untitled> #161'): {'attrib-starts': [],
        'first-line': 1,
        'folded-linenos': [],
        'history': {},
        'sel-line': 17,
        'sel-line-start': 614,
        'selection_end': 614,
        'selection_start': 614},
                       loc('unknown:<untitled> #167'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 8,
        'sel-line-start': 375,
        'selection_end': 375,
        'selection_start': 375},
                       loc('unknown:<untitled> #163'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import re\n',
                           '_re = re.compile("[.]pyo", re.IGNORECASE)\n',
                           '_re\n',
                           'type(_re)\n',
                           '_re.__class__\n',
                           'from lib.misc import ObjectTypeName\n',
                           'ObjectTypeName.typeName(_re)\n',
                           'isinstance(_re,_sre.SRE_Pattern)\n',
                           'import types\n',
                           "os.listdir('C:/@1b')\n",
                           "os.listdir('C:/@1b') == []\n",
                           'import cython_templates\n',
                           'cython_templates.template1\n',
                           'os.getcwd()\n',
                           'foo = [1,2,3,4,5]\n',
                           'bar = [2,3]\n',
                           'foo=set(foo)\n',
                           'bar=set(bar)\n',
                           'bar\n',
                           'bar=set(1,2,4,5,6,7,8])\n',
                           'bar=set([1,2,4,5,6,7,8])\n',
                           'foo-bar\n',
                           '[1,2,3] + [4,5,6]\n',
                           'set([1,2,3]) + set([4,5,6])\n',
                           'set([1,2,3]) and set([4,5,6])\n',
                           'list(set([1,2,3] + [4,5,6]))\n',
                           'list(set([1,2,3,4] + [3,4,5,6]))\n',
                           "os.path.splitext('a.123')\n",
                           'import tempfile\n',
                           "foo = tempfile.mkstemp('zip','new','xxxxx')\n",
                           "foo = tempfile.mkstemp('zip','new')\n",
                           'foo[0].close()\n',
                           'os.close(foo[0])\n',
                           'os.remove(foo[-1])\n',
                           'import socket\n',
                           'socket.gethostname\n',
                           'socket.gethostname()\n',
                           'socket.gethostbyname(socket.gethostname())\n',
                           'socket.gethostbyname_ex(socket.gethostname())\n',
                           "r'C:\\Inetpub\\vhosts\\vyperlogix.com\\httpdocs\\"\
                           "site'\n",
                           'from lib.misc import GenPasswd\n',
                           'GenPasswd.GenPasswd(length=32)\n',
                           "GenPasswd.GenPasswd(length=32,chars=''.join([ch "\
                           "for ch in xrange(0,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(0,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(ord(32),128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(32,128)]))\n",
                           "GenPasswd.GenPasswd(length=32,chars=''.join([chr"\
                           "(ch) for ch in xrange(33,128)]))\n",
                           'string.printable()\n',
                           'import string\n',
                           'string.printable\n',
                           'import cairo\n',
                           'from lib.hash import lists\n',
                           'import math\n',
                           'foo = [0,1,2,3]\n',
                           'foo.pop()\n',
                           'foo.append(2)\n',
                           'foo\n',
                           'foo[0:3]\n',
                           '_utils.time_to_secs(01:01:01)\n',
                           "_utils.time_to_secs('01:01:01')\n",
                           '_utils.secs_to_time(3662)\n',
                           '_utils.secs_to_time(3661)\n',
                           'import os\n',
                           "'..%s' % (os.sep)\n",
                           '1 % 3\n',
                           '2 % 3\n',
                           '5 % 3\n',
                           'from lib.misc import _utils\n',
                           'reload(_utils)\n',
                           '_utils.timeStampLocalTime(format=_utils.format_m'\
                           'ySQL_DateTimeStr())\n',
                           "int('aa')\n",
                           'n = 11\n',
                           'n -= 1\n',
                           '(n % 2) == 0\n',
                           'from vyperlogix.misc import GenPasswd\n',
                           'GenPasswd.GenPasswd(length=512,chars=GenPasswd.s'\
                           'tring.printable)\n',
                           'from vyperlogix.html.parsers.HTMLParser import H'\
                           'TMLParser\n',
                           'from vyperlogix.html.parsers import HTMLParser\n',
                           'from vyperlogix.html.parsers.HTMLParser import T'\
                           'argetedHTMLParser\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #116'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['2deploy$\n',
                           '64.106.247.200\n',
                           'admin\n',
                           'ls -la\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0}}
proj.env-vars = {None: ('custom',
                        ['DJANGO_SETTINGS_MODULE=magmaSync.settings']),
                 loc('../../@lib/vyperlogix/mail/mailServer.py'): ('project',
        ['']),
                 loc('../../Reverse Proxy/TinyHTTPProxy.py'): ('project',
        ['']),
                 loc('_django_/djangocerise_1_2/webserver.py'): ('project',
        ['']),
                 loc('django/djangocerise_1_2/webserver.py'): ('project',
        ['']),
                 loc('djangocerise_1_2/webserver.py'): ('project',
        ['']),
                 loc('manage.py'): ('project',
                                    ['']),
                 loc('../makeZip.py'): ('project',
        [''])}
proj.pyexec = {None: ('custom',
                      'c:\\python25\\python25.exe')}
proj.pypath = {None: ('custom',
                      'c:\\python25;Z:\\python projects\\@lib;Z:\\python pro'\
                      'jects\\_pyax-0.9.7.2-py2.5;Z:\\python projects\\_djan'\
                      'go_0_96_2;Z:\\python projects\\_django-projects;')}
search.search-history = [u'import_hook',
                         u"'",
                         u'STYLES_CONTENT',
                         u'rxPop',
                         u'rxLog',
                         u'_is_running_local',
                         u'settings._navigation_tabs',
                         u'_navigation_tabs',
                         u'settings._navigation_menu_type',
                         u'._navigation_menu_type',
                         u'_navigation_menu_type',
                         u'DEBUG',
                         u'MEDIA_ROOT',
                         u'from vyperlogix.',
                         u'vyperlogix.',
                         u'send_registration_email',
                         u't_analytics',
                         u't_content',
                         u'_vyperProxy_registered.html',
                         u'callback']
search.search-scope-history = [loc('../..'),
                               loc('../../../@myMagma'),
                               loc('../../_django_0_96_2/docs'),
                               loc('../../_django_0_96_2'),
                               loc('.')]

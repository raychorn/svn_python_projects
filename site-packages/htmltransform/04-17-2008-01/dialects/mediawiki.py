from base import transform
class mediawiki(transform):
    def __init__(self, tree, **tionary):
        if tionary.has_key('baseurl'):
            self.baseurl = tionary['baseurl']
        transform.__init__(self, tree)
        self.rules['b'] = ['replace', {'start':" '''", 'end':"''' "}]
        self.rules['i'] = ['replace', {'start':" ''", 'end':"'' "}]
        self.rules['strong'] = ['replace', {'start':" '''", 'end':"''' "}]
        self.rules['em'] = ['replace', {'start':" ''", 'end':"'' "}]
        self.rules['div'] = ['copy', {}]
        self.rules['var'] = ['copy', {}]
        self.rules['h1'] = ['replace', {'start':"\n= ", 'end':" =\n"}]
        self.rules['h2'] = ['replace', {'start':"\n== ", 'end':" ==\n"}]
        self.rules['h3'] = ['replace', {'start':"\n=== ", 'end':" ===\n"}]
        self.rules['h4'] = ['replace', {'start':"\n==== ", 'end':" ====\n"}]
        self.rules['h5'] = ['replace', {'start':"\n===== ", 'end':" =====\n"}]
        self.rules['h6'] = ['replace', {'start':"\n====== ", 'end':" ======\n"}]
        self.rules['a'] = ['replace' , {'start':"[[", 'end':"]]"}]
        self.consume(tree)

    
    def start_ul(self, element):
        self.bullet_style = '*'
        self.content = self.content + '\n'

    def start_ol(self, element):
        self.bullet_style = '#'
        self.content = self.content + '\n'

    def start_dl(self, element):
        self.bullet_style = ':'
        self.content = self.content + '\n'

    def start_li(self, element):
        self.content = self.content + self.bullet_style+ ' '

    def end_li(self, element):
        self.content = self.content + '\n'
        
    def start_img(self, element):
        alt = None
        src = None
        for i in element.items():
            if i[0] == 'alt':
                alt = i[1]
            if i[0] == 'src':
                src = i[1]
        if src == None:
            return
        temp = src.split('/')
        url = temp[len(temp) -1]
        if alt == None:
            self.content = self.content + '[[Image:%s]]' % url
        else:
            self.content = self.content + '[[Image:%s|%s]]' % (url, alt)

    def text_style(self, element):
        pass

    def text_script(self, element):
        pass

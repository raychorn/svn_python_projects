#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('../@lib'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1},
                       {'dirloc': loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1},
                       {'dirloc': loc('.'),
                        'excludes': [u'how-to-get-computer-name-for-windows-and-linux.txt',
                                     u'diags.txt',
                                     u'debug_internals.txt',
                                     u'www_monitor2_c.dbx',
                                     u'www_monitor_c.dbx',
                                     u'pyMonit.log'],
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1}]
proj.file-type = 'normal'
proj.main-file = loc('compileall.py')
[user attributes]
debug.breakpoints = {loc('pyMonit.py'): {366: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('pyMonit.py'): {},
                    loc('test-auth.py'): {},
                    loc('tester.py'): {}}
debug.run-args = {loc('pyMonit.py'): '--logging=logging.INFO'}
debug.var-col-widths = [0.56347438752783963,
                        0.43652561247216037]
edit.dont-ask-to-fix-inconsistent-indents = {loc('../@lib/lib/_utils.py'): 1,
        loc('../@lib/lib/daemon/daemon.py'): True,
        loc('../@lib/lib/enum/Enum.py'): True,
        loc('../@lib/lib/misc/_utils.py'): True,
        loc('../@lib/lib/money/floatValue.py'): True,
        loc('../@lib/lib/oodb/__init__.py'): 1,
        loc('../@lib/lib/pyax_utils/sf.py'): 1,
        loc('../@lib/lib/ssh/sshUtils.py'): True,
        loc('../@lib/lib/test/test-oodb.py'): 1,
        loc('../@lib/lib/threadpool.py'): 1,
        loc('pyMonit.py'): 1,
        loc('../pyWindowLauncher/pyProcessLauncher.py'): 1}
edit.show-tab-force-warning = 0
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'rsTWpezVLV6Zzm3T7TDTeCxYgx'\
        'o6VJ4R',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [0,
                                   2],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': 0,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [],
                                 'selected-nodes': [(7,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Documents and Settings/rhorn/Application Data/Wing IDE 3/pylintpanel.cfg'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Program Files/Wing IDE 3.1/resources/builtin-pi-files/2.5/binascii.pi'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Wing IDE 3.1/resources/builtin-pi-files/2.5/binascii.pi'),
                      'a2b_base64')]},
        loc('file:C:/Python25/Lib/BaseHTTPServer.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Python25/Lib/BaseHTTPServer.py'),
                      'BaseHTTPRequestHandler')]},
        loc('file:C:/Python25/Lib/SocketServer.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Python25/Lib/SocketServer.py'),
                      'BaseRequestHandler')]},
        loc('file:C:/Python25/Lib/httplib.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Python25/Lib/httplib.py'),
                      'ACCEPTED')]},
        loc('file:C:/Python25/Lib/mimetools.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Python25/Lib/mimetools.py'),
                      'choose_boundary')]},
        loc('file:C:/Python25/Lib/site-packages/django/http/__init__.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Python25/Lib/site-packages/django/http/__init__.py'),
                      'get_host')]},
        loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/django/contrib/admin/views/auth.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/django/contrib/admin/views/auth.py'),
                      'user_add_stage')]},
        loc('../../@myMagma/python-local-new-trunk/Crypto/Util/number.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../@myMagma/python-local-new-trunk/Crypto/Util/number.py'),
                      'bignum')]},
        loc('../../@myMagma/python-local-new-trunk/Crypto/Util/randpool.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../@myMagma/python-local-new-trunk/Crypto/Util/randpool.py'),
                      'fname')]},
        loc('../../@myMagma/python-local-new-trunk/Crypto/Util/test.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../@myMagma/python-local-new-trunk/Crypto/Util/test.py'),
                      'die')]},
        loc('../../@myMagma/python-local-new-trunk/Crypto/test.py'): {'colum'\
        'n-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../@myMagma/python-local-new-trunk/Crypto/test.py'),
                      'args')]},
        loc('../../@myMagma/python-local-new-trunk/pyax/collections/odict.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../@myMagma/python-local-new-trunk/pyax/collections/odict.py'),
                      'odict')]},
        loc('../../@myMagma/python-local-new-trunk/pyax/sobject/batch.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../@myMagma/python-local-new-trunk/pyax/sobject/batch.py'),
                      'Batch')]},
        loc('../../@myMagma/python-local-new-trunk/pyax/sobject/util.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../@myMagma/python-local-new-trunk/pyax/sobject/util.py'),
                      'id_15_to_18')]},
        loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py'),
                             'CaseWatcherList')],
                           [('class def',
                             loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py'),
                             'CaseWatcherList'),
                            ('function def',
                             loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py'),
                             'CaseWatcherList.process')]],
        'selected-nodes': [[('class def',
                             loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py'),
                             'CaseWatcherList')]],
        'top-node': [('class def',
                      loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py'),
                      'CaseWatcherList')]},
        loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/sfUtil_win32.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/sfUtil_win32.py'),
                      'bool')]},
        loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/sop.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../@myMagma/python-local-new-trunk/sfapi2/sflib/sop.py'),
                      'AccessFactory')]},
        loc('../../@myMagma/python-local-trunk/sfapi2/sflib/CaseWatcherList2.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../@myMagma/python-local-trunk/sfapi2/sflib/CaseWatcherList2.py'),
                             'CaseWatcherList')]],
        'top-node': [('class def',
                      loc('../../@myMagma/python-local-trunk/sfapi2/sflib/CaseWatcherList2.py'),
                      'CaseWatcherList')]},
        loc('../../@myMagma/python-local-trunk/sfapi2/sflib/CustomCaseEvents.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../@myMagma/python-local-trunk/sfapi2/sflib/CustomCaseEvents.py'),
                      'CustomCaseEvents')]},
        loc('../../@myMagma/python-local-trunk/sfapi2/sflib/sfMagma.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../@myMagma/python-local-trunk/sfapi2/sflib/sfMagma.py'),
                      'badInfoList')]},
        loc('../../@myMagma/python-local-trunk/sfapi2/sflib/sfUtil.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../@myMagma/python-local-trunk/sfapi2/sflib/sfUtil.py'),
                      'BASE2')]},
        loc('../../@myMagma/python-local-trunk/sfapi2/sflib/sop.py'): {'colu'\
        'mn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../@myMagma/python-local-trunk/sfapi2/sflib/sop.py'),
                      'AccessFactory')]},
        loc('../../@myMagma/python-local-trunk/sfapi2/sflib/stderr.txt'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../@myMagma/python-local-trunk/sfapi2/sflib/stdout.txt'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../@lib/lib/AccumulatorHash.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../@lib/lib/AccumulatorHash.py'),
                      'HashedLists')]},
        loc('../@lib/lib/_psyco.py'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('../@lib/lib/_psyco.py'),
        'importPsycoIfPossible')]},
        loc('../@lib/lib/_utils.py'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('../@lib/lib/_utils.py'),
        'booleanize')]},
        loc('../@lib/lib/google.py'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../@lib/lib/google.py'),
        'd')]},
        loc('../@lib/lib/hash/hashedList.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../@lib/lib/hash/hashedList.py'),
                      'HashedLists')]},
        loc('../@lib/lib/hash/lists.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../@lib/lib/hash/lists.py'),
                      'HashedLists2')]},
        loc('../@lib/lib/html/oohtml.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../@lib/lib/html/oohtml.py'),
                      'A')]},
        loc('../@lib/lib/html/pyoohtml.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../@lib/lib/http/httpServer.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../@lib/lib/http/httpServer.py'),
                      'dictFromHeaders')]},
        loc('../@lib/lib/ioTimeAnalysis.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../@lib/lib/ioTimeAnalysis.py'),
                      'initIOTime')]},
        loc('../@lib/lib/oodb/__init__.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../@lib/lib/oodb/__init__.py'),
                      'build_sequence')]},
        loc('../@lib/lib/pyax/apex.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../@lib/lib/pyax/apex.py'),
                      'Apex')]},
        loc('../@lib/lib/pyax/beatbox.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../@lib/lib/pyax/beatbox.py'),
                      'ApexRequest')]},
        loc('../@lib/lib/pyax/collections/updatedict.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../@lib/lib/pyax/collections/updatedict.py'),
                      'FTN_KEY')]},
        loc('../@lib/lib/pyax/connection.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../@lib/lib/pyax/connection.py'),
                      'Connection')]},
        loc('../@lib/lib/pyax/sobject/batch.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../@lib/lib/pyax/sobject/batch.py'),
                      'Batch')]},
        loc('../@lib/lib/pyax/sobject/classfactory.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../@lib/lib/pyax/sobject/classfactory.py'),
                      'ClassFactory')]},
        loc('../@lib/lib/pyax/sobject/metadata.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../@lib/lib/pyax/sobject/metadata.py'),
                      'log')]},
        loc('../@lib/lib/pyax/sobject/sobjectapi.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../@lib/lib/pyax/sobject/sobjectapi.py'),
                      'log')]},
        loc('../@lib/lib/pyax/sobject/type.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../@lib/lib/pyax/sobject/type.py'),
                      'verify_type')]},
        loc('../@lib/lib/pyax/sobject/util.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../@lib/lib/pyax/sobject/util.py'),
                      'id_15_to_18')]},
        loc('../@lib/lib/pyax/unpackomatic.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../@lib/lib/pyax/unpackomatic.py'),
                      'dummy_element')]},
        loc('authentication/SalesForceAuthentication.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('authentication/SalesForceAuthentication.py'),
                      'BAD_INFO_LIST')]},
        loc('daemons/dlib/site_monitor.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('daemons/dlib/site_monitor.py'),
                      'SiteMonitor')]},
        loc('daemons/monitor_website2_tasklet.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('daemons/monitor_website2_tasklet.py'),
                      'dummy')]},
        loc('daemons/monitor_website_tasklet.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('daemons/monitor_website_tasklet.py'),
                      'dummy')]},
        loc('pyMonit.py'): {'column-widths': [1.0],
                            'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('pyMonit.py'),
        'args')]},
        loc('run.cmd'): {'column-widths': [1.0],
                         'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': None},
        loc('test-auth.py'): {'column-widths': [1.0],
                              'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('test-auth.py'),
        'sfAuth')]},
        loc('tester.py'): {'column-widths': [1.0],
                           'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('function def',
        loc('tester.py'),
        'main')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': 0,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': 0,
        u'Imported': 0,
        u'Modules': 1}}),
                              ('templating#02EFWRQK9X23',
                               'tall',
                               0,
                               {'tree-states': {u'C:\\Documents and Settings\\rhorn\\Application Data\\Wing IDE 3\\templates': [],
        u'C:\\Program Files\\Wing IDE 3.0\\scripts\\templates': []}})],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [2,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30324909747292417,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': [[1,
                                       'pyMonit.py, line 366',
                                       None,
                                       0,
                                       '0',
                                       '0',
                                       '0']]}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 5,
                       'folded-linenos': [],
                       'history': {u'file:Z:/python projects/@lib/lib/enum/Enum.py': [''\
        'Encryptors\n',
        'len(Encryptors)\n',
        'foo\n',
        'foo == bar\n',
        'foo.value\n',
        'bar.value\n',
        'foo == foo\n']},
                       'sel-line': 14,
                       'sel-line-start': 510,
                       'selection_end': 514,
                       'selection_start': 514}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['toks[len(toks)-3:]\n',
        'toks[0] = toks[0].split()\n',
        'hms = toks[0][-1]+toks[len(toks)-2):]\n',
        'toks[len(toks)-2):]\n',
        'toks[len(toks)-2:]\n',
        'hms = toks[0][-1]+toks[len(toks)-2:]\n',
        'hms = list(toks[0][-1])+toks[len(toks)-2:]\n',
        'hms = [toks[0][-1]]+toks[len(toks)-2:]\n',
        'toks[0]\n',
        'del toks[len(toks)-2:]\n',
        'toks = toks[0]\n',
        'del toks[-1]\n',
        'toks\n',
        "[t for t in ' '.join(toks).split(',') if len(t) > 0]\n",
        "[t for t in ' '.join(toks).split(',') if len(t) > 0][0]\n",
        'tuple(hms)\n',
        'hms = tuple(hms)\n',
        'hms = list(hms)\n',
        "hms.insert(1,'s')\n",
        'hms\n',
        'import cgi\n',
        'foo = cgi.FieldStorage()\n',
        'foo.keys()\n',
        'import lib._utils\n',
        'ts = _utils.timeStamp()\n',
        'ts\n',
        '_ts = _utils.getFromDateTimeStr(ts)\n',
        'print _ts.utcoffset()\n',
        'print _ts.dst()\n',
        '_ts.isoformat()\n',
        '_ts.timetz()\n',
        '_ts.timetz().dst()\n',
        'print _ts.timetz().dst()\n',
        '_ts.utcfromtimestamp()\n',
        '_ts.utctimetuple()\n',
        '_ts.utcoffset()\n',
        'import datetime\n',
        'datetime.datetime.tzinfo()\n',
        'datetime.datetime.tzinfo.tzname(_ts)\n',
        'datetime.datetime.tzinfo\n',
        'datetime.datetime.utcfromtimestamp(time.time())\n',
        '_uts == _ts\n',
        '_uts = datetime.datetime.utcfromtimestamp(time.time())\n',
        '_ts = datetime.datetime.fromtimestamp(time.time())\n',
        '_uts - _ts\n',
        'd = _uts - _ts\n',
        'd.seconds\n',
        '_uts\n',
        '_ts\n',
        '_utils.getAsDateTimeStr(_ts)\n',
        'foo = time.mktime(_ts.timetuple())\n',
        'foo\n',
        '_utils.getAsDateTimeStr(foo)\n',
        '_utils.fromUTC(_uts)\n',
        "'%03d\" % 1\n",
        "print '%03d\" % 1\n",
        "print '%03d' % 1\n",
        '_utils.formatApparentTimeStr()\n',
        't1 = _utils.timeStamp()\n',
        't2 = _utils.timeStamp(_fmt=_utils.formatApparentTimeStr())\n',
        't2\n',
        't1 = _utils.timeStamp(format=_utils._formatTimeStr())\n',
        'strftime("%a, %d %b %Y %H:%M:%S %Z", t1)\n',
        'impor time\n',
        'import time\n',
        'time.strftime("%a, %d %b %Y %H:%M:%S %Z", t1)\n',
        'foo = _utils.getFromDateTimeStr(t1)\n',
        'from lib import _utils\n',
        't1 = _utils.getFromDateTimeStr(_utils.timeStamp())\n',
        't1\n',
        '_utils.localFromUTC(t1)\n',
        'import sys\n',
        'sys.stdout.name\n',
        'sys.path\n',
        'import glob\n',
        'foo = glob.glob(sys.path)\n',
        "files = glob.glob('c:/*.txt')\n",
        'files\n',
        'files[1:]\n',
        'files[100:]\n',
        'files[24*5:]\n',
        'bar = [statinfo = os.stat(f) for f in files]\n',
        'bar = [os.stat(f) for f in files]\n',
        'bar\n',
        'bar[0].st_atime\n',
        'import logging\n',
        'logg.handlers\n',
        'logging.handlers\n',
        'import os\n',
        "os.path.basename('1/2/3')\n",
        '_utils.timeStampForFileName()\n',
        '_utils.funcName()\n',
        'from lib.misc import _utils\n',
        "_utils.utcDelta()['hours']\n",
        '_utils.utcDelta().days\n',
        '_utils.utcDelta().seconds\n',
        'reload(_utils)\n',
        '_utils.utcDelta()\n',
        'from datetime import timedelta\n',
        'timedelta(0)\n']},
                       'sel-line': 2,
                       'sel-line-start': 148,
                       'selection_end': 152,
                       'selection_start': 152}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'_connectionHandle',
                                       'fReverse': False,
                                       'fSearchText': u'fpath',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': u'..\\..\\@myFiles\\@Python\\Python Google App Engine SDK\\Linux\\google_appengine',
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'subprocess.Popen',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'full-path',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': '',
                       'recent-filters': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('symbolic',
        ['soql'])],
                       'tree-state': {'column-widths': [0.65327695560253696,
        0.34672304439746299],
                                      'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('../@lib/lib/misc/_utils.py'),
        {'attrib-starts': [('spawnProcessWithDetails',
                            539)],
         'first-line': 533,
         'folded-linenos': [],
         'sel-line': 555,
         'sel-line-start': 18337,
         'selection_end': 18358,
         'selection_start': 18354},
        1222269035.796),
        (loc('../@lib/lib/misc/_utils.py'),
         {'attrib-starts': [('spawnProcessWithDetails',
                             539)],
          'first-line': 533,
          'folded-linenos': [],
          'sel-line': 557,
          'sel-line-start': 18373,
          'selection_end': 18383,
          'selection_start': 18379},
         1222269036.687),
        (loc('../@lib/lib/misc/_utils.py'),
         {'attrib-starts': [('spawnProcessWithDetails',
                             539)],
          'first-line': 533,
          'folded-linenos': [],
          'sel-line': 557,
          'sel-line-start': 18373,
          'selection_end': 18390,
          'selection_start': 18386},
         1222269037.359),
        (loc('../@lib/lib/misc/_utils.py'),
         {'attrib-starts': [('spawnProcessWithDetails',
                             539)],
          'first-line': 533,
          'folded-linenos': [],
          'sel-line': 559,
          'sel-line-start': 18405,
          'selection_end': 18411,
          'selection_start': 18407},
         1222269038.234),
        (loc('../@lib/lib/misc/_utils.py'),
         {'attrib-starts': [('spawnProcessWithDetails',
                             539)],
          'first-line': 545,
          'folded-linenos': [],
          'sel-line': 559,
          'sel-line-start': 18405,
          'selection_end': 18418,
          'selection_start': 18414},
         1222269039.2179999),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [],
          'first-line': 10,
          'folded-linenos': [],
          'sel-line': 11,
          'sel-line-start': 223,
          'selection_end': 257,
          'selection_start': 249},
         1222269057.437),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 13,
          'sel-line-start': 280,
          'selection_end': 297,
          'selection_start': 289},
         1222269062.671),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 13,
          'sel-line-start': 280,
          'selection_end': 313,
          'selection_start': 305},
         1222269064.0150001),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [('SpawnProgram',
                             15),
                            ('SpawnProgram.spawn',
                             19)],
          'first-line': 8,
          'folded-linenos': [],
          'sel-line': 32,
          'sel-line-start': 1041,
          'selection_end': 1150,
          'selection_start': 1138},
         1222269064.671),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1222269096.016),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [('SpawnProgram',
                             15),
                            ('SpawnProgram.spawn',
                             19)],
          'first-line': 8,
          'folded-linenos': [],
          'sel-line': 32,
          'sel-line-start': 1041,
          'selection_end': 1041,
          'selection_start': 1041},
         1222269098.4530001),
        (loc('compileall.py'),
         {'attrib-starts': [('sourcesFrom',
                             3)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 337,
          'selection_end': 373,
          'selection_start': 373},
         1222269144.2349999),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [('SpawnProgram',
                             15),
                            ('SpawnProgram.spawn',
                             19)],
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 28,
          'sel-line-start': 803,
          'selection_end': 855,
          'selection_start': 855},
         1222273124.223),
        (loc('../@lib/lib/misc/_utils.py'),
         {'attrib-starts': [('spawnProcessWithDetails',
                             539)],
          'first-line': 540,
          'folded-linenos': [],
          'sel-line': 564,
          'sel-line-start': 18515,
          'selection_end': 18543,
          'selection_start': 18527},
         1222293236.878),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [('SpawnProgram',
                             15),
                            ('SpawnProgram.spawn',
                             19)],
          'first-line': 7,
          'folded-linenos': [],
          'sel-line': 19,
          'sel-line-start': 408,
          'selection_end': 432,
          'selection_start': 427},
         1222293372.79),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [('SpawnProgram',
                             15),
                            ('SpawnProgram.spawn',
                             19)],
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 648,
          'selection_end': 713,
          'selection_start': 708},
         1222293901.0439999),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [('SpawnProgram',
                             15),
                            ('SpawnProgram.spawn',
                             19)],
          'first-line': 14,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1174,
          'selection_end': 1220,
          'selection_start': 1220},
         1222293903.3410001),
        (loc('../@lib/lib/misc/_utils.py'),
         {'attrib-starts': [('readFileFrom',
                             513)],
          'first-line': 501,
          'folded-linenos': [],
          'sel-line': 513,
          'sel-line-start': 16787,
          'selection_end': 16803,
          'selection_start': 16791},
         1222294173.289),
        (loc('daemons/dlib/spawn_program.py'),
         {'attrib-starts': [('SpawnProgram',
                             15),
                            ('SpawnProgram.spawn',
                             19)],
          'first-line': 14,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1174,
          'selection_end': 1220,
          'selection_start': 1220},
         1222294198.2590001),
        [loc('compileall.py'),
         {'attrib-starts': [('sourcesFrom',
                             3)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 337,
          'selection_end': 373,
          'selection_start': 373},
         1222294228.948]],
        19),
        'current-loc': loc('compileall.py'),
        'editor-states': {loc('file:C:/Program Files/Wing IDE 3.1/resources/doc/en/TOC.idx'): {''\
        'displayed-index': 162,
        'viewer-state': {'history': [-1,
                                     21,
                                     177,
                                     139,
                                     162],
                         'history-pos': 4,
                         'index': 162,
                         'top': (0,
                                 0)}},
                          loc('../@lib/lib/daemon/daemon.py'): {'attrib-star'\
        'ts': [('redirectStdErrOutWrapper',
                277)],
        'first-line': 271,
        'folded-linenos': [],
        'sel-line': 305,
        'sel-line-start': 10057,
        'selection_end': 10057,
        'selection_start': 10057},
                          loc('../@lib/lib/daemon/framework.py'): {'attrib-s'\
        'tarts': [('PyDaemonFramework',
                   46),
                  ('PyDaemonFramework.record_results',
                   68)],
        'first-line': 64,
        'folded-linenos': [],
        'sel-line': 86,
        'sel-line-start': 2505,
        'selection_end': 2527,
        'selection_start': 2527},
                          loc('../@lib/lib/enum/Enum.py'): {'attrib-starts': [(''\
        'EnumInstance',
        154),
        ('EnumInstance.__str__',
         250)],
        'first-line': 254,
        'folded-linenos': [],
        'sel-line': 270,
        'sel-line-start': 10030,
        'selection_end': 10067,
        'selection_start': 10067},
                          loc('../@lib/lib/hash/lists.py'): {'attrib-starts': [(''\
        'HashedLists',
        3),
        ('HashedLists.__str__',
         41)],
        'first-line': 0,
        'sel-line': 41,
        'sel-line-start': 1125,
        'selection_end': 1136,
        'selection_start': 1136},
                          loc('../@lib/lib/http/httpServer.py'): {'attrib-st'\
        'arts': [('HTTPServer',
                  95),
                 ('HTTPServer.CreateRequestHandler',
                  126),
                 ('HTTPServer.CreateRequestHandler.DevAppServerRequestHandle'\
                  'r',
                  144),
                 ('HTTPServer.CreateRequestHandler.DevAppServerRequestHandle'\
                  'r._HandleRequest',
                  193)],
        'first-line': 206,
        'sel-line': 227,
        'sel-line-start': 7590,
        'selection_end': 7677,
        'selection_start': 7677},
                          loc('../@lib/lib/misc/_utils.py'): {'attrib-starts': [(''\
        'readFileFrom',
        513)],
        'first-line': 501,
        'folded-linenos': [],
        'sel-line': 513,
        'sel-line-start': 16787,
        'selection_end': 16803,
        'selection_start': 16791},
                          loc('../@lib/lib/misc/processAllFilesUnder.py'): {''\
        'attrib-starts': [('processAllFilesUnder',
                           5)],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 264,
        'selection_end': 295,
        'selection_start': 276},
                          loc('../@lib/lib/money/floatValue.py'): {'attrib-s'\
        'tarts': [('Options',
                   25)],
        'first-line': 7,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 881,
        'selection_end': 894,
        'selection_start': 887},
                          loc('../@lib/lib/oodb/__init__.py'): {'attrib-star'\
        'ts': [('getMungedFilenameFor',
                936)],
        'first-line': 929,
        'folded-linenos': [],
        'sel-line': 936,
        'sel-line-start': 30969,
        'selection_end': 30993,
        'selection_start': 30973},
                          loc('../@lib/lib/pyax_utils/sf.py'): {'attrib-star'\
        'ts': [('SalesForceBaseQuery',
                12),
               ('SalesForceBaseQuery.__init__',
                13)],
        'first-line': 0,
        'sel-line': 19,
        'sel-line-start': 525,
        'selection_end': 598,
        'selection_start': 598},
                          loc('../@lib/lib/sockets/sniffer.py'): {'attrib-st'\
        'arts': [('isListenerActive',
                  0)],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 50,
        'selection_end': 53,
        'selection_start': 53},
                          loc('authentication/SalesForceAuthentication.py'): {''\
        'attrib-starts': [('SalesForceAuthentication',
                           11),
                          ('SalesForceAuthentication.__init__',
                           12)],
        'first-line': 12,
        'sel-line': 20,
        'sel-line-start': 688,
        'selection_end': 688,
        'selection_start': 688},
                          loc('compileall.py'): {'attrib-starts': [('sources'\
        'From',
        3)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 409,
        'selection_end': 422,
        'selection_start': 422},
                          loc('daemons/CaseWatcher_tasklet.py'): {'attrib-st'\
        'arts': [('dummy',
                  11)],
        'first-line': 0,
        'sel-line': 20,
        'sel-line-start': 437,
        'selection_end': 496,
        'selection_start': 496},
                          loc('daemons/PythonWatcher_tasklet.py'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'sel-line': 9,
        'sel-line-start': 148,
        'selection_end': 172,
        'selection_start': 172},
                          loc('daemons/dlib/site_monitor.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('daemons/dlib/spawn_program.py'): {'attrib-sta'\
        'rts': [('SpawnProgram',
                 15),
                ('SpawnProgram.spawn',
                 19)],
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 35,
        'sel-line-start': 1174,
        'selection_end': 1220,
        'selection_start': 1220},
                          loc('deploy.cmd'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 485,
        'selection_end': 503,
        'selection_start': 503},
                          loc('pyMonit.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('run.cmd'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 4,
        'sel-line-start': 95,
        'selection_end': 95,
        'selection_start': 95}},
        'has-focus': True},
                               'open_files': [u'../@lib/lib/daemon/daemon.py',
        u'../@lib/lib/daemon/framework.py',
        u'../@lib/lib/enum/Enum.py',
        u'../@lib/lib/hash/lists.py',
        u'../@lib/lib/http/httpServer.py',
        u'../@lib/lib/misc/processAllFilesUnder.py',
        u'../@lib/lib/money/floatValue.py',
        u'../@lib/lib/oodb/__init__.py',
        u'../@lib/lib/pyax_utils/sf.py',
        u'../@lib/lib/sockets/sniffer.py',
        u'authentication/SalesForceAuthentication.py',
        u'daemons/CaseWatcher_tasklet.py',
        u'daemons/PythonWatcher_tasklet.py',
        u'daemons/dlib/site_monitor.py',
        u'deploy.cmd',
        u'pyMonit.py',
        u'run.cmd',
        u'C:/Program Files/Wing IDE 3.1/resources/doc/en/TOC.idx',
        u'../@lib/lib/misc/_utils.py',
        u'daemons/dlib/spawn_program.py',
        u'compileall.py']},
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1507,
                         68,
                         1260,
                         850)}]}
guimgr.recent-documents = [loc('compileall.py'),
                           loc('daemons/dlib/spawn_program.py'),
                           loc('../@lib/lib/misc/_utils.py')]
guimgr.visual-state = {loc('file:C:/Python25/Lib/BaseHTTPServer.py'): {'attr'\
        'ib-starts': [('BaseHTTPRequestHandler',
                       106)],
        'first-line': 100,
        'sel-line': 106,
        'sel-line-start': 3408,
        'selection_end': 3457,
        'selection_start': 3457},
                       loc('file:C:/Python25/Lib/SocketServer.py'): {'attrib'\
        '-starts': [('BaseRequestHandler',
                     497)],
        'first-line': 499,
        'sel-line': 497,
        'sel-line-start': 16050,
        'selection_end': 16074,
        'selection_start': 16056},
                       loc('file:C:/Python25/Lib/httplib.py'): {'attrib-star'\
        'ts': [],
        'first-line': 207,
        'sel-line': 136,
        'sel-line-start': 4158,
        'selection_end': 4178,
        'selection_start': 4158},
                       loc('file:C:/Python25/Lib/logging/__init__.py'): {'at'\
        'trib-starts': [('basicConfig',
                         1203)],
        'first-line': 1216,
        'sel-line': 1203,
        'sel-line-start': 43083,
        'selection_end': 43098,
        'selection_start': 43087},
                       loc('file:C:/Python25/Lib/logging/handlers.py'): {'at'\
        'trib-starts': [('BaseRotatingHandler',
                         48),
                        ('BaseRotatingHandler.__init__',
                         54)],
        'first-line': 49,
        'sel-line': 62,
        'sel-line-start': 2390,
        'selection_end': 2411,
        'selection_start': 2403},
                       loc('file:C:/Python25/Lib/mimetools.py'): {'attrib-st'\
        'arts': [],
        'first-line': 211,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Python25/Lib/os.py'): {'attrib-starts': [(''\
        'unsetenv',
        413)],
        'first-line': 414,
        'sel-line': 429,
        'sel-line-start': 13536,
        'selection_end': 13536,
        'selection_start': 13536},
                       loc('file:C:/Python25/Lib/site-packages/django/http/__init__.py'): {''\
        'attrib-starts': [('HttpResponseRedirect',
                           255)],
        'first-line': 198,
        'sel-line': 255,
        'sel-line-start': 8810,
        'selection_end': 8836,
        'selection_start': 8816},
                       loc('file:C:/Python25/Lib/site-packages/zope/interface/common/idatetime.py'): {''\
        'attrib-starts': [],
        'first-line': 275,
        'sel-line': 22,
        'sel-line-start': 937,
        'selection_end': 967,
        'selection_start': 958},
                       loc('file:C:/Python25/Lib/smtplib.py'): {'attrib-star'\
        'ts': [('SMTP',
                195),
               ('SMTP.sendmail',
                617)],
        'first-line': 716,
        'folded-linenos': [],
        'sel-line': 617,
        'sel-line-start': 22742,
        'selection_end': 22758,
        'selection_start': 22750},
                       loc('../../#zDisk/#www.instanttrafficschool.com/06-08-2008/chapter 1/Instant Traffic School Dot Com-1.htm'): {''\
        'attrib-starts': [],
        'first-line': 361,
        'sel-line': 361,
        'sel-line-start': 21747,
        'selection_end': 21777,
        'selection_start': 21765},
                       loc('../../#zDisk/#www.instanttrafficschool.com/06-08-2008/chapter 10/Instant Traffic School Dot Com-5.htm'): {''\
        'attrib-starts': [],
        'first-line': 277,
        'sel-line': 289,
        'sel-line-start': 15914,
        'selection_end': 15951,
        'selection_start': 15943},
                       loc('../../#zDisk/#www.instanttrafficschool.com/06-08-2008/chapter 16/Instant Traffic School Dot Com.htm'): {''\
        'attrib-starts': [],
        'first-line': 380,
        'sel-line': 323,
        'sel-line-start': 18339,
        'selection_end': 18413,
        'selection_start': 18413},
                       loc('../../#zDisk/#www.instanttrafficschool.com/06-08-2008/chapter 3/Instant Traffic School Dot Com-2.htm'): {''\
        'attrib-starts': [],
        'first-line': 431,
        'sel-line': 437,
        'sel-line-start': 26222,
        'selection_end': 26272,
        'selection_start': 26260},
                       loc('../../#zDisk/#www.instanttrafficschool.com/06-08-2008/chapter 5/Instant Traffic School Dot Com-1.htm'): {''\
        'attrib-starts': [],
        'first-line': 227,
        'sel-line': 239,
        'sel-line-start': 12507,
        'selection_end': 12578,
        'selection_start': 12570},
                       loc('../../#zDisk/#www.instanttrafficschool.com/06-08-2008/chapter 9/Instant Traffic School Dot Com-2.htm'): {''\
        'attrib-starts': [],
        'first-line': 261,
        'sel-line': 273,
        'sel-line-start': 14947,
        'selection_end': 15027,
        'selection_start': 15019},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/google/appengine/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/google/appengine/ext/db/djangoforms.py'): {''\
        'attrib-starts': [],
        'first-line': 787,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/google/appengine/ext/webapp/template.py'): {''\
        'attrib-starts': [],
        'first-line': 189,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/google/appengine/ext/webapp/util.py'): {''\
        'attrib-starts': [('run_wsgi_app',
                           60)],
        'first-line': 35,
        'sel-line': 60,
        'sel-line-start': 1726,
        'selection_end': 1742,
        'selection_start': 1730},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/google/appengine/tools/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/google/appengine/tools/dev_appserver.py'): {''\
        'attrib-starts': [('CGIDispatcher',
                           1707),
                          ('CGIDispatcher.Dispatch',
                           1735)],
        'first-line': 1740,
        'sel-line': 1735,
        'sel-line-start': 54711,
        'selection_end': 54725,
        'selection_start': 54713},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/google/appengine/tools/dev_appserver_main.py'): {''\
        'attrib-starts': [('main',
                           276)],
        'first-line': 309,
        'sel-line': 324,
        'sel-line-start': 10399,
        'selection_end': 10441,
        'selection_start': 10429},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/INSTALL'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/README'): {''\
        'attrib-starts': [],
        'first-line': 7,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/django/contrib/admin/views/auth.py'): {''\
        'attrib-starts': [('user_change_password',
                           46)],
        'first-line': 22,
        'sel-line': 58,
        'sel-line-start': 2592,
        'selection_end': 2631,
        'selection_start': 2623},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/examples/hello/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/examples/hello/urls.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/examples/hello/views.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine/lib/django/setup.cfg'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../@lib/lib/AccumulatorHash.py'): {'attrib-start'\
        's': [('HashedLists',
               2)],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 27,
        'selection_end': 27,
        'selection_start': 27},
                       loc('../@lib/lib/ObjectTypeName.py'): {'attrib-starts': [(''\
        'ObjectTypes',
        2)],
        'first-line': 0,
        'sel-line': 6,
        'sel-line-start': 95,
        'selection_end': 95,
        'selection_start': 95},
                       loc('../@lib/lib/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 30,
        'selection_end': 30,
        'selection_start': 30},
                       loc('../@lib/lib/crypto/XTEAEncryption.py'): {'attrib'\
        '-starts': [],
        'first-line': 21,
        'sel-line': 38,
        'sel-line-start': 1712,
        'selection_end': 1725,
        'selection_start': 1725},
                       loc('../@lib/lib/daemon/daemon.py'): {'attrib-starts': [(''\
        'createDaemon',
        43)],
        'first-line': 85,
        'sel-line': 43,
        'sel-line-start': 1241,
        'selection_end': 1257,
        'selection_start': 1245},
                       loc('../@lib/lib/decorators/Property.py'): {'attrib-s'\
        'tarts': [('Angle',
                   17),
                  ('Angle.rad',
                   22),
                  ('Angle.rad.fset',
                   26)],
        'first-line': 9,
        'sel-line': 28,
        'sel-line-start': 852,
        'selection_end': 852,
        'selection_start': 852},
                       loc('../@lib/lib/decorators/addto.py'): {'attrib-star'\
        'ts': [('Foo',
                15)],
        'first-line': 0,
        'sel-line': 15,
        'sel-line-start': 402,
        'selection_end': 402,
        'selection_start': 402},
                       loc('../@lib/lib/decorators/routes.py'): {'attrib-sta'\
        'rts': [('NotFound',
                 6)],
        'first-line': 0,
        'sel-line': 9,
        'sel-line-start': 126,
        'selection_end': 151,
        'selection_start': 151},
                       loc('../@lib/lib/google.py'): {'attrib-starts': [('pe'\
        'rformGoogleSearch',
        43)],
        'first-line': 36,
        'sel-line': 44,
        'sel-line-start': 1571,
        'selection_end': 1587,
        'selection_start': 1587},
                       loc('../@lib/lib/hash/hashedList.py'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../@lib/lib/html/oohtml.py'): {'attrib-starts': [(''\
        'Html',
        105),
        ('Html.scripts',
         306)],
        'first-line': 312,
        'sel-line': 329,
        'sel-line-start': 8235,
        'selection_end': 8263,
        'selection_start': 8235},
                       loc('../@lib/lib/html/pyoohtml.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../@lib/lib/http/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../@lib/lib/logging/__init__.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../@lib/lib/logging/standardLogging.py'): {'attr'\
        'ib-starts': [('standardLogging',
                       13)],
        'first-line': 0,
        'sel-line': 13,
        'sel-line-start': 329,
        'selection_end': 348,
        'selection_start': 333},
                       loc('../@lib/lib/mail/mailServer.py'): {'attrib-start'\
        's': [('AdhocServer',
               300),
              ('AdhocServer.__init__',
               301)],
        'first-line': 279,
        'folded-linenos': [],
        'sel-line': 314,
        'sel-line-start': 12116,
        'selection_end': 12116,
        'selection_start': 12116},
                       loc('../@lib/lib/mail/message.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../@lib/lib/misc/ObjectTypeName.py'): {'attrib-s'\
        'tarts': [('typeName',
                   0)],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../@lib/lib/oodb/__init__.py'): {'attrib-starts': [(''\
        'PickledHash',
        520),
        ('PickledHash.normalizedSortedKeys',
         627)],
        'first-line': 606,
        'sel-line': 636,
        'sel-line-start': 19475,
        'selection_end': 19488,
        'selection_start': 19488},
                       loc('../@lib/lib/profiling/profilehooks.py'): {'attri'\
        'b-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../@lib/lib/pyax/apex.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 52,
        'selection_start': 43},
                       loc('../@lib/lib/pyax/beatbox.py'): {'attrib-starts': [(''\
        'SoapEnvelope',
        258),
        ('SoapEnvelope.post',
         297)],
        'first-line': 292,
        'sel-line': 317,
        'sel-line-start': 12564,
        'selection_end': 12564,
        'selection_start': 12564},
                       loc('../@lib/lib/pyax/collections/updatedict.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 12,
        'selection_end': 21,
        'selection_start': 21},
                       loc('../@lib/lib/pyax/connection.py'): {'attrib-start'\
        's': [],
        'first-line': 2,
        'sel-line': 12,
        'sel-line-start': 266,
        'selection_end': 279,
        'selection_start': 266},
                       loc('../@lib/lib/pyax/sobject/batch.py'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'sel-line': 12,
        'sel-line-start': 318,
        'selection_end': 327,
        'selection_start': 327},
                       loc('../@lib/lib/pyax/sobject/classfactory.py'): {'at'\
        'trib-starts': [('ClassFactory',
                         8),
                        ('ClassFactory.__new__',
                         13)],
        'first-line': 1,
        'sel-line': 14,
        'sel-line-start': 384,
        'selection_end': 440,
        'selection_start': 440},
                       loc('../@lib/lib/pyax/sobject/metadata.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'sel-line': 7,
        'sel-line-start': 128,
        'selection_end': 137,
        'selection_start': 137},
                       loc('../@lib/lib/pyax/sobject/sobjectapi.py'): {'attr'\
        'ib-starts': [],
        'first-line': 0,
        'sel-line': 15,
        'sel-line-start': 487,
        'selection_end': 496,
        'selection_start': 496},
                       loc('../@lib/lib/pyax/sobject/type.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 9,
        'selection_start': 9},
                       loc('../@lib/lib/pyax/sobject/util.py'): {'attrib-sta'\
        'rts': [('id_15_to_18',
                 34)],
        'first-line': 16,
        'sel-line': 41,
        'sel-line-start': 1056,
        'selection_end': 1056,
        'selection_start': 1056},
                       loc('../@lib/lib/pyax/unpackomatic.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'sel-line': 13,
        'sel-line-start': 353,
        'selection_end': 362,
        'selection_start': 362},
                       loc('../@lib/lib/ssh/sshUtils.py'): {'attrib-starts': [],
        'first-line': 24,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 1301,
        'selection_end': 1405,
        'selection_start': 1301},
                       loc('../@lib/lib/test/test-enum.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 13,
        'selection_start': 13},
                       loc('../@lib/lib/test/test-hexConversions.py'): {'att'\
        'rib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 9,
        'selection_start': 9},
                       loc('../@lib/lib/test/test-oodb.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 9,
        'selection_start': 9},
                       loc('../@lib/lib/test/test-safeSerialization.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 9,
        'selection_start': 9},
                       loc('../@lib/lib/threadpool.py'): {'attrib-starts': [(''\
        'ThreadQueue',
        14)],
        'first-line': 0,
        'sel-line': 14,
        'sel-line-start': 287,
        'selection_end': 304,
        'selection_start': 293},
                       loc('../@lib/lib/win/WinProcesses.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 149,
        'selection_end': 162,
        'selection_start': 162},
                       loc('daemons/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('daemons/lib/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('daemons/monitor_website2_tasklet.py'): {'attrib-'\
        'starts': [('dummy',
                    11)],
        'first-line': 0,
        'sel-line': 15,
        'sel-line-start': 222,
        'selection_end': 296,
        'selection_start': 296},
                       loc('daemons/monitor_website_tasklet.py'): {'attrib-s'\
        'tarts': [('dummy',
                   11)],
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 903,
        'selection_end': 903,
        'selection_start': 903},
                       loc('debug_internals.txt'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('deploy.cmd'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 121,
        'selection_end': 121,
        'selection_start': 121},
                       loc('diags.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 64,
        'selection_end': 64,
        'selection_start': 64},
                       loc('diags.txt'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('pydaemon'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 16,
        'sel-line-start': 375,
        'selection_end': 382,
        'selection_start': 382},
                       loc('setup.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 51,
        'selection_end': 92,
        'selection_start': 92},
                       loc('test-auth.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 85,
        'selection_end': 265,
        'selection_start': 85},
                       loc('tester.py'): {'attrib-starts': [('main',
        22)],
        'first-line': 0,
        'sel-line': 36,
        'sel-line-start': 623,
        'selection_end': 623,
        'selection_start': 623},
                       loc('../pyWindowLauncher/pyProcessLauncher.py'): {'at'\
        'trib-starts': [('ppArgs',
                         24)],
        'first-line': 36,
        'sel-line': 24,
        'sel-line-start': 623,
        'selection_end': 1926,
        'selection_start': 623},
                       loc('unknown:<untitled> #19'): {'attrib-starts': [],
        'first-line': 14,
        'folded-linenos': [],
        'history': {None: ['raychorn@vyperlogix.com\n',
                           'n\n',
                           'support@vyperlogix.com\n',
                           'yes\n',
                           'raychorn\n',
                           'raychorn@hotmail.com\n',
                           'peekab00\n']},
        'sel-line': 29,
        'sel-line-start': 4932,
        'selection_end': 4932,
        'selection_start': 4932},
                       loc('unknown:<untitled> #30'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['from lib.misc import _utils\n',
                           'xrange(0,10)\n',
                           "print '\\n'.join(['\"%s\",' % (s) for s in _util"\
                           "s.sort(products_list.keys())])\n",
                           'foo = _utils.getFromDateTimeStr(_utils.timeStamp'\
                           'LocalTime())\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/pyax_code/soql_query.py': [''\
        'd_meta.fieldnames\n',
        'd_meta.getFieldSoapType(d_meta.fieldnames[0])\n',
        'd_meta.getFieldSoapType(d_meta.fieldnames[1])\n',
        "d_meta.getFieldSoapType('junk')\n",
        "str(d_meta.getFieldSoapType('junk'))\n"],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py': [''\
        'type(delimiters)\n',
        'foo = timeStamp(format=format,useLocalTime=useLocalTime)\n',
        'timeStampForFileName(format=format,useLocalTime=True,delimiters=del'\
        'imiters)\n',
        'logFileName\n',
        'self.stream.name\n',
        '[ret,_ret for ret,_ret in o_data]\n',
        '[(ret,_ret) for ret,_ret in o_data]\n',
        'o_data\n',
        'len(o_data)\n',
        'type(o_data)\n',
        'o_data[0]\n',
        'o_data[1]\n',
        'ret,_ret = o_data\n',
        'ret\n',
        '_ret\n',
        'datum = ([lists.HashedLists2(ret_item) for ret_item in ret],[lists.'\
        'HashedLists2(_ret_item) for _ret_item in _ret])\n',
        'datum[0][0][0]\n',
        'datum[0][0]\n',
        'dx.metadata\n',
        "dx.metadata['Product__c']\n",
        "dx.metadata['fields']\n",
        "dx.metadata['fields']['Product__c']\n",
        "dx.metadata['fields']['Product__c']['picklistValues']\n",
        'products_list.keys()\n',
        "'\\n'.join(products_list.keys())\n",
        "print '\\n'.join(products_list.keys())\n",
        "print '\\n'.join(_utils.sort(products_list.keys()))\n",
        "dx = sfdc.describeSObject('Case')\n",
        "products_list = dx.metadata['fields']['Product__c']['picklistValues"\
        "']\n",
        "print '\\n'.join(['\"%s\",' % (s) for s in _utils.sort(products_lis"\
        "t.keys())])\n",
        "'\\n'.join([t[0] for t in _latestFolders])\n",
        "print '\\n'.join([t[0] for t in _latestFolders])\n",
        '_utils.getFromTimeStampForFileName(_latestFolders[0][0])\n',
        '_latestFolders[0][0]\n',
        '_latestFolders[0][1]\n',
        '_latestFolders[0][0].split(os.sep)\n',
        '_latestFolders[0][0].split(os.sep)[-1]\n',
        "toks = ts.split('_')\n",
        'ts = _latestFolders[0][0].split(os.sep)[-1]\n',
        "toks = str(ts).split('_')\n",
        't = toks[1:]\n',
        't[]0\n',
        't[0]\n',
        't[0][0:1]\n',
        't[0][0:2]\n',
        't\n',
        'len(t[0])\n',
        'tt = []\n',
        'tt.append(t[0][i:i+2])\n',
        'for i in xrange(0,len(t[0]),2):\n',
        '\ttt.append(t[0][i:i+2])\n',
        'tt\n',
        'reload(_utils)\n',
        '_utils.getFromTimeStampForFileName(_latestFolders[0][0].split(os.se'\
        'p)[-1])\n',
        'ts = _utils.getFromTimeStampForFileName(_latestFolders[0][0].split('\
        'os.sep)[-1])\n',
        'ts\n',
        'time.time()\n',
        'datetime.datetime.now()\n',
        'ts < datetime.datetime.now()\n',
        'now = datetime.datetime.now()\n',
        'now\n',
        'from datetime import timedelta\n',
        'diff = timedelta(days=7)\n',
        'diff\n',
        'now - diff\n',
        'ts < (now - diff)\n',
        'ids,_chgs = chgs\n',
        'ids\n',
        '_chgs\n',
        "_chgs[0]['CreatedDate']\n",
        "dt = _chgs[0]['CreatedDate']\n",
        'dt.isoformat()\n',
        '_utils.getFromDateTimeStr(dt.isoformat())\n',
        "dt = _chgs[0]['CreatedDate'].split('+')[0]\n",
        "dt = _chgs[0]['CreatedDate'].isoformat().split('+')[0]\n",
        'dt\n',
        '_utils.getFromDateTimeStr(dt)\n',
        '_utils.timeStampLocalTime()\n',
        '_utils.getFromDateTimeStr(_utils.timeStampLocalTime())\n',
        "ret[ret.keys()[0]]['Description']\n",
        'd_fields_of_interest\n',
        'd_fields_of_interest.keys()\n',
        "aChg['ChangedFieldName__c']\n",
        'len(ret)\n',
        'self.d_caseWatchers\n',
        "aUser[aUser.keys()[0]]['Name']\n",
        'cw.keys()\n',
        'sys.argv[0]\n',
        'fpath = os.path.dirname(sys.argv[0])\n',
        'from lib.hash import lists\n',
        'h_Content.tag_TABLE(_rows)\n',
        'h_Content\n',
        "toks = template_contents.split('\\n')\n",
        'toks\n',
        "_table = _table.replace('\\n','')\n",
        'table\n',
        "toks = _table.split('\\t')\n",
        'len(toks)\n',
        'aUser.keys()\n',
        '_cw.keys()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/ContactsWalker.py': [''\
        'recs = [match.group() for match in _re.finditer(l)]\n',
        'recs = [match.group() for match in _re.finditer(l.strip())]\n',
        'lem(recs)\n',
        'len(map)\n',
        'recsa\n',
        'recs[i+1]\n',
        'recs\n',
        'self.__rows__\n',
        'csv_header_toks\n',
        'd.fieldnames\n',
        "csv.header.index('Email')\n",
        "csv.header[csv.header.index('Email')]\n",
        'len(csv.rows)\n',
        'rec\n',
        'from lib.misc import _utils\n',
        "_utils.getAsSimpleDateStr('2008-07-14',fmt='%Y-%m-%d')\n",
        "_utils.getFromDateTimeStr('2008-07-14',format='%Y-%m-%d').date()\n",
        "_utils.getFromDateTimeStr('None',format='%Y-%m-%d').date()\n",
        "csv.rowByColumn('company')\n",
        "csv.column('company')\n",
        'len(self.header)\n',
        'len(recs)\n',
        'l\n',
        'csv.problem_rows\n',
        '[asCSV(l) for l in csv.problem_rows]\n',
        "d_passwords['rhorn@magma-da.com']\n",
        'len(users)\n',
        'users[0].keys()\n',
        "flds = d.metadata['fields']\n",
        'flds.keys()\n',
        'b_validFor\n',
        'type(b_validFor)\n',
        'len(b_validFor)\n',
        'self.header\n',
        '_ctx.login_endpoint\n',
        'c_username\n',
        'c\n',
        'csv.filename\n',
        "csv.rowByColumn('firstName')\n",
        "csv.column('firstName')\n",
        "_firstNames = csv.column('firstName')\n",
        "_lastnames = csv.column('lastName')\n",
        'csv.header\n',
        'csv.rows[0]\n',
        "csv.column_number_for_name['company']\n",
        "csv.column_number_for_name('company')\n",
        'csv.column_number_for_name(_colname)\n',
        '_utils.timeStampSimple()\n',
        '_utils.getFromDateTimeStr(_utils.timeStampSimple())\n',
        '_utils.getFromDateTimeStr(_utils.timeStampSimple(),format=_utils.fo'\
        'rmatDate_MMDDYYYY_slashes())\n',
        'k\n',
        'sfdc.apex.cxn.svc.context.assignment_rule_id\n',
        'STR(sfdc.apex.cxn.svc.context.assignment_rule_id)\n',
        'str(sfdc.apex.cxn.svc.context.assignment_rule_id)\n',
        'sfdc.apex.cxn.svc.context.use_default_assignment_rule\n',
        'sfdc.context.use_default_assignment_rule\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/DataWalker.py': [''\
        '_analysisData\n',
        'row\n',
        '_analysisColNum\n',
        'csv.header[_analysisColNum]\n',
        'link\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/MailEvent.py': [''\
        '_utils.timeStamp()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/MudflowSanityCheck.py': [''\
        'doc.childNodes()\n',
        'doc.childNodes\n',
        'doc.getElementsByTagName("*")\n',
        '_data = doc.getElementsByTagName("*")\n',
        'getAttrsFromNode(_data[0])\n',
        'getAttrsFromNode(d)\n',
        '_data\n',
        'd\n',
        'd.nodeName\n',
        'd.childNodes\n',
        'dom.childNodes\n',
        'dom.nodeName\n',
        'child.nodeName\n',
        '_child.data\n',
        '_child.wholeText\n',
        '_child.nodeValue\n',
        'xml_utils.getNodeText(_child)\n',
        '_child\n',
        '_child.localName\n',
        '_child.\n',
        '_child.toxml()\n',
        '_child.nodeName\n',
        '_child.attributes\n',
        'xml_utils.getAttrsFromNode(_child)\n',
        '_child.childNodes\n',
        'xml_utils.getAllNodeText(__child)\n',
        '__child.hasChildNodes\n',
        '__child.hasChildNodes()\n',
        'xml_utils.getAllNodeText(__child.childNodes)\n',
        'd_nodes.__class__\n',
        'ObjectTypeName__typeName(d_nodes.__class__)\n',
        'ObjectTypeName__typeName(d_nodes)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/SCM_Walker.py': [''\
        '_fnameIn.split(branch)[-1]\n',
        'cr_list = [n.group() for n in re.finditer(r"(?:[0-9]{8}(_|\\.))|(?:'\
        '[0-9]{7}(_|\\.))|(?:[0-9]{6}(_|\\.))|(?:[0-9]{5}(_|\\.))|(?:[0-9]{4'\
        '}(_|\\.))", base_k)]\n',
        '[(rk,rv) for rk,rv in ret.iteritems()]\n',
        'date_k\n',
        'from lib.misc import _utils\n',
        '_utils.getAsDateTimeStr(date_k)\n',
        'import time\n',
        'time.strptime(date_k, _utils._formatTimeStr())\n',
        'time.strftime(_utils._formatTimeStr(), date_k)\n',
        'secs = time.gmtime(date_k)\n',
        'secs\n',
        'time.strftime(_utils._formatTimeStr(), secs)\n',
        'type(date_k)\n',
        's.st_mtime\n',
        'stat_k = ros_stat(full_k)\n',
        'stat_k\n',
        '_stat_k\n',
        '_lstat_k\n',
        'full_k\n',
        'args.keys()\n',
        'sys.argv[-1]\n',
        'PickleMethods.useStrings\n',
        'PickleMethods.useStrings.__value__\n',
        "','.join(['\"%s\"'%(t) for t in item if (len(str(t)) > 0)]) if (isi"\
        "nstance(item,tuple)) or (isinstance(item,list)) else item\n",
        't = os.path.splitext(f)\n',
        't\n',
        "(os.path.splitext(f)[-1].lower() in ['.csv','.xls'])\n",
        'from lib.parsers.CSV import CSV\n',
        'cr_list\n',
        'ret.keys()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/sfUtil_win32.py': [''\
        'ros.transport\n',
        'str(ros.transport)\n',
        'print self.ssh\n',
        'print self.transport\n',
        'print self\n',
        'self.os_getcwd()\n',
        'chan.ultra_debug = True\n',
        'chan.exec_command(cmd)\n',
        'chan = t.open_session()\n',
        'print chan.exec_command(cmd)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/smtpMailsink.py': [''\
        'd[SmtpMailsink.const_body_symbol]\n',
        'd[SmtpMailsink.const_subject_symbol]\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/PicklistWalker.py': [''\
        'len(bset)\n',
        "v['Active']\n",
        "v['active']\n",
        '11 >> 3\n',
        '11 % 8\n',
        '(0x80 >> n % 8)\n',
        '(0x80 >> 11 % 8)\n',
        '(0x80 >> (11 % 8))\n',
        '128 and 47\n',
        '128 & 47\n',
        "f['name']\n",
        'k\n',
        'len(values)\n',
        'len)_keys)\n',
        'len(_keys)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/csv-tester.py': [""\
        "foo = \"talus1.0,TALUS1.0_ABHIJIT_LOGIC.FNET_CHKPNT_1,SCM-Candidate"\
        "-Building,4/7/2008 16:04,6/27/2008 0:00,80.33,,TALUS1.0_RTL_LOGIC_C"\
        "HKPNT_17,00100148,\".split(',')\n",
        'foo\n',
        'len(foo)\n',
        '_guide\n',
        'len(_guide)\n',
        'lines[0]\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/dbtest.py': [''\
        'dname\n',
        'os.listdir(dname)\n',
        '[ObjectTypeName.typeName(cls) for cls in __classes]\n',
        '[ObjectTypeName._typeName(cls) for cls in __classes]\n',
        'import sys\n',
        'import os\n',
        'os.curdir\n',
        'os.path.abspath(os.curdir)\n',
        "os.sep.join([os.path.abspath(os.curdir),'logs'])\n",
        "foo = os.listdir(os.sep.join([os.path.abspath(os.curdir),'logs']))\n",
        'foo\n',
        "toks = str(foo[0]).split('_')\n",
        'toks\n',
        'last_3 = [str(t).isdigit() for t in toks[1:]]\n',
        'reload(_utils)\n',
        '_utils.isTimeStampForFileName(foo[0])\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/decode-for-travis.py': [''\
        'from lib import oodb\n',
        'print oodb.hex_digits()\n',
        'print oodb.hex_digits\n',
        'len(h)\n',
        'len(h)/2\n',
        'len(h_list)\n',
        'print s_h\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/mailboxes.py': [''\
        '_key_ = keys._encode(_key)\n',
        's_key_ = keys._decode(_key_)\n',
        '_key_2 = keys.encode(_key)\n',
        's_key_2 = keys.decode(_key_2)\n',
        'keys._key[0:16]\n',
        '__name__\n',
        'import sys\n',
        'sys.argv[0]\n',
        'from lib.misc import _utils\n',
        '_utils.getProgramName()\n',
        '_utils.getProgramName()[len(_utils.getProgramName())-8:]\n',
        '_utils.timeStamp()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/makeZip.py': [''\
        'ignore.keys()[-1]\n',
        'ignore.keys()[-2]\n',
        'entry_points.keys()\n',
        'entry_points\n',
        'ignore.keys()\n',
        'f\n',
        'ignore.has_key(f)\n',
        '[os.path.basename(i) for i in ignore.keys()]\n',
        "_files = [os.sep.join([root,f]) for f in files if (f.endswith('.py'"\
        "))]\n",
        'set(l_files_to_ignore)\n',
        "l_files_to_ignore.findFirstContaining('test\\\\win32')\n",
        'l_files_to_ignore[35]\n',
        'd_entry_folders.keys()\n',
        "l_files_to_ignore.findAllContaining('test\\\\win32')\n",
        "foo = l_files_to_ignore.findAllContaining('test\\\\win32')\n",
        'len(foo)\n',
        "[f for f in foo if (f.endswith('.py'))]\n",
        "_f = _f.replace(_root_,'')\n",
        "_files = [os.sep.join([root,f]) for f in files if (not f.endswith('"\
        ".py'))]\n"],
                    u'file:Z:/python projects/@lib/lib/enum/Enum.py': ["dict"\
        "['_items_']\n",
        'dict\n',
        'Encryptors\n',
        'Encryptors.none\n',
        'Encryptors.simple\n',
        'str(Encryptors)\n',
        'Encryptors.mro\n',
        'Encryptors.__mro__\n',
        'x\n',
        'type(Encryptors.__mro__)\n',
        'Encryptors.__mro__[0]\n',
        'Encryptors.__mro__[1]\n',
        'len(Encryptors.__mro__)\n',
        'Encryptors.__mro__[-1]\n',
        "Encryptors['simple']=EnumInstance(Encryptors,'Encryptors','simple',"\
        "2)\n"],
                    u'file:Z:/python projects/@lib/lib/lists/ListWrapper.py': [''\
        'l[1:2]\n',
        'l.find(-1)\n',
        'l.find(100)\n',
        'l.find(1)\n',
        'l.index(2)\n',
        'l.find(2)\n',
        'isinstance(l,ListWrapper)\n',
        'type(l)\n',
        'from lib.misc import ObjectTypeName\n',
        'ObjectTypeName.typeClassName(l)\n',
        'ObjectTypeName.typeName(l)\n',
        "ObjectTypeName.typeClassName(l).find('ListWrapper')\n",
        'l.index(item)\n',
        'l.find(3)\n',
        'l.find(101)\n'],
                    u'file:Z:/python projects/@lib/lib/logging/standardLogging.py': [''\
        'LoggingLevels\n',
        'LoggingLevels._items_\n'],
                    u'file:Z:/python projects/@lib/lib/oodb/__init__.py': [""\
        "__classes_tags = [n.split('.')[:len(n.split('.'))-1] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]]\n",
        '[1,2,3][2:]\n',
        "__classes_tags = [n.split('.')[len(n.split('.'))-1:] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]][0]\n",
        "__classes_tags = [n.split('.')[len(n.split('.'))-1:] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]]\n",
        "__classes_tags = [class_tag(n.split('.')[len(n.split('.'))-1:]) for"\
        " n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        "_class_tag('OneTwo3')\n",
        "__classes_tags = [_class_tag(n.split('.')[len(n.split('.'))-1:][0])"\
        " for n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        "__classes_tags = ['_'+_class_tag(n.split('.')[len(n.split('.'))-1:]"\
        "[0]) for n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        '__classes_tags\n',
        '[1,2,3][1:]\n',
        '[1,2,3][:2]\n',
        "fname = '.'.join([toks[:len(toks)-1][0],toks[-1].split('.')[-1]])\n",
        'fname\n',
        "toks = fname.split('.')\n",
        'toks\n',
        'files = [f for f in os.listdir(dname) if (f.endswith(toks[-1]))]\n',
        'files\n',
        'files = [f for f in os.listdir(dname) if (f.startswith(toks[0])) an'\
        'd (f.endswith(toks[-1]))]\n',
        'dbx.fileName\n',
        'ObjectTypeName._typeName(item.__class__)\n'],
                    u'file:Z:/python projects/@lib/lib/sockets/SmtpMailsink.py': [""\
        "kwargs['callback']\n",
        'type(kwargs)\n',
        'd[const_body_symbol][0]\n',
        'self.mailboxFile is cStringIO\n',
        "rows.append(('SUBJECT: %s' % (subj)))\n",
        "rows.append(tuple('SUBJECT: %s' % (subj)))\n",
        'rows = []\n',
        "rows.append(tuple(['SUBJECT: %s' % (subj)]))\n",
        'rows\n',
        'idContent.toHtml()\n',
        'oohtml\n',
        'oohtml.DOCTYPE_40_TRANSITIONAL\n',
        'd[const_body_symbol]\n',
        '_f = toks.findFirstContaining(const_from_symbol)\n',
        '_f\n',
        't[_f].strip()\n',
        'd[const_to_symbol]\n',
        'd[const_to_symbol][-1]\n',
        'self.__class__\n',
        'str(self.__class__)\n',
        'ObjectTypeName__typeName(self.__class__)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 44,
        'selection_start': 4},
                       loc('unknown:<untitled> #29'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['1*2\n',
                           "'1'*2\n",
                           '(1)*2\n',
                           '[1]*2\n',
                           'import psyco\n',
                           'import Queue\n',
                           'foo = Queue.Queue(10000)\n',
                           'foo = None\n',
                           'import gc\n',
                           'gc.collect()\n',
                           'foo = Queue.Queue()\n',
                           "foo.put_nowait('A')\n",
                           'foo.queue()\n',
                           'foo.qsize()\n',
                           'foo.empty()\n',
                           'foo.full()\n',
                           "fname = os.path.abspath('logs/profiler.txt')\n",
                           'fname\n',
                           'dname = os.path.dirname(fname)\n',
                           'dname\n',
                           'import sys\n',
                           'sys.argv[0]\n',
                           "'a'.isupper()\n",
                           'type(oodb.PickledFastHash2)\n',
                           'oodb.PickledFastHash2\n',
                           'from lib.misc import ObjectTypeName\n',
                           'ObjectTypeName.typeClassName(PickledFastHash2)\n',
                           'ObjectTypeName.typeClassName(oodb.PickledFastHas'\
                           'h2)\n',
                           'str(oodb.PickledFastHash2)\n',
                           'reload(ObjectTypeName)\n',
                           'ObjectTypeName.typeName(oodb.PickledFastHash2)\n',
                           "dbx = oodb.openPickledHashBasedOnFilename('foo')"\
                           "\n",
                           'foo = 0xfe\n',
                           'oodb.dec2hex(foo)\n',
                           "foo = 'abcdef'+chr(129)+'ghijk'\n",
                           'foo\n',
                           'from lib.misc import decodeUnicode\n',
                           'decodeUnicode.ensureOnlyPrimatableChars(foo)\n',
                           'import os\n',
                           "[os.sep.join(['logs', f]) for f in ['profiler.tx"\
                           "t','end_CaseWatchers_scan.txt']]\n",
                           'from lib.ssh import sshUtils\n',
                           'import zipfile\n',
                           '_utils.timeSeconds()\n',
                           'import time\n',
                           'time.time()\n',
                           'int(33206,8)\n',
                           "int('33206',8)\n",
                           "foo = '100777'\n",
                           'foo[len(m)-4:]\n',
                           'foo[len(foo)-4:]\n',
                           'eval(foo)\n',
                           'import stat\n',
                           'stat.S_IREAD | stat.S_IWRITE\n',
                           "'%o' % (stat.S_IREAD | stat.S_IWRITE)\n",
                           "'%o' % (stat.S_IREAD)\n",
                           "'%o' % (stat.S_IWRITE)\n",
                           "'%o' % (0777)\n",
                           "'%d' % (0777)\n",
                           'from lib.lists import ListWrapper\n',
                           'hex(13)\n',
                           '"%X" % 13\n',
                           "int('D',16)\n",
                           "hex(13).split('0x')[-1]\n",
                           "hex(13).split('0x')[-1].upper()\n",
                           "val = '0'+hex(n).split('0x')[-1].upper()\n",
                           "'%X' % n\n",
                           "'%0X' % n\n",
                           "'0%X' % n\n",
                           'n=0xfe\n',
                           'n\n',
                           'val\n',
                           'val[2-len(val):]\n',
                           'n=13\n',
                           "val = '0%X' % n\n",
                           'val[1-len(val):]\n',
                           'from lib import oodb\n',
                           'oodb.dec2hex(13)\n',
                           'oodb.dec2hex(254)\n',
                           'oodb.dec2hex(127)\n',
                           'oodb.dec2hex(129)\n',
                           'oodb.dec2hex(255)\n',
                           'oodb.dec2hex(1)\n',
                           'oodb.dec2hex(0)\n',
                           "oodb.hexToStr('000102030405')\n",
                           'x\n',
                           '[i for i in xrange(0,255)]\n',
                           'dict([(i,dec2hex(i)) for i in xrange(0,256)])\n',
                           'dict([(i,oodb.dec2hex(i)) for i in xrange(0,256)'\
                           '])\n',
                           "x = oodb.hexToStr('000102030405')\n",
                           'oodb.strToHex(x)\n',
                           'reload(oodb)\n',
                           'oodb.d_hex2dec.values()\n',
                           'oodb.d_hex2dec.keys()\n',
                           'import platform\n',
                           'platform.architecture\n',
                           'platform.architecture()\n',
                           'from lib.misc import _utils\n',
                           '_utils.getComputerName()\n',
                           's = [110,111,119,105,115,116,104,101,116,105,109'\
                           ',101,102,111,114,97,108,108,103,111,111,100,109,'\
                           '101,110,116,111,99,111,109,101,116,111,116,104,1'\
                           '01,97,105,100,111,102,116,104,101,105,114,99,111'\
                           ',117,110,116,114,121]\n',
                           "''.join([chr(ch) for ch in s])\n"]},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #26'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['from lib.misc import _utils\n',
                           'xrange(0,10)\n',
                           "print '\\n'.join(['\"%s\",' % (s) for s in _util"\
                           "s.sort(products_list.keys())])\n",
                           'foo = _utils.getFromDateTimeStr(_utils.timeStamp'\
                           'LocalTime())\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/pyax_code/soql_query.py': [''\
        'd_meta.fieldnames\n',
        'd_meta.getFieldSoapType(d_meta.fieldnames[0])\n',
        'd_meta.getFieldSoapType(d_meta.fieldnames[1])\n',
        "d_meta.getFieldSoapType('junk')\n",
        "str(d_meta.getFieldSoapType('junk'))\n"],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py': [''\
        'type(delimiters)\n',
        'foo = timeStamp(format=format,useLocalTime=useLocalTime)\n',
        'timeStampForFileName(format=format,useLocalTime=True,delimiters=del'\
        'imiters)\n',
        'logFileName\n',
        'self.stream.name\n',
        '[ret,_ret for ret,_ret in o_data]\n',
        '[(ret,_ret) for ret,_ret in o_data]\n',
        'o_data\n',
        'len(o_data)\n',
        'type(o_data)\n',
        'o_data[0]\n',
        'o_data[1]\n',
        'ret,_ret = o_data\n',
        'ret\n',
        '_ret\n',
        'datum = ([lists.HashedLists2(ret_item) for ret_item in ret],[lists.'\
        'HashedLists2(_ret_item) for _ret_item in _ret])\n',
        'datum[0][0][0]\n',
        'datum[0][0]\n',
        'dx.metadata\n',
        "dx.metadata['Product__c']\n",
        "dx.metadata['fields']\n",
        "dx.metadata['fields']['Product__c']\n",
        "dx.metadata['fields']['Product__c']['picklistValues']\n",
        'products_list.keys()\n',
        "'\\n'.join(products_list.keys())\n",
        "print '\\n'.join(products_list.keys())\n",
        "print '\\n'.join(_utils.sort(products_list.keys()))\n",
        "dx = sfdc.describeSObject('Case')\n",
        "products_list = dx.metadata['fields']['Product__c']['picklistValues"\
        "']\n",
        "print '\\n'.join(['\"%s\",' % (s) for s in _utils.sort(products_lis"\
        "t.keys())])\n",
        "'\\n'.join([t[0] for t in _latestFolders])\n",
        "print '\\n'.join([t[0] for t in _latestFolders])\n",
        '_utils.getFromTimeStampForFileName(_latestFolders[0][0])\n',
        '_latestFolders[0][0]\n',
        '_latestFolders[0][1]\n',
        '_latestFolders[0][0].split(os.sep)\n',
        '_latestFolders[0][0].split(os.sep)[-1]\n',
        "toks = ts.split('_')\n",
        'ts = _latestFolders[0][0].split(os.sep)[-1]\n',
        "toks = str(ts).split('_')\n",
        't = toks[1:]\n',
        't[]0\n',
        't[0]\n',
        't[0][0:1]\n',
        't[0][0:2]\n',
        't\n',
        'len(t[0])\n',
        'tt = []\n',
        'tt.append(t[0][i:i+2])\n',
        'for i in xrange(0,len(t[0]),2):\n',
        '\ttt.append(t[0][i:i+2])\n',
        'tt\n',
        'reload(_utils)\n',
        '_utils.getFromTimeStampForFileName(_latestFolders[0][0].split(os.se'\
        'p)[-1])\n',
        'ts = _utils.getFromTimeStampForFileName(_latestFolders[0][0].split('\
        'os.sep)[-1])\n',
        'ts\n',
        'time.time()\n',
        'datetime.datetime.now()\n',
        'ts < datetime.datetime.now()\n',
        'now = datetime.datetime.now()\n',
        'now\n',
        'from datetime import timedelta\n',
        'diff = timedelta(days=7)\n',
        'diff\n',
        'now - diff\n',
        'ts < (now - diff)\n',
        'ids,_chgs = chgs\n',
        'ids\n',
        '_chgs\n',
        "_chgs[0]['CreatedDate']\n",
        "dt = _chgs[0]['CreatedDate']\n",
        'dt.isoformat()\n',
        '_utils.getFromDateTimeStr(dt.isoformat())\n',
        "dt = _chgs[0]['CreatedDate'].split('+')[0]\n",
        "dt = _chgs[0]['CreatedDate'].isoformat().split('+')[0]\n",
        'dt\n',
        '_utils.getFromDateTimeStr(dt)\n',
        '_utils.timeStampLocalTime()\n',
        '_utils.getFromDateTimeStr(_utils.timeStampLocalTime())\n',
        "ret[ret.keys()[0]]['Description']\n",
        'd_fields_of_interest\n',
        'd_fields_of_interest.keys()\n',
        "aChg['ChangedFieldName__c']\n",
        'len(ret)\n',
        'self.d_caseWatchers\n',
        "aUser[aUser.keys()[0]]['Name']\n",
        'cw.keys()\n',
        'sys.argv[0]\n',
        'fpath = os.path.dirname(sys.argv[0])\n',
        'from lib.hash import lists\n',
        'h_Content.tag_TABLE(_rows)\n',
        'h_Content\n',
        "toks = template_contents.split('\\n')\n",
        'toks\n',
        "_table = _table.replace('\\n','')\n",
        'table\n',
        "toks = _table.split('\\t')\n",
        'len(toks)\n',
        'aUser.keys()\n',
        '_cw.keys()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/ContactsWalker.py': [''\
        'recs = [match.group() for match in _re.finditer(l)]\n',
        'recs = [match.group() for match in _re.finditer(l.strip())]\n',
        'lem(recs)\n',
        'len(map)\n',
        'recsa\n',
        'recs[i+1]\n',
        'recs\n',
        'self.__rows__\n',
        'csv_header_toks\n',
        'd.fieldnames\n',
        'csv.filename\n',
        "csv.header.index('Email')\n",
        "csv.header[csv.header.index('Email')]\n",
        'len(csv.rows)\n',
        'rec\n',
        'c\n',
        'from lib.misc import _utils\n',
        "_utils.getAsSimpleDateStr('2008-07-14',fmt='%Y-%m-%d')\n",
        "_utils.getFromDateTimeStr('2008-07-14',format='%Y-%m-%d').date()\n",
        "_utils.getFromDateTimeStr('None',format='%Y-%m-%d').date()\n",
        'csv.header\n',
        "csv.rowByColumn('company')\n",
        "csv.column('company')\n",
        'self.header\n',
        'len(self.header)\n',
        'len(recs)\n',
        'l\n',
        'csv.problem_rows\n',
        '[asCSV(l) for l in csv.problem_rows]\n',
        "d_passwords['rhorn@magma-da.com']\n",
        'len(users)\n',
        'users[0].keys()\n',
        "flds = d.metadata['fields']\n",
        'flds.keys()\n',
        'b_validFor\n',
        'type(b_validFor)\n',
        'len(b_validFor)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/DataWalker.py': [''\
        '_analysisData\n',
        'row\n',
        '_analysisColNum\n',
        'csv.header[_analysisColNum]\n',
        'link\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/MailEvent.py': [''\
        '_utils.timeStamp()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/MudflowSanityCheck.py': [''\
        'doc.childNodes()\n',
        'doc.childNodes\n',
        'doc.getElementsByTagName("*")\n',
        '_data = doc.getElementsByTagName("*")\n',
        'getAttrsFromNode(_data[0])\n',
        'getAttrsFromNode(d)\n',
        '_data\n',
        'd\n',
        'd.nodeName\n',
        'd.childNodes\n',
        'dom.childNodes\n',
        'dom.nodeName\n',
        'child.nodeName\n',
        '_child.data\n',
        '_child.wholeText\n',
        '_child.nodeValue\n',
        'xml_utils.getNodeText(_child)\n',
        '_child\n',
        '_child.localName\n',
        '_child.\n',
        '_child.toxml()\n',
        '_child.nodeName\n',
        '_child.attributes\n',
        'xml_utils.getAttrsFromNode(_child)\n',
        '_child.childNodes\n',
        'xml_utils.getAllNodeText(__child)\n',
        '__child.hasChildNodes\n',
        '__child.hasChildNodes()\n',
        'xml_utils.getAllNodeText(__child.childNodes)\n',
        'd_nodes.__class__\n',
        'ObjectTypeName__typeName(d_nodes.__class__)\n',
        'ObjectTypeName__typeName(d_nodes)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/SCM_Walker.py': [''\
        '_fnameIn.split(branch)[-1]\n',
        'cr_list = [n.group() for n in re.finditer(r"(?:[0-9]{8}(_|\\.))|(?:'\
        '[0-9]{7}(_|\\.))|(?:[0-9]{6}(_|\\.))|(?:[0-9]{5}(_|\\.))|(?:[0-9]{4'\
        '}(_|\\.))", base_k)]\n',
        '[(rk,rv) for rk,rv in ret.iteritems()]\n',
        'date_k\n',
        'from lib.misc import _utils\n',
        '_utils.getAsDateTimeStr(date_k)\n',
        'import time\n',
        'time.strptime(date_k, _utils._formatTimeStr())\n',
        'time.strftime(_utils._formatTimeStr(), date_k)\n',
        'secs = time.gmtime(date_k)\n',
        'secs\n',
        'time.strftime(_utils._formatTimeStr(), secs)\n',
        'type(date_k)\n',
        's.st_mtime\n',
        'stat_k = ros_stat(full_k)\n',
        'stat_k\n',
        '_stat_k\n',
        '_lstat_k\n',
        'full_k\n',
        'args.keys()\n',
        'sys.argv[-1]\n',
        'PickleMethods.useStrings\n',
        'PickleMethods.useStrings.__value__\n',
        "','.join(['\"%s\"'%(t) for t in item if (len(str(t)) > 0)]) if (isi"\
        "nstance(item,tuple)) or (isinstance(item,list)) else item\n",
        't = os.path.splitext(f)\n',
        't\n',
        "(os.path.splitext(f)[-1].lower() in ['.csv','.xls'])\n",
        'from lib.parsers.CSV import CSV\n',
        'cr_list\n',
        'ret.keys()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/smtpMailsink.py': [''\
        'd[SmtpMailsink.const_body_symbol]\n',
        'd[SmtpMailsink.const_subject_symbol]\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/csv-tester.py': [""\
        "foo = \"talus1.0,TALUS1.0_ABHIJIT_LOGIC.FNET_CHKPNT_1,SCM-Candidate"\
        "-Building,4/7/2008 16:04,6/27/2008 0:00,80.33,,TALUS1.0_RTL_LOGIC_C"\
        "HKPNT_17,00100148,\".split(',')\n",
        'foo\n',
        'len(foo)\n',
        '_guide\n',
        'len(_guide)\n',
        'lines[0]\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/dbtest.py': [''\
        'dname\n',
        'os.listdir(dname)\n',
        '[ObjectTypeName.typeName(cls) for cls in __classes]\n',
        '[ObjectTypeName._typeName(cls) for cls in __classes]\n',
        'import sys\n',
        'import os\n',
        'os.curdir\n',
        'os.path.abspath(os.curdir)\n',
        "os.sep.join([os.path.abspath(os.curdir),'logs'])\n",
        "foo = os.listdir(os.sep.join([os.path.abspath(os.curdir),'logs']))\n",
        'foo\n',
        "toks = str(foo[0]).split('_')\n",
        'toks\n',
        'last_3 = [str(t).isdigit() for t in toks[1:]]\n',
        'reload(_utils)\n',
        '_utils.isTimeStampForFileName(foo[0])\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/decode-for-travis.py': [''\
        'from lib import oodb\n',
        'print oodb.hex_digits()\n',
        'print oodb.hex_digits\n',
        'len(h)\n',
        'len(h)/2\n',
        'len(h_list)\n',
        'print s_h\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/makeZip.py': [''\
        'ignore.keys()[-1]\n',
        'ignore.keys()[-2]\n',
        'entry_points.keys()\n',
        'entry_points\n',
        'ignore.keys()\n',
        'f\n',
        'ignore.has_key(f)\n',
        '[os.path.basename(i) for i in ignore.keys()]\n',
        "_files = [os.sep.join([root,f]) for f in files if (f.endswith('.py'"\
        "))]\n",
        'set(l_files_to_ignore)\n',
        "l_files_to_ignore.findFirstContaining('test\\\\win32')\n",
        'l_files_to_ignore[35]\n',
        'd_entry_folders.keys()\n',
        "l_files_to_ignore.findAllContaining('test\\\\win32')\n",
        "foo = l_files_to_ignore.findAllContaining('test\\\\win32')\n",
        'len(foo)\n',
        "[f for f in foo if (f.endswith('.py'))]\n",
        "_f = _f.replace(_root_,'')\n",
        "_files = [os.sep.join([root,f]) for f in files if (not f.endswith('"\
        ".py'))]\n"],
                    u'file:Z:/python projects/@lib/lib/enum/Enum.py': ["dict"\
        "['_items_']\n",
        'dict\n',
        'Encryptors\n',
        'Encryptors.none\n',
        'Encryptors.simple\n',
        'str(Encryptors)\n',
        'Encryptors.mro\n',
        'Encryptors.__mro__\n',
        'x\n',
        'type(Encryptors.__mro__)\n',
        'Encryptors.__mro__[0]\n',
        'Encryptors.__mro__[1]\n',
        'len(Encryptors.__mro__)\n',
        'Encryptors.__mro__[-1]\n',
        "Encryptors['simple']=EnumInstance(Encryptors,'Encryptors','simple',"\
        "2)\n"],
                    u'file:Z:/python projects/@lib/lib/lists/ListWrapper.py': [''\
        'l[1:2]\n',
        'l.find(-1)\n',
        'l.find(100)\n',
        'l.find(1)\n',
        'l.index(2)\n',
        'l.find(2)\n',
        'isinstance(l,ListWrapper)\n',
        'type(l)\n',
        'from lib.misc import ObjectTypeName\n',
        'ObjectTypeName.typeClassName(l)\n',
        'ObjectTypeName.typeName(l)\n',
        "ObjectTypeName.typeClassName(l).find('ListWrapper')\n",
        'l.index(item)\n',
        'l.find(3)\n',
        'l.find(101)\n'],
                    u'file:Z:/python projects/@lib/lib/logging/standardLogging.py': [''\
        'LoggingLevels\n',
        'LoggingLevels._items_\n'],
                    u'file:Z:/python projects/@lib/lib/oodb/__init__.py': [""\
        "__classes_tags = [n.split('.')[:len(n.split('.'))-1] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]]\n",
        '[1,2,3][2:]\n',
        "__classes_tags = [n.split('.')[len(n.split('.'))-1:] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]][0]\n",
        "__classes_tags = [n.split('.')[len(n.split('.'))-1:] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]]\n",
        "__classes_tags = [class_tag(n.split('.')[len(n.split('.'))-1:]) for"\
        " n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        "_class_tag('OneTwo3')\n",
        "__classes_tags = [_class_tag(n.split('.')[len(n.split('.'))-1:][0])"\
        " for n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        "__classes_tags = ['_'+_class_tag(n.split('.')[len(n.split('.'))-1:]"\
        "[0]) for n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        '__classes_tags\n',
        '[1,2,3][1:]\n',
        '[1,2,3][:2]\n',
        "fname = '.'.join([toks[:len(toks)-1][0],toks[-1].split('.')[-1]])\n",
        'fname\n',
        "toks = fname.split('.')\n",
        'toks\n',
        'files = [f for f in os.listdir(dname) if (f.endswith(toks[-1]))]\n',
        'files\n',
        'files = [f for f in os.listdir(dname) if (f.startswith(toks[0])) an'\
        'd (f.endswith(toks[-1]))]\n',
        'dbx.fileName\n',
        'ObjectTypeName._typeName(item.__class__)\n'],
                    u'file:Z:/python projects/@lib/lib/sockets/SmtpMailsink.py': [""\
        "kwargs['callback']\n",
        'type(kwargs)\n',
        'd[const_body_symbol][0]\n',
        'self.mailboxFile is cStringIO\n',
        "rows.append(('SUBJECT: %s' % (subj)))\n",
        "rows.append(tuple('SUBJECT: %s' % (subj)))\n",
        'rows = []\n',
        "rows.append(tuple(['SUBJECT: %s' % (subj)]))\n",
        'rows\n',
        'idContent.toHtml()\n',
        'oohtml\n',
        'oohtml.DOCTYPE_40_TRANSITIONAL\n',
        'd[const_body_symbol]\n',
        '_f = toks.findFirstContaining(const_from_symbol)\n',
        '_f\n',
        't[_f].strip()\n',
        'd[const_to_symbol]\n',
        'd[const_to_symbol][-1]\n',
        'self.__class__\n',
        'str(self.__class__)\n',
        'ObjectTypeName__typeName(self.__class__)\n']},
        'sel-line': 1,
        'sel-line-start': 79,
        'selection_end': 83,
        'selection_start': 83},
                       loc('unknown:<untitled> #22'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['from lib.misc import _utils\n',
                           'xrange(0,10)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py': [""\
        "dt = ApexDatetime.fromSfIso('2007-11-13T08:30:45')\n",
        'dt\n',
        'str(dt)\n',
        'foo = dbx[dbx.keys()[0]]\n',
        'type(foo)\n',
        'len(foo)\n',
        'evt.case_list\n',
        "toks = name.split('_')\n",
        'key = toks[0]\n',
        "subkey = '_'.join(toks[1:])\n",
        'self.__dict__[key][subkey]\n',
        'evt.timestamp\n',
        'foo = evt.asDict()\n',
        'v.asDict\n',
        'type(v.asDict)\n',
        'ObjectTypeName.typeName(v.asDict)\n',
        'len(dbx)\n',
        'import urllib2\n',
        'foo = urllib2.splithost(self.sfdc.endpoint)\n',
        'self.sfdc.endpoint\n',
        'import urllib\n',
        'urllib.splithost(self.sfdc.endpoint)\n',
        "foo = self.sfdc.endpoint.split('//')\n",
        "foo = self.sfdc.endpoint.split('//')[-1].split('/')\n",
        "foo = self.sfdc.endpoint.split('//')[-1].split('/')[0]\n",
        "foo.split('.')\n",
        "toks = foo.split('.')\n",
        "toks[0] = toks[0].split('-')[0]\n",
        "host = '.'.join(toks)\n",
        'host\n',
        'sys.argv\n',
        '_cases_[aCase]\n',
        'dbx.keys()\n',
        '_case.keys()\n',
        '_case.keys()[0]\n',
        '_case[_case.keys()[0]]\n',
        'foo = _case[_case.keys()[0]]\n',
        "foo['Id']\n",
        'aChg.Id\n',
        "aChg['Id']\n",
        'aUser.keys()\n',
        'aUser\n',
        'aUser.items()\n',
        '[n for n in aUser.items()]\n',
        "aUser['Name']\n",
        '_chgs\n',
        'case\n',
        'd_fields.keys()\n',
        'soql\n',
        'ret,_ret=ret\n',
        "d_fields_of_interest[aChg['ChangedFieldName__c']]\n",
        'fCase = ret[ret.keys()[0]]\n',
        "fCase[d_fields_of_interest[aChg['ChangedFieldName__c']]]\n",
        "newValue = fCase[d_fields_of_interest[aChg['ChangedFieldName__c']]]"\
        "\n",
        'newValue\n',
        "str(aCaseWatcher['LastModifiedDate'])\n",
        "_utils.getFromDateTimeStr(str(aCaseWatcher['LastModifiedDate']))\n",
        '_utils.getFromDateTimeStr(_utils.timeStamp())\n',
        'foo = _utils.getFromDateTimeStr(_utils.timeStamp())\n',
        'foo - datetime.timedelta(days=5)\n',
        'import random\n',
        'random.randint(1,14)\n',
        'foo\n',
        '_utils.getAsDateTimeStr(foo)\n',
        '_chgs[0].keys()\n',
        'fCaseComment = _ret[-1][_ret[-1].keys()[-1]]\n',
        'fCaseComment\n',
        '_anchor.strip()\n',
        '_anchor\n',
        'threadQ.__class__\n',
        'threadQ.__class__ in [ThreadQueue,Queue]\n',
        'from lib.misc import ObjectTypeName\n',
        'ObjectTypeName.objectSignature(self)\n',
        'from lib.misc import _utils\n',
        '_utils.funcName()\n',
        'ObjectTypeName.typeClassName(d)\n',
        'ObjectTypeName.typeClassName(v[0])\n',
        'cls\n',
        'self.method\n',
        '__name__\n',
        '__value__\n',
        'len(_emailPool)\n',
        'len(evt.case_list)\n',
        'last_run_time\n',
        'toks = last_run_time.split(os.sep)\n',
        'toks\n',
        "_toks = toks[-1].split('_')\n",
        "toks[-1] = _toks[0]+'T'+':'.join(_toks[:1])\n",
        '_toks[:1]\n',
        '_toks\n',
        '_toks[1:]\n',
        "toks[-1] = _toks[0]+'T'+':'.join(_toks[1:])\n",
        'toks[-1]\n',
        'func(args)\n',
        'os.stat(f_time_source)[ST_MTIME]\n',
        '_utils.dateFromSeconds(os.stat(f_time_source)[ST_MTIME],useLocalTim'\
        'e=True)\n',
        '_utils.getAsDateTimeStr(_utils.dateFromSeconds(os.stat(f_time_sourc'\
        'e)[ST_MTIME],useLocalTime=True))\n',
        'str(_utils.getAsDateTimeStr(_utils.dateFromSeconds(os.stat(f_time_s'\
        'ource)[ST_MTIME],useLocalTime=True)))\n',
        'str(_utils.getAsSimpleDateStr(_utils.dateFromSeconds(os.stat(f_time'\
        '_source)[ST_MTIME],useLocalTime=True)))\n',
        'str(_utils.getAsSimpleDateStr(_utils.dateFromSeconds(os.stat(f_time'\
        '_source)[ST_MTIME],useLocalTime=True),fmt=_utils._formatTimeStr()))'\
        '\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/ContactsWalker.py': [''\
        'recs = [match.group() for match in _re.finditer(l)]\n',
        'recs = [match.group() for match in _re.finditer(l.strip())]\n',
        'lem(recs)\n',
        'len(map)\n',
        'recsa\n',
        'recs[i+1]\n',
        'recs\n',
        'self.__rows__\n',
        'csv_header_toks\n',
        'd.fieldnames\n',
        'csv.filename\n',
        "csv.header.index('Email')\n",
        "csv.header[csv.header.index('Email')]\n",
        'len(csv.rows)\n',
        'rec\n',
        'c\n',
        'from lib.misc import _utils\n',
        "_utils.getAsSimpleDateStr('2008-07-14',fmt='%Y-%m-%d')\n",
        "_utils.getFromDateTimeStr('2008-07-14',format='%Y-%m-%d').date()\n",
        "_utils.getFromDateTimeStr('None',format='%Y-%m-%d').date()\n",
        'csv.header\n',
        "csv.rowByColumn('company')\n",
        "csv.column('company')\n",
        'self.header\n',
        'len(self.header)\n',
        'len(recs)\n',
        'l\n',
        'csv.problem_rows\n',
        '[asCSV(l) for l in csv.problem_rows]\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/MailEvent.py': [''\
        '_utils.timeStamp()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/MudflowSanityCheck.py': [''\
        'doc.childNodes()\n',
        'doc.childNodes\n',
        'doc.getElementsByTagName("*")\n',
        '_data = doc.getElementsByTagName("*")\n',
        'getAttrsFromNode(_data[0])\n',
        'getAttrsFromNode(d)\n',
        '_data\n',
        'd\n',
        'd.nodeName\n',
        'd.childNodes\n',
        'dom.childNodes\n',
        'dom.nodeName\n',
        'child.nodeName\n',
        '_child.data\n',
        '_child.wholeText\n',
        '_child.nodeValue\n',
        'xml_utils.getNodeText(_child)\n',
        '_child\n',
        '_child.localName\n',
        '_child.\n',
        '_child.toxml()\n',
        '_child.nodeName\n',
        '_child.attributes\n',
        'xml_utils.getAttrsFromNode(_child)\n',
        '_child.childNodes\n',
        'xml_utils.getAllNodeText(__child)\n',
        '__child.hasChildNodes\n',
        '__child.hasChildNodes()\n',
        'xml_utils.getAllNodeText(__child.childNodes)\n',
        'd_nodes.__class__\n',
        'ObjectTypeName__typeName(d_nodes.__class__)\n',
        'ObjectTypeName__typeName(d_nodes)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/SCM_Walker.py': [''\
        '_fnameIn.split(branch)[-1]\n',
        'cr_list = [n.group() for n in re.finditer(r"(?:[0-9]{8}(_|\\.))|(?:'\
        '[0-9]{7}(_|\\.))|(?:[0-9]{6}(_|\\.))|(?:[0-9]{5}(_|\\.))|(?:[0-9]{4'\
        '}(_|\\.))", base_k)]\n',
        '[(rk,rv) for rk,rv in ret.iteritems()]\n',
        'date_k\n',
        'from lib.misc import _utils\n',
        '_utils.getAsDateTimeStr(date_k)\n',
        'import time\n',
        'time.strptime(date_k, _utils._formatTimeStr())\n',
        'time.strftime(_utils._formatTimeStr(), date_k)\n',
        'secs = time.gmtime(date_k)\n',
        'secs\n',
        'time.strftime(_utils._formatTimeStr(), secs)\n',
        'type(date_k)\n',
        's.st_mtime\n',
        'stat_k = ros_stat(full_k)\n',
        'stat_k\n',
        '_stat_k\n',
        '_lstat_k\n',
        'full_k\n',
        'args.keys()\n',
        'sys.argv[-1]\n',
        'PickleMethods.useStrings\n',
        'PickleMethods.useStrings.__value__\n',
        "','.join(['\"%s\"'%(t) for t in item if (len(str(t)) > 0)]) if (isi"\
        "nstance(item,tuple)) or (isinstance(item,list)) else item\n",
        't = os.path.splitext(f)\n',
        't\n',
        "(os.path.splitext(f)[-1].lower() in ['.csv','.xls'])\n",
        'from lib.parsers.CSV import CSV\n',
        'cr_list\n',
        'ret.keys()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/csv-tester.py': [""\
        "foo = \"talus1.0,TALUS1.0_ABHIJIT_LOGIC.FNET_CHKPNT_1,SCM-Candidate"\
        "-Building,4/7/2008 16:04,6/27/2008 0:00,80.33,,TALUS1.0_RTL_LOGIC_C"\
        "HKPNT_17,00100148,\".split(',')\n",
        'foo\n',
        'len(foo)\n',
        '_guide\n',
        'len(_guide)\n',
        'lines[0]\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/dbtest.py': [''\
        'dname\n',
        'os.listdir(dname)\n',
        '[ObjectTypeName.typeName(cls) for cls in __classes]\n',
        '[ObjectTypeName._typeName(cls) for cls in __classes]\n'],
                    u'file:Z:/python projects/@lib/lib/lists/ListWrapper.py': [''\
        'l[1:2]\n',
        'l.find(-1)\n',
        'l.find(100)\n',
        'l.find(1)\n',
        'l.index(2)\n',
        'l.find(2)\n',
        'isinstance(l,ListWrapper)\n',
        'type(l)\n',
        'from lib.misc import ObjectTypeName\n',
        'ObjectTypeName.typeClassName(l)\n',
        'ObjectTypeName.typeName(l)\n',
        "ObjectTypeName.typeClassName(l).find('ListWrapper')\n",
        'l.index(item)\n',
        'l.find(3)\n',
        'l.find(101)\n'],
                    u'file:Z:/python projects/@lib/lib/oodb/__init__.py': [""\
        "__classes_tags = [n.split('.')[:len(n.split('.'))-1] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]]\n",
        '[1,2,3][2:]\n',
        "__classes_tags = [n.split('.')[len(n.split('.'))-1:] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]][0]\n",
        "__classes_tags = [n.split('.')[len(n.split('.'))-1:] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]]\n",
        "__classes_tags = [class_tag(n.split('.')[len(n.split('.'))-1:]) for"\
        " n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        "_class_tag('OneTwo3')\n",
        "__classes_tags = [_class_tag(n.split('.')[len(n.split('.'))-1:][0])"\
        " for n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        "__classes_tags = ['_'+_class_tag(n.split('.')[len(n.split('.'))-1:]"\
        "[0]) for n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        '__classes_tags\n',
        '[1,2,3][1:]\n',
        '[1,2,3][:2]\n',
        "fname = '.'.join([toks[:len(toks)-1][0],toks[-1].split('.')[-1]])\n",
        'fname\n',
        "toks = fname.split('.')\n",
        'toks\n',
        'files = [f for f in os.listdir(dname) if (f.endswith(toks[-1]))]\n',
        'files\n',
        'files = [f for f in os.listdir(dname) if (f.startswith(toks[0])) an'\
        'd (f.endswith(toks[-1]))]\n',
        'dbx.fileName\n',
        'ObjectTypeName._typeName(item.__class__)\n'],
                    u'file:Z:/python projects/@lib/lib/sockets/SmtpMailsink.py': [""\
        "kwargs['callback']\n",
        'type(kwargs)\n',
        'd[const_body_symbol][0]\n',
        'self.mailboxFile is cStringIO\n',
        "rows.append(('SUBJECT: %s' % (subj)))\n",
        "rows.append(tuple('SUBJECT: %s' % (subj)))\n",
        'rows = []\n',
        "rows.append(tuple(['SUBJECT: %s' % (subj)]))\n",
        'rows\n',
        'idContent.toHtml()\n',
        'oohtml\n',
        'oohtml.DOCTYPE_40_TRANSITIONAL\n',
        'd[const_body_symbol]\n',
        '_f = toks.findFirstContaining(const_from_symbol)\n',
        '_f\n',
        't[_f].strip()\n',
        'd[const_to_symbol]\n',
        'd[const_to_symbol][-1]\n',
        'self.__class__\n',
        'str(self.__class__)\n',
        'ObjectTypeName__typeName(self.__class__)\n'],
                    u'file:Z:/python projects/pySSH_Monitor/SSH_Sys_Mon.py': [''\
        'ObjectTypeName.__typeName(self)\n',
        '[_t_ for _t_ in t.lower().split(os.sep) if (len(_t_.strip()) > 0)]\n',
        'cname = _utils.getComputerName().lower()\n'],
                    u'file:z:/python projects/cerealizer-tests/test1.py': [''\
        'from lib.misc import ObjectTypeName\n',
        'o_l = ObjectTypeName.typeClassName(l)\n',
        'o_l = ObjectTypeName.typeClassName(l[i])\n',
        'o_l2 = ObjectTypeName.typeClassName(l2[i])\n']},
        'sel-line': 4,
        'sel-line-start': 174,
        'selection_end': 178,
        'selection_start': 178},
                       loc('unknown:<untitled> #28'): {'attrib-starts': [],
        'first-line': 1,
        'folded-linenos': [],
        'history': {},
        'sel-line': 17,
        'sel-line-start': 392,
        'selection_end': 392,
        'selection_start': 392},
                       loc('unknown:<untitled> #24'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #20'): {'attrib-starts': [],
        'first-line': 46,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 5069,
        'selection_start': 0},
                       loc('unknown:<untitled> #21'): {'attrib-starts': [],
        'first-line': 9980,
        'folded-linenos': [],
        'history': {},
        'sel-line': 9999,
        'sel-line-start': 11086214,
        'selection_end': 11086382,
        'selection_start': 11086382},
                       loc('unknown:<untitled> #23'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #27'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['from lib.misc import _utils\n',
                           'xrange(0,10)\n',
                           "print '\\n'.join(['\"%s\",' % (s) for s in _util"\
                           "s.sort(products_list.keys())])\n",
                           'foo = _utils.getFromDateTimeStr(_utils.timeStamp'\
                           'LocalTime())\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/pyax_code/soql_query.py': [''\
        'd_meta.fieldnames\n',
        'd_meta.getFieldSoapType(d_meta.fieldnames[0])\n',
        'd_meta.getFieldSoapType(d_meta.fieldnames[1])\n',
        "d_meta.getFieldSoapType('junk')\n",
        "str(d_meta.getFieldSoapType('junk'))\n"],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/CaseWatcherList2.py': [''\
        'type(delimiters)\n',
        'foo = timeStamp(format=format,useLocalTime=useLocalTime)\n',
        'timeStampForFileName(format=format,useLocalTime=True,delimiters=del'\
        'imiters)\n',
        'logFileName\n',
        'self.stream.name\n',
        '[ret,_ret for ret,_ret in o_data]\n',
        '[(ret,_ret) for ret,_ret in o_data]\n',
        'o_data\n',
        'len(o_data)\n',
        'type(o_data)\n',
        'o_data[0]\n',
        'o_data[1]\n',
        'ret,_ret = o_data\n',
        'ret\n',
        '_ret\n',
        'datum = ([lists.HashedLists2(ret_item) for ret_item in ret],[lists.'\
        'HashedLists2(_ret_item) for _ret_item in _ret])\n',
        'datum[0][0][0]\n',
        'datum[0][0]\n',
        'dx.metadata\n',
        "dx.metadata['Product__c']\n",
        "dx.metadata['fields']\n",
        "dx.metadata['fields']['Product__c']\n",
        "dx.metadata['fields']['Product__c']['picklistValues']\n",
        'products_list.keys()\n',
        "'\\n'.join(products_list.keys())\n",
        "print '\\n'.join(products_list.keys())\n",
        "print '\\n'.join(_utils.sort(products_list.keys()))\n",
        "dx = sfdc.describeSObject('Case')\n",
        "products_list = dx.metadata['fields']['Product__c']['picklistValues"\
        "']\n",
        "print '\\n'.join(['\"%s\",' % (s) for s in _utils.sort(products_lis"\
        "t.keys())])\n",
        "'\\n'.join([t[0] for t in _latestFolders])\n",
        "print '\\n'.join([t[0] for t in _latestFolders])\n",
        '_utils.getFromTimeStampForFileName(_latestFolders[0][0])\n',
        '_latestFolders[0][0]\n',
        '_latestFolders[0][1]\n',
        '_latestFolders[0][0].split(os.sep)\n',
        '_latestFolders[0][0].split(os.sep)[-1]\n',
        "toks = ts.split('_')\n",
        'ts = _latestFolders[0][0].split(os.sep)[-1]\n',
        "toks = str(ts).split('_')\n",
        't = toks[1:]\n',
        't[]0\n',
        't[0]\n',
        't[0][0:1]\n',
        't[0][0:2]\n',
        't\n',
        'len(t[0])\n',
        'tt = []\n',
        'tt.append(t[0][i:i+2])\n',
        'for i in xrange(0,len(t[0]),2):\n',
        '\ttt.append(t[0][i:i+2])\n',
        'tt\n',
        'reload(_utils)\n',
        '_utils.getFromTimeStampForFileName(_latestFolders[0][0].split(os.se'\
        'p)[-1])\n',
        'ts = _utils.getFromTimeStampForFileName(_latestFolders[0][0].split('\
        'os.sep)[-1])\n',
        'ts\n',
        'time.time()\n',
        'datetime.datetime.now()\n',
        'ts < datetime.datetime.now()\n',
        'now = datetime.datetime.now()\n',
        'now\n',
        'from datetime import timedelta\n',
        'diff = timedelta(days=7)\n',
        'diff\n',
        'now - diff\n',
        'ts < (now - diff)\n',
        'ids,_chgs = chgs\n',
        'ids\n',
        '_chgs\n',
        "_chgs[0]['CreatedDate']\n",
        "dt = _chgs[0]['CreatedDate']\n",
        'dt.isoformat()\n',
        '_utils.getFromDateTimeStr(dt.isoformat())\n',
        "dt = _chgs[0]['CreatedDate'].split('+')[0]\n",
        "dt = _chgs[0]['CreatedDate'].isoformat().split('+')[0]\n",
        'dt\n',
        '_utils.getFromDateTimeStr(dt)\n',
        '_utils.timeStampLocalTime()\n',
        '_utils.getFromDateTimeStr(_utils.timeStampLocalTime())\n',
        "ret[ret.keys()[0]]['Description']\n",
        'd_fields_of_interest\n',
        'd_fields_of_interest.keys()\n',
        "aChg['ChangedFieldName__c']\n",
        'len(ret)\n',
        'self.d_caseWatchers\n',
        "aUser[aUser.keys()[0]]['Name']\n",
        'cw.keys()\n',
        'sys.argv[0]\n',
        'fpath = os.path.dirname(sys.argv[0])\n',
        'from lib.hash import lists\n',
        'h_Content.tag_TABLE(_rows)\n',
        'h_Content\n',
        "toks = template_contents.split('\\n')\n",
        'toks\n',
        "_table = _table.replace('\\n','')\n",
        'table\n',
        "toks = _table.split('\\t')\n",
        'len(toks)\n',
        'aUser.keys()\n',
        '_cw.keys()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/ContactsWalker.py': [''\
        'recs = [match.group() for match in _re.finditer(l)]\n',
        'recs = [match.group() for match in _re.finditer(l.strip())]\n',
        'lem(recs)\n',
        'len(map)\n',
        'recsa\n',
        'recs[i+1]\n',
        'recs\n',
        'self.__rows__\n',
        'csv_header_toks\n',
        'd.fieldnames\n',
        'csv.filename\n',
        "csv.header.index('Email')\n",
        "csv.header[csv.header.index('Email')]\n",
        'len(csv.rows)\n',
        'rec\n',
        'c\n',
        'from lib.misc import _utils\n',
        "_utils.getAsSimpleDateStr('2008-07-14',fmt='%Y-%m-%d')\n",
        "_utils.getFromDateTimeStr('2008-07-14',format='%Y-%m-%d').date()\n",
        "_utils.getFromDateTimeStr('None',format='%Y-%m-%d').date()\n",
        'csv.header\n',
        "csv.rowByColumn('company')\n",
        "csv.column('company')\n",
        'self.header\n',
        'len(self.header)\n',
        'len(recs)\n',
        'l\n',
        'csv.problem_rows\n',
        '[asCSV(l) for l in csv.problem_rows]\n',
        "d_passwords['rhorn@magma-da.com']\n",
        'len(users)\n',
        'users[0].keys()\n',
        "flds = d.metadata['fields']\n",
        'flds.keys()\n',
        'b_validFor\n',
        'type(b_validFor)\n',
        'len(b_validFor)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/DataWalker.py': [''\
        '_analysisData\n',
        'row\n',
        '_analysisColNum\n',
        'csv.header[_analysisColNum]\n',
        'link\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/MailEvent.py': [''\
        '_utils.timeStamp()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/MudflowSanityCheck.py': [''\
        'doc.childNodes()\n',
        'doc.childNodes\n',
        'doc.getElementsByTagName("*")\n',
        '_data = doc.getElementsByTagName("*")\n',
        'getAttrsFromNode(_data[0])\n',
        'getAttrsFromNode(d)\n',
        '_data\n',
        'd\n',
        'd.nodeName\n',
        'd.childNodes\n',
        'dom.childNodes\n',
        'dom.nodeName\n',
        'child.nodeName\n',
        '_child.data\n',
        '_child.wholeText\n',
        '_child.nodeValue\n',
        'xml_utils.getNodeText(_child)\n',
        '_child\n',
        '_child.localName\n',
        '_child.\n',
        '_child.toxml()\n',
        '_child.nodeName\n',
        '_child.attributes\n',
        'xml_utils.getAttrsFromNode(_child)\n',
        '_child.childNodes\n',
        'xml_utils.getAllNodeText(__child)\n',
        '__child.hasChildNodes\n',
        '__child.hasChildNodes()\n',
        'xml_utils.getAllNodeText(__child.childNodes)\n',
        'd_nodes.__class__\n',
        'ObjectTypeName__typeName(d_nodes.__class__)\n',
        'ObjectTypeName__typeName(d_nodes)\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/SCM_Walker.py': [''\
        '_fnameIn.split(branch)[-1]\n',
        'cr_list = [n.group() for n in re.finditer(r"(?:[0-9]{8}(_|\\.))|(?:'\
        '[0-9]{7}(_|\\.))|(?:[0-9]{6}(_|\\.))|(?:[0-9]{5}(_|\\.))|(?:[0-9]{4'\
        '}(_|\\.))", base_k)]\n',
        '[(rk,rv) for rk,rv in ret.iteritems()]\n',
        'date_k\n',
        'from lib.misc import _utils\n',
        '_utils.getAsDateTimeStr(date_k)\n',
        'import time\n',
        'time.strptime(date_k, _utils._formatTimeStr())\n',
        'time.strftime(_utils._formatTimeStr(), date_k)\n',
        'secs = time.gmtime(date_k)\n',
        'secs\n',
        'time.strftime(_utils._formatTimeStr(), secs)\n',
        'type(date_k)\n',
        's.st_mtime\n',
        'stat_k = ros_stat(full_k)\n',
        'stat_k\n',
        '_stat_k\n',
        '_lstat_k\n',
        'full_k\n',
        'args.keys()\n',
        'sys.argv[-1]\n',
        'PickleMethods.useStrings\n',
        'PickleMethods.useStrings.__value__\n',
        "','.join(['\"%s\"'%(t) for t in item if (len(str(t)) > 0)]) if (isi"\
        "nstance(item,tuple)) or (isinstance(item,list)) else item\n",
        't = os.path.splitext(f)\n',
        't\n',
        "(os.path.splitext(f)[-1].lower() in ['.csv','.xls'])\n",
        'from lib.parsers.CSV import CSV\n',
        'cr_list\n',
        'ret.keys()\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/sfapi2/sflib/smtpMailsink.py': [''\
        'd[SmtpMailsink.const_body_symbol]\n',
        'd[SmtpMailsink.const_subject_symbol]\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/csv-tester.py': [""\
        "foo = \"talus1.0,TALUS1.0_ABHIJIT_LOGIC.FNET_CHKPNT_1,SCM-Candidate"\
        "-Building,4/7/2008 16:04,6/27/2008 0:00,80.33,,TALUS1.0_RTL_LOGIC_C"\
        "HKPNT_17,00100148,\".split(',')\n",
        'foo\n',
        'len(foo)\n',
        '_guide\n',
        'len(_guide)\n',
        'lines[0]\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/dbtest.py': [''\
        'dname\n',
        'os.listdir(dname)\n',
        '[ObjectTypeName.typeName(cls) for cls in __classes]\n',
        '[ObjectTypeName._typeName(cls) for cls in __classes]\n',
        'import sys\n',
        'import os\n',
        'os.curdir\n',
        'os.path.abspath(os.curdir)\n',
        "os.sep.join([os.path.abspath(os.curdir),'logs'])\n",
        "foo = os.listdir(os.sep.join([os.path.abspath(os.curdir),'logs']))\n",
        'foo\n',
        "toks = str(foo[0]).split('_')\n",
        'toks\n',
        'last_3 = [str(t).isdigit() for t in toks[1:]]\n',
        'reload(_utils)\n',
        '_utils.isTimeStampForFileName(foo[0])\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/decode-for-travis.py': [''\
        'from lib import oodb\n',
        'print oodb.hex_digits()\n',
        'print oodb.hex_digits\n',
        'len(h)\n',
        'len(h)/2\n',
        'len(h_list)\n',
        'print s_h\n'],
                    u'file:Z:/@myMagma/python-local-new-trunk/test/win32/makeZip.py': [''\
        'ignore.keys()[-1]\n',
        'ignore.keys()[-2]\n',
        'entry_points.keys()\n',
        'entry_points\n',
        'ignore.keys()\n',
        'f\n',
        'ignore.has_key(f)\n',
        '[os.path.basename(i) for i in ignore.keys()]\n',
        "_files = [os.sep.join([root,f]) for f in files if (f.endswith('.py'"\
        "))]\n",
        'set(l_files_to_ignore)\n',
        "l_files_to_ignore.findFirstContaining('test\\\\win32')\n",
        'l_files_to_ignore[35]\n',
        'd_entry_folders.keys()\n',
        "l_files_to_ignore.findAllContaining('test\\\\win32')\n",
        "foo = l_files_to_ignore.findAllContaining('test\\\\win32')\n",
        'len(foo)\n',
        "[f for f in foo if (f.endswith('.py'))]\n",
        "_f = _f.replace(_root_,'')\n"],
                    u'file:Z:/python projects/@lib/lib/enum/Enum.py': ["dict"\
        "['_items_']\n",
        'dict\n',
        'Encryptors\n',
        'Encryptors.none\n',
        'Encryptors.simple\n',
        'str(Encryptors)\n',
        'Encryptors.mro\n',
        'Encryptors.__mro__\n',
        'x\n',
        'type(Encryptors.__mro__)\n',
        'Encryptors.__mro__[0]\n',
        'Encryptors.__mro__[1]\n',
        'len(Encryptors.__mro__)\n',
        'Encryptors.__mro__[-1]\n',
        "Encryptors['simple']=EnumInstance(Encryptors,'Encryptors','simple',"\
        "2)\n"],
                    u'file:Z:/python projects/@lib/lib/lists/ListWrapper.py': [''\
        'l[1:2]\n',
        'l.find(-1)\n',
        'l.find(100)\n',
        'l.find(1)\n',
        'l.index(2)\n',
        'l.find(2)\n',
        'isinstance(l,ListWrapper)\n',
        'type(l)\n',
        'from lib.misc import ObjectTypeName\n',
        'ObjectTypeName.typeClassName(l)\n',
        'ObjectTypeName.typeName(l)\n',
        "ObjectTypeName.typeClassName(l).find('ListWrapper')\n",
        'l.index(item)\n',
        'l.find(3)\n',
        'l.find(101)\n'],
                    u'file:Z:/python projects/@lib/lib/logging/standardLogging.py': [''\
        'LoggingLevels\n',
        'LoggingLevels._items_\n'],
                    u'file:Z:/python projects/@lib/lib/oodb/__init__.py': [""\
        "__classes_tags = [n.split('.')[:len(n.split('.'))-1] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]]\n",
        '[1,2,3][2:]\n',
        "__classes_tags = [n.split('.')[len(n.split('.'))-1:] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]][0]\n",
        "__classes_tags = [n.split('.')[len(n.split('.'))-1:] for n in [Obje"\
        "ctTypeName.typeName(cls) for cls in __classes]]\n",
        "__classes_tags = [class_tag(n.split('.')[len(n.split('.'))-1:]) for"\
        " n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        "_class_tag('OneTwo3')\n",
        "__classes_tags = [_class_tag(n.split('.')[len(n.split('.'))-1:][0])"\
        " for n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        "__classes_tags = ['_'+_class_tag(n.split('.')[len(n.split('.'))-1:]"\
        "[0]) for n in [ObjectTypeName.typeName(cls) for cls in __classes]]\n",
        '__classes_tags\n',
        '[1,2,3][1:]\n',
        '[1,2,3][:2]\n',
        "fname = '.'.join([toks[:len(toks)-1][0],toks[-1].split('.')[-1]])\n",
        'fname\n',
        "toks = fname.split('.')\n",
        'toks\n',
        'files = [f for f in os.listdir(dname) if (f.endswith(toks[-1]))]\n',
        'files\n',
        'files = [f for f in os.listdir(dname) if (f.startswith(toks[0])) an'\
        'd (f.endswith(toks[-1]))]\n',
        'dbx.fileName\n',
        'ObjectTypeName._typeName(item.__class__)\n'],
                    u'file:Z:/python projects/@lib/lib/sockets/SmtpMailsink.py': [""\
        "kwargs['callback']\n",
        'type(kwargs)\n',
        'd[const_body_symbol][0]\n',
        'self.mailboxFile is cStringIO\n',
        "rows.append(('SUBJECT: %s' % (subj)))\n",
        "rows.append(tuple('SUBJECT: %s' % (subj)))\n",
        'rows = []\n',
        "rows.append(tuple(['SUBJECT: %s' % (subj)]))\n",
        'rows\n',
        'idContent.toHtml()\n',
        'oohtml\n',
        'oohtml.DOCTYPE_40_TRANSITIONAL\n',
        'd[const_body_symbol]\n',
        '_f = toks.findFirstContaining(const_from_symbol)\n',
        '_f\n',
        't[_f].strip()\n',
        'd[const_to_symbol]\n',
        'd[const_to_symbol][-1]\n',
        'self.__class__\n',
        'str(self.__class__)\n',
        'ObjectTypeName__typeName(self.__class__)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #25'): {'attrib-starts': [],
        'first-line': 90,
        'folded-linenos': [],
        'history': {},
        'sel-line': 106,
        'sel-line-start': 17168,
        'selection_end': 17168,
        'selection_start': 17168}}
proj.env-vars = {None: ('default',
                        ['']),
                 loc('../@lib/lib/decorators/addto.py'): ('project',
        ['']),
                 loc('../@lib/lib/enum/Enum.py'): ('project',
        ['']),
                 loc('compileall.py'): ('project',
        ['']),
                 loc('pyMonit.py'): ('project',
                                     ['']),
                 loc('test-auth.py'): ('project',
                                       ['']),
                 loc('tester.py'): ('project',
                                    [''])}
proj.pypath = {None: ('custom',
                      'c:\\python25;Z:\\python projects\\@lib;')}
search.search-history = [u'fpath',
                         u'subprocess.Popen',
                         u'MailServer',
                         u'buf_details.',
                         u'StringIO',
                         u'fOut',
                         u'buf_details',
                         u'socket',
                         u'SpawnProgram',
                         u'process_tasklet',
                         u'+++',
                         u'Cannot perform data retention policy for tasklet',
                         u'.log',
                         u'oodb',
                         u'filename',
                         u'getNormalizedDaemonNamespaces',
                         u'(Enum)',
                         u'NormalizedKeyOptions',
                         u'PickleMethods',
                         u'CompressionOption']
search.search-scope-history = [loc('../../@myFiles/@Python/Python Google App Engine SDK/Linux/google_appengine'),
                               loc('file:C:/Python25/Lib'),
                               loc('../../#zDisk/#www.instanttrafficschool.com/06-08-2008'),
                               loc('..')]

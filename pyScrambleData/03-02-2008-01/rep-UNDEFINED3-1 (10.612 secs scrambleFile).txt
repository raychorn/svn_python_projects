         1632 function calls in 10.612 CPU seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.003    0.003   10.613   10.613 {execfile}
        1   10.459   10.459   10.609   10.609 ScrambleData.py:2(<module>)
        1    0.055    0.055    0.109    0.109 __init__.py:16(<module>)
        1    0.017    0.017    0.037    0.037 core.py:34(full)
        1    0.024    0.024    0.033    0.033 support.py:9(<module>)
        1    0.021    0.021    0.021    0.021 core.py:18(<module>)
        1    0.020    0.020    0.020    0.020 profiler.py:10(<module>)
        1    0.008    0.008    0.008    0.008 kdictproxy.py:5(<module>)
        1    0.001    0.001    0.005    0.005 scramblelib.py:2(<module>)
        2    0.001    0.000    0.003    0.001 {method 'join' of 'str' objects}
      257    0.001    0.000    0.002    0.000 scramblelib.py:7(<genexpr>)
     1024    0.001    0.000    0.001    0.000 {chr}
      257    0.001    0.000    0.001    0.000 scramblelib.py:9(<genexpr>)
        7    0.000    0.000    0.000    0.000 support.py:170(patch)
        1    0.000    0.000    0.000    0.000 profiler.py:141(run)
        1    0.000    0.000    0.000    0.000 profiler.py:35(go)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:285(PassiveProfiler)
        1    0.000    0.000    0.000    0.000 profiler.py:153(start)
        1    0.000    0.000    0.000    0.000 new.py:5(<module>)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 atexit.py:6(<module>)
       14    0.000    0.000    0.000    0.000 {setattr}
       14    0.000    0.000    0.000    0.000 {getattr}
        1    0.000    0.000    0.000    0.000 {psyco._psyco.statread}
        1    0.000    0.000    0.000    0.000 profiler.py:239(do_start)
        3    0.000    0.000    0.000    0.000 {hasattr}
        5    0.000    0.000    0.000    0.000 __future__.py:71(__init__)
        1    0.000    0.000    0.000    0.000 atexit.py:37(register)
        1    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {psyco._psyco.profiling}
        1    0.000    0.000    0.000    0.000 {thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        1    0.000    0.000    0.000    0.000 profiler.py:138(Profiler)
        1    0.000    0.000    0.000    0.000 ScrambleData.py:6(scrambleFile)
        1    0.000    0.000    0.000    0.000 kdictproxy.py:108(compactdictproxy)
        1    0.000    0.000    0.000    0.000 {strop.maketrans}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {len}
        1    0.000    0.000    0.000    0.000 __future__.py:70(_Feature)
        1    0.000    0.000    0.000    0.000 support.py:15(warning)
        1    0.000    0.000    0.000    0.000 support.py:74(PythonFrame)
        1    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 support.py:102(PsycoFrame)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 profiler.py:271(ActiveProfiler)
        1    0.000    0.000    0.000    0.000 profiler.py:237(FullCompiler)
        1    0.000    0.000    0.000    0.000 profiler.py:255(ChargeProfiler)
        1    0.000    0.000    0.000    0.000 {built-in method acquire}
        1    0.000    0.000    0.000    0.000 profiler.py:246(RunOnly)
        1    0.000    0.000    0.000    0.000 profiler.py:329(ActivePassiveProfiler)
        1    0.000    0.000    0.000    0.000 support.py:70(Frame)
        1    0.000    0.000    0.000    0.000 {method 'has_key' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {psyco._psyco.memory}
        1    0.000    0.000    0.000    0.000 {built-in method release}


